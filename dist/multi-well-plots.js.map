{"version":3,"file":"multi-well-plots.js","mappings":"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AkG,YAAY,aAAa,MAAM,KAAK,UAAU,UAAU,WAAW,UAAU,KAAK,MAAM,WAAW,KAAK,KAAK,UAAU,UAAU,WAAW,WAAW,KAAK,MAAM,WAAW,UAAU,WAAW,KAAK,MAAM,YAAY,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,WAAW,WAAW,KAAK,MAAM,WAAW,WAAW,KAAK,MAAM,WAAW,UAAU,UAAU,KAAK,MAAM,WAAW,UAAU,WAAW,UAAU,KAAK,MAAM,WAAW,WAAW,WAAW,KAAK,MAAM,WAAW,UAAU,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,WAAW,KAAK,MAAM,WAAW,WAAW,KAAK,MAAM,WAAW,WAAW,KAAK,MAAM,WAAW,WAAW,KAAK,MAAM,WAAW,WAAW,KAAK,MAAM,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,KAAK,MAAM,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,KAAK,KAAK,WAAW,WAAW,KAAK,MAAM,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,KAAK,KAAK,WAAW,UAAU,WAAW,KAAK,MAAM,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,WAAW,WAAW,WAAW,UAAU,UAAU,KAAK,KAAK,WAAW,KAAK,MAAM,YAAY,WAAW,UAAU,UAAU,WAAW,KAAK,MAAM,WAAW,UAAU,UAAU,KAAK,MAAM,YAAY,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,WAAW,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,KAAK,OAAO,YAAY,KAAK,MAAM,UAAU,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,KAAK,MAAM,UAAU,KAAK,WAAW,WAAW,WAAW,UAAU,KAAK,OAAO,WAAW,UAAU,UAAU,UAAU,KAAK,MAAM,UAAU,MAAM,QAAQ,WAAW,MAAM,OAAO,YAAY,WAAW,WAAW,UAAU,KAAK,KAAK,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,KAAK,KAAK,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,KAAK,MAAM,WAAW,KAAK,MAAM,WAAW,MAAM,MAAM,WAAW,WAAW,UAAU,UAAU,WAAW,UAAU,MAAM,MAAM,YAAY,MAAM,QAAQ,WAAW,WAAW,WAAW,WAAW,MAAM,OAAO,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,WAAW,UAAU,MAAM,MAAM,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,UAAU,WAAW,aAAa,aAAaaAAa,MAAM,MAAM,WAAW,WAAW,aAAa,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,UAAU,UAAU,WAAW,WAAW,MAAM,MAAM,aAAa,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,MAAM,MAAM,WAAW,WAAW,MAAM,MAAM,aAAa,UAAU,MAAM,MAAM,aAAa,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,MAAM,MAAM,aAAa,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,aAAa,UAAU,MAAM,OAAO,aAAa,UAAU,UAAU,MAAM,OAAO,YAAY,UAAU,UAAU,WAAW,WAAW,MAAM,OAAO,YAAY,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,MAAM,OAAO,YAAY,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,MAAM,OAAO,YAAY,UAAU,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,UAAU,MAAM,MAAM,UAAU,WAAW,MAAM,OAAO,aAAa,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,UAAU,WAAW,MAAM,MAAM,UAAU,WAAW,WAAW,MAAM,OAAO,aAAa,UAAU,UAAU,WAAW,UAAU,MAAM,OAAO,aAAa,WAAW,WAAW,WAAW,UAAU,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,UAAU,MAAM,OAAO,aAAa,UAAU,UAAU,UAAU,WAAW,MA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W,KAAK,MAAM,WAAW,UAAU,UAAU,KAAK,MAAM,YAAY,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,WAAW,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,KAAK,MAAM,UAAU,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,KAAK,MAAM,UAAU,MAAM,OAAO,YAAY,WAAW,KAAK,KAAK,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,KAAK,KAAK,UAAU,KAAK,KAAK,WAAW,KAAK,MAAM,WAAW,WAAW,UAAU,UAAU,WAAW,UAAU,KAAK,MAAM,YAAY,KAAK,QAAQ,WAAW,WAAW,WAAW,WAAW,KAAK,OAAO,WAAW,WAAW,WAAW,KAAK,MAAM,WAAW,KAAK,MAAM,WAAW,MAAM,MAAM,WAAW,WAAW,MAAM,MAAM,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,UAAU,WAAW,aAAa,aAAa,MAAM,OAAO,WAAW,MAAM,MAAM,WAAW,MAAM,WAAW,WAAW,WAAW,UAAU,MAAM,OAAO,WAAW,UAAU,UAAU,UAAU,MAAM,OAAO,UAAU,OAAO,SAAS,WAAW,OAAO,MAAM,YAAY,MAAM,MAAM,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,MAAM,MAAM,WAAW,WAAW,UAAU,WAAW,MAAM,MAAM,WAAW,UAAU,WAAW,MAAM,MAAM,YAAY,WAAW,UAAU,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,UAAU,WAAW,UAAU,OAAO,MAAM,aAAa,UAAU,WAAW,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,UAAU,WAAW,WAAW,OAAO,MAAM,YAAY,WAAW,UAAU,UAAU,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,aAAa,WAAW,WAAW,OAAO,MAAM,YAAY,UAAU,WAAW,OAAO,MAAM,aAAa,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,OAAO,MAAM,YAAY,WAAW,cAAc,MAAM,MAAM,YAAY,WAAW,cAAc,MAAM,MAAM,YAAY,OAAO,MAAM,YAAY,UAAU,UAAU,WAAW,WAAW,OAAO,MAAM,YAAY,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,UAAU,MAAM,MAAM,WAAW,WAAW,OAAO,MAAM,YAAY,UAAU,MAAM,MAAM,YAAY,WAAW,UAAU,WAAW,WAAW,UAAU,MAAM,MAAM,YAAY,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,WAAW,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,UAAU,MAAM,MAAM,YAAY,UAAU,UAAU,MAAM,MAAM,WAAW,UAAU,UAAU,WAAW,WAAW,MAAM,MAAM,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,OAAO,MAAM,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,OAAO,MAAM,WAAW,UAAU,WAAW,UAAU,WAAW,WAAW,MAAM,MAAM,UAAU,MAAM,MAAM,UAAU,WAAW,MAAM,MAAM,YAAY,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,MAAM,MAAM,UAAU,WAAW,WAAW,OAAO,MAAM,aAAa,UAAU,UAAU,WAAW,WAAW,MAAM,MAAM,aAAa,WAAW,WAAW,WAAW,UAAU,WAAW,MAAM,MAAM,WAAW,OAAO,MAAM,UAAU,OAAO,MAAM,aAAa,UAAU,UAAU,UAAU,WAAW,MAAM,MAAM,aAAa,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,aAAa,UAAU,MAAM,MAAM,aAAa,MAAM,MAAM,aAAa,UAAU,UAAU,MAAM,MAAM,aAAa,UAAU,MAAM,MAAM,YAAY,UAAU,WAAW,WAAW,MAAM,OAAO,aAAa,WAAW,UAAU,WAAW,MAAM,OAAO,aAAa,UAAU,MAAM,OAAO,aAAa,MAAM,QAAQ,aAAa,WAAW,WAAW,WAAW,WAAW,WAAW,MAAM,OAAO,aAAa,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAA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AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA,wBAAwB,mBAAO,CAAC,+DAAwB;AACxD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C,wBAAwB,mBAAO,CAAC,+DAAwB;AACxD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C;;;;;;;;;;;ACLA;AACA,mBAAmB;AACnB,mBAAO,CAAC,kDAAc;;AAEtB;AACA;AACA,cAAc,mBAAO,CAAC,wDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;;;;;;;;;ACjIA;AACA,mBAAmB;AACnB,mBAAO,CAAC,kDAAc;;AAEtB;;AAEA;AACA;AACA,cAAc,mBAAO,CAAC,wDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC5FyD;AAC5B;AACP;;AAEtB;AACO;;AAEP,mBAAmB,mBAAO,CAAC,gEAA4B;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,6DAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB,mEAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,2CAA2C;AACzD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kDAAkD,OAAO,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,0BAA0B;AAC1B,SAAS;AACT,oBAAoB,sBAAsB;AAC1C,0BAA0B;AAC1B,SAAS;AACT,oBAAoB,gBAAgB;AACpC,0BAA0B;AAC1B,SAAS;AACT,oBAAoB,qBAAqB;AACzC,0BAA0B;AAC1B,SAAS;;AAET;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,QAAQ,iDAAmB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,8BAA8B,mCAAmC;AACjE,0BAA0B,mCAAmC;AAC7D,0BAA0B,qCAAqC;AAC/D,0BAA0B,qCAAqC;AAC/D,0BAA0B,qCAAqC;AAC/D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,0BAA0B,wCAAwC;AAClE,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mCAAmC,oBAAoB,GAAG,8BAA8B;AACxF;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,sBAAsB,iCAAiC;AACvD,sBAAsB,gCAAgC;AACtD,sBAAsB,gCAAgC;AACtD,sBAAsB;AACtB;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,aAAa,MAAM,gBAAgB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB,aAAa;AACjC,0BAA0B;AAC1B,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,wCAAwC,QAAQ,sBAAsB,sCAAsC;AAC5G,8GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAiB;AACxC;AACA,0CAA0C,gDAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,kBAAkB;AAC1C,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA,oDAAoD,UAAU;AAC9D,yBAAyB;AACzB;AACA;AACA,oDAAoD,UAAU;AAC9D,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,gDAAgD;AAChD,kEAAkE,+BAA+B;AACjG;AACA,SAAS;AACT,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE,uEAAuE,UAAU;AACjF;AACA,4DAA4D,eAAe;AAC3E,4DAA4D,eAAe;AAC3E;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA,kCAAkC;AAClC,sDAAsD,WAAW,2BAA2B,iBAAiB;AAC7G;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU,GAAG,UAAU;AAC1F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAiD,SAAS,SAAS;AACtG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO,SAAS,eAAe;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA,UAAU;AACV,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,gDAAkB;AACvF,+DAA+D,gDAAkB;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,2EAA2E,+BAA+B;AAC1G;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F,4FAA4F;AAC5F,4FAA4F;AAC5F;AACA;AACA,qCAAqC,UAAU,GAAG,wBAAwB,GAAG,EAAE;AAC/E,qCAAqC,UAAU,GAAG,UAAU;AAC5D,qCAAqC,wBAAwB;AAC7D,2CAA2C,cAAc,GAAG,YAAY;AACxE,2CAA2C,cAAc,GAAG,YAAY;AACxE,2DAA2D,eAAe,GAAG,aAAa;AAC1F,2DAA2D,eAAe,GAAG,aAAa;AAC1F,2DAA2D,eAAe,GAAG,aAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yBAAyB;AACzB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gDAAkB;AACtD,iCAAiC,UAAU;AAC3C,iCAAiC,UAAU,GAAG,UAAU;AACxD;AACA,uCAAuC,cAAc,GAAG,YAAY;AACpE,uCAAuC,cAAc,GAAG,YAAY;AACpE,uDAAuD,eAAe,GAAG,aAAa;AACtF,uDAAuD,eAAe,GAAG,aAAa;AACtF,uDAAuD,eAAe,GAAG,aAAa;AACtF;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH;AACnH,mHAAmH;AACnH,mHAAmH;AACnH;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,WAAW,GAAG,WAAW;AACzF,2DAA2D,WAAW,GAAG,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,cAAc;AAC1C,4BAA4B,+CAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,2CAA2C,4DAA4D,GAAG,6BAA6B;AACvI;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wDAAwD;AACxD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2BAA2B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2BAA2B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kCAAkC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD,6BAA6B;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAiB;AAChC;;AAEA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAkD,SAAS,QAAQ;AAC7F;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAkD,SAAS,WAAW;AACpG;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8BAA8B,2CAA2C,6BAA6B;AACtG,8BAA8B,0CAA0C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,iBAAiB;AACjB,UAAU;AACV;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAA2C,IAAI,6CAA6C;;AAE9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO,GAAG,OAAO,KAAK,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO,GAAG,OAAO,KAAK,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1jGyD;AAC5B;AACP;;AAEtB;AACO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,6DAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB,mEAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,6BAA6B;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,sFAAsF;AACtF,4EAA4E,SAAS;AACrF,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,QAAQ,iDAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,8BAA8B,YAAY;AAC1C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;;AAEA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB,aAAa;AACjC,0BAA0B;AAC1B,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,wCAAwC,QAAQ,sBAAsB,sCAAsC;AAC5G,8GAA8G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA,gDAAgD;AAChD;AACA,kEAAkE,+BAA+B;AACjG;AACA,SAAS;AACT,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mBAAmB,GAAG,0DAA0D,GAAG,2BAA2B;AAC5K;AACA,kBAAkB,kDAAkD,mBAAmB;AACvF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC,8BAA8B,SAAS;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,gDAAkB;AACvF,+DAA+D,gDAAkB;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,mCAAmC,UAAU,GAAG,wBAAwB,GAAG,EAAE;;AAE7E;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA,sDAAsD,UAAU,GAAG,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB;AAC1E;AACA;AACA,8BAA8B;AAC9B,oDAAoD,gDAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA,8CAA8C,gDAAkB;AAChE;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6BAA6B;AACrE;AACA,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC,6CAA6C,gDAAkB;AAC/D;AACA;AACA,6BAA6B;AAC7B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAiB;AACxC;AACA,0CAA0C,gDAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mCAAmC,MAAM;AACzC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA,iBAAiB;AACjyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,uDAAuD,eAAe;AACtE;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA,8BAA8B;AAC9B,kDAAkD,WAAW,2BAA2B,iBAAiB;AACzG;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,cAAc,qDAAqD;AACnE,cAAc;AACd;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D;AAC3D,mDAAmD,yDAAyD;AAC5G;AACA;AACA,sDAAsD;AACtD,8CAA8C,oDAAoD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvrDA,oBAAoB;AACpB;AACA;AACA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iDAAiD,CAAY;AAC7D,iCAAiC,gBAAgB,cAAc,GAAG;AAClE,gCAAgC;AAChC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,kBAAkB,YAAY,GAAG,cAAc,GAAG,aAAa,GAAG,wCAAwC;AAC1G;;;;;;;;;;;AClFA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC,UAAU,sBAAsB;AAChC;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC,UAAU,QAAQ;AAClB;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,OAAO;AACzB;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA,wBAAwB,OAAO;AAC/B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;;AAEA,sBAAsB,QAAQ;AAC9B;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,QAAQ;AAClB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM,YAAY,MAAM,MAAM,UAAU;AAC/E;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,UAAU,KAAK,MAAM;AAC1C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,UAAU,IAAI,MAAM;AACzC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,OAAO;AAC3B,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,OAAO;AAC7B,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA,qBAAqB,gBAAgB,IAAI,GAAG;AAC5C,QAAQ;AACR,qBAAqB,gBAAgB;AACrC,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH,+CAA+C;AAC/C;;AAEA;;;;;;;;;;;;ACnRA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;UEAA;UACA;UACA;UACA","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./multi-crossplot/style.less","webpack:///./multi-histogram/style.less","webpack:///./multi-well-crossplot/style.less","webpack:///./multi-well-histogram/style.less","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./multi-crossplot/template.html","webpack:///./multi-histogram/template.html","webpack:///./multi-well-crossplot/fragments/config.html","webpack:///./multi-well-crossplot/fragments/layers.html","webpack:///./multi-well-crossplot/fragments/main-area.html","webpack:///./multi-well-crossplot/fragments/overlay-line.html","webpack:///./multi-well-crossplot/fragments/parameters.html","webpack:///./multi-well-crossplot/fragments/pickett-line.html","webpack:///./multi-well-crossplot/fragments/print-settings.html","webpack:///./multi-well-crossplot/fragments/probability-map.html","webpack:///./multi-well-crossplot/fragments/regression.html","webpack:///./multi-well-crossplot/fragments/side-bar.html","webpack:///./multi-well-crossplot/fragments/udl.html","webpack:///./multi-well-crossplot/fragments/wells.html","webpack:///./multi-well-crossplot/fragments/zone.html","webpack:///./multi-well-crossplot/template.html","webpack:///./multi-well-histogram/fragments/assistive-lines.html","webpack:///./multi-well-histogram/fragments/config.html","webpack:///./multi-well-histogram/fragments/control-params.html","webpack:///./multi-well-histogram/fragments/layers.html","webpack:///./multi-well-histogram/fragments/main-area.html","webpack:///./multi-well-histogram/fragments/print-settings.html","webpack:///./multi-well-histogram/fragments/side-bar.html","webpack:///./multi-well-histogram/fragments/statistic.html","webpack:///./multi-well-histogram/fragments/wells.html","webpack:///./multi-well-histogram/fragments/zone.html","webpack:///./multi-well-histogram/template.html","webpack:///./multi-crossplot/style.less?ccbb","webpack:///./multi-histogram/style.less?28b3","webpack:///./multi-well-crossplot/style.less?3f6c","webpack:///./multi-well-histogram/style.less?dd6d","webpack:///../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///../node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///./index.js","webpack:///./multi-crossplot/index.js","webpack:///./multi-histogram/index.js","webpack:///./multi-well-crossplot/index.js","webpack:///./multi-well-histogram/index.js","webpack:///./utils.js","webpack:///./vendor/js/wi-regression.js","webpack:///external umd \"@revotechuet/misc-component-vue\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/nonce","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@revotechuet/misc-component-vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@revotechuet/misc-component-vue\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"@revotechuet/misc-component-vue\")) : factory(root[\"@revotechuet/misc-component-vue\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__revotechuet_misc_component_vue__) => {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"multi-crossplot {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\nmulti-crossplot multi-well-crossplot {\\n  height: 100%;\\n  width: 100%;\\n}\\nmulti-crossplot input,\\nmulti-crossplot select {\\n  box-shadow: none;\\n}\\nmulti-crossplot ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-crossplot ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-crossplot ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-crossplot ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-crossplot .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-crossplot button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-crossplot .main {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: row;\\n}\\nmulti-crossplot ::-webkit-scrollbar {\\n  background: #f4f4f4;\\n  width: 5px;\\n  height: 5px;\\n}\\nmulti-crossplot ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc;\\n}\\nmulti-crossplot .tab {\\n  display: flex;\\n  z-index: 1;\\n  color: #000;\\n  background: #fff;\\n  flex-basis: 40px;\\n}\\nmulti-crossplot .tab .tab-name {\\n  display: flex;\\n  align-items: center;\\n  padding: 11px 20px;\\n  cursor: pointer;\\n  transition: all 0.2s ease-in;\\n  border-right: 1px solid #d9d9d9;\\n  border-bottom: 2px solid #fff;\\n}\\nmulti-crossplot .tab .tab-name:hover {\\n  background: #fff;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-crossplot .tab .tab-drop {\\n  display: flex;\\n  align-items: center;\\n  padding: 11px 20px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-crossplot .tab .active {\\n  color: #0077be;\\n  background: #fff;\\n  border-bottom: 2px solid #0077be;\\n}\\nmulti-crossplot .warning {\\n  display: none;\\n}\\nmulti-crossplot .show-warning {\\n  display: flex !important;\\n  align-items: center;\\n  background: #f47a7a;\\n  padding: 10px;\\n  height: 26px;\\n  color: #fff;\\n  border-radius: 2px;\\n  margin-top: 7px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./multi-crossplot/style.less\"],\"names\":[],\"mappings\":\"AAAA;EACI,aAAA;EACA,YAAA;EACA,sBAAA;AACJ;AAJA;EAKQ,YAAA;EACA,WAAA;AAER;AARA;;EASQ,gBAAA;AAGR;AAZA;EAcE,UAAU;EAFJ,sBAAA;AAIR;AAhBA;EAkBE,SAAS;EAFH,sBAAA;AAIR;AApBA;EAsBE,SAAS;EAFH,sBAAA;AAIR;AAxBA;EA0BE,OAAO;EAFD,sBAAA;AAIR;AA5BA;EA4BQ,iBAAA;AAGR;AA/BA;EAgCQ,WAAA;EACA,kBAAA;AAER;AAnCA;EAqCQ,aAAA;EACA,YAAA;EACA,mBAAA;AACR;AAxCA;EA2CQ,mBAAA;EACA,UAAA;EACA,WAAA;AAAR;AA7CA;EAiDQ,yBAAA;AADR;AAhDA;EAqDQ,aAAA;EACA,UAAA;EACA,WAAA;EACA,gBAAA;EACA,gBAAA;AAFR;AAvDA;EA4DY,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,eAAA;EACA,4BAAA;EACA,+BAAA;EACA,6BAAA;AAFZ;AAGY;EACI,gBAAA;EACA,4BAAA;AADhB;AApEA;EAyEY,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,4BAAA;AAFZ;AA1EA;EA+EY,cAAA;EACA,gBAAA;EACA,gCAAA;AAFZ;AA/EA;EAsFQ,aAAA;AAJR;AAlFA;EAyFQ,wBAAA;EACA,mBAAA;EACA,mBAAA;EACA,aAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;EACA,eAAA;AAJR\",\"sourcesContent\":[\"multi-crossplot {\\n    display: flex;\\n    height: 100%;\\n    flex-direction: column;\\n    multi-well-crossplot {\\n        height: 100%;\\n        width: 100%;\\n    }\\n    input, select {\\n        box-shadow: none;\\n    }\\n    ::-webkit-scrollbar-button:horizontal:increment { /* Right */\\n        background-image: none;\\n    }\\n    \\n    ::-webkit-scrollbar-button:horizontal:decrement { /* Left */\\n        background-image: none;\\n    }\\n    \\n    ::-webkit-scrollbar-button:vertical:increment { /* Down */\\n        background-image: none;\\n    }\\n    \\n    ::-webkit-scrollbar-button:vertical:decrement { /* Up */\\n        background-image: none;\\n    }\\n\\n    .ui-select-match-text {\\n        text-align: right;\\n    }\\n\\n    button.disable {\\n        color       : #aaa;\\n        border-color: #aaa;\\n    }\\n\\n    .main {\\n        display       : flex;\\n        height        : 100%;\\n        flex-direction: row;\\n    }\\n\\n    ::-webkit-scrollbar {\\n        background: #f4f4f4;\\n        width     : 5px;\\n        height: 5px;\\n    }\\n\\n    ::-webkit-scrollbar-thumb {\\n        background-color: #dcdcdc;\\n    }\\n\\n    .tab{\\n        display: flex;\\n        z-index: 1;\\n        color: #000;\\n        background: #fff;\\n        flex-basis: 40px;\\n        \\n        .tab-name{\\n            display: flex;\\n            align-items: center;\\n            padding: 11px 20px;\\n            cursor: pointer;\\n            transition   : all 0.2s ease-in;\\n            border-right: 1px solid #d9d9d9;\\n            border-bottom: 2px solid #fff;\\n            &:hover {\\n                background: #fff;\\n                transition   : all 0.2s ease-in;\\n            }\\n        }\\n        .tab-drop {\\n            display: flex;\\n            align-items: center;\\n            padding: 11px 20px;\\n            transition   : all 0.2s ease-in;\\n        }\\n        .active {\\n            color: #0077be;\\n            background: #fff;\\n            border-bottom: 2px solid #0077be;\\n        }\\n        \\n    }\\n    .warning {\\n        display: none;\\n    }\\n    .show-warning {\\n        display: flex !important;\\n        align-items: center;\\n        background: #f47a7a;\\n        padding: 10px;\\n        height: 26px;\\n        color: #fff;\\n        border-radius: 2px;\\n        margin-top: 7px;\\n    }\\n    \\n\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"multi-histogram {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\nmulti-histogram multi-well-histogram {\\n  height: 100%;\\n}\\nmulti-histogram input,\\nmulti-histogram select {\\n  box-shadow: none;\\n}\\nmulti-histogram ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-histogram ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-histogram ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-histogram ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-histogram .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-histogram button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-histogram .main {\\n  display: flex;\\n  height: calc(100% - 40px);\\n  flex-direction: column;\\n}\\nmulti-histogram ::-webkit-scrollbar {\\n  background: #f4f4f4;\\n  width: 5px;\\n  height: 5px;\\n}\\nmulti-histogram ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc;\\n}\\nmulti-histogram .tab {\\n  display: flex;\\n  z-index: 1;\\n  color: #000;\\n  background: #fff;\\n  flex-basis: 40px;\\n}\\nmulti-histogram .tab .tab-name {\\n  display: flex;\\n  align-items: center;\\n  padding: 11px 20px;\\n  cursor: pointer;\\n  letter-spacing: 1px;\\n  transition: all 0.2s ease-in;\\n  border-right: 1px solid #d9d9d9;\\n  border-bottom: 2px solid #fff;\\n}\\nmulti-histogram .tab .tab-name:hover {\\n  background: #fff;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-histogram .tab .tab-drop {\\n  display: flex;\\n  align-items: center;\\n  padding: 11px 20px;\\n  letter-spacing: 1px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-histogram .tab .active {\\n  color: #0077be;\\n  background: #fff;\\n  border-bottom: 2px solid #0077be;\\n}\\nmulti-histogram .warning {\\n  display: none;\\n}\\nmulti-histogram .show-warning {\\n  display: flex !important;\\n  align-items: center;\\n  background: #f47a7a;\\n  padding: 10px;\\n  height: 26px;\\n  color: #fff;\\n  border-radius: 2px;\\n  margin-top: 7px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./multi-histogram/style.less\"],\"names\":[],\"mappings\":\"AAAA;EACI,aAAA;EACA,YAAA;EACA,sBAAA;AACJ;AAJA;EAKQ,YAAA;AAER;AAPA;;EAQQ,gBAAA;AAGR;AAXA;EAaE,UAAU;EAFJ,sBAAA;AAIR;AAfA;EAiBE,SAAS;EAFH,sBAAA;AAIR;AAnBA;EAqBE,SAAS;EAFH,sBAAA;AAIR;AAvBA;EAyBE,OAAO;EAFD,sBAAA;AAIR;AA3BA;EA2BQ,iBAAA;AAGR;AA9BA;EA+BQ,WAAA;EACA,kBAAA;AAER;AAlCA;EAoCQ,aAAA;EACA,yBAAA;EACA,sBAAA;AACR;AAvCA;EA0CQ,mBAAA;EACA,UAAA;EACA,WAAA;AAAR;AA5CA;EAgDQ,yBAAA;AADR;AA/CA;EAoDQ,aAAA;EACA,UAAA;EACA,WAAA;EACA,gBAAA;EACA,gBAAA;AAFR;AAtDA;EA2DY,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,eAAA;EACA,mBAAA;EACA,4BAAA;EACA,+BAAA;EACA,6BAAA;AAFZ;AAGY;EACI,gBAAA;EACA,4BAAA;AADhB;AApEA;EAyEY,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,mBAAA;EACA,4BAAA;AAFZ;AA3EA;EAgFY,cAAA;EACA,gBAAA;EACA,gCAAA;AAFZ;AAhFA;EAuFQ,aAAA;AAJR;AAnFA;EA0FQ,wBAAA;EACA,mBAAA;EACA,mBAAA;EACA,aAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;EACA,eAAA;AAJR\",\"sourcesContent\":[\"multi-histogram {\\n    display: flex;\\n    height: 100%;\\n    flex-direction: column;\\n    multi-well-histogram {\\n        height: 100%;\\n    }\\n    input, select {\\n        box-shadow: none;\\n    }\\n    ::-webkit-scrollbar-button:horizontal:increment { /* Right */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:horizontal:decrement { /* Left */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:vertical:increment { /* Down */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:vertical:decrement { /* Up */\\n        background-image: none;\\n    }\\n\\n    .ui-select-match-text {\\n        text-align: right;\\n    }\\n\\n    button.disable {\\n        color       : #aaa;\\n        border-color: #aaa;\\n    }\\n\\n    .main {\\n        display       : flex;\\n        height        : calc(100% - 40px);\\n        flex-direction: column;\\n    }\\n\\n    ::-webkit-scrollbar {\\n        background: #f4f4f4;\\n        width     : 5px;\\n        height: 5px;\\n    }\\n\\n    ::-webkit-scrollbar-thumb {\\n        background-color: #dcdcdc;\\n    }\\n\\n    .tab{\\n        display: flex;\\n        z-index: 1;\\n        color: #000;\\n        background: #fff;\\n        flex-basis: 40px;\\n\\n        .tab-name{\\n            display: flex;\\n            align-items: center;\\n            padding: 11px 20px;\\n            cursor: pointer;\\n            letter-spacing: 1px;\\n            transition   : all 0.2s ease-in;\\n            border-right: 1px solid #d9d9d9;\\n            border-bottom: 2px solid #fff;\\n            &:hover {\\n                background: #fff;\\n                transition   : all 0.2s ease-in;\\n            }\\n        }\\n        .tab-drop {\\n            display: flex;\\n            align-items: center;\\n            padding: 11px 20px;\\n            letter-spacing: 1px;\\n            transition   : all 0.2s ease-in;\\n        }\\n        .active {\\n            color: #0077be;\\n            background: #fff;\\n            border-bottom: 2px solid #0077be;\\n        }\\n\\n    }\\n    .warning {\\n        display: none;\\n    }\\n    .show-warning {\\n        display: flex !important;\\n        align-items: center;\\n        background: #f47a7a;\\n        padding: 10px;\\n        height: 26px;\\n        color: #fff;\\n        border-radius: 2px;\\n        margin-top: 7px;\\n    }\\n\\n\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"multi-well-crossplot {\\n  /* Rounded sliders */\\n  /* change style special of wi-base-treeview for basemap */\\n}\\nmulti-well-crossplot layer-collection circle {\\n  fill: #3b9fda09;\\n  stroke: #0a2d42;\\n  stroke-width: 1px;\\n  r: 7px;\\n}\\nmulti-well-crossplot .rg-bottom span,\\nmulti-well-crossplot .rg-top span {\\n  margin: 3px 0 0 -10px;\\n}\\nmulti-well-crossplot .axis-info {\\n  display: flex;\\n  padding: 15px;\\n  flex-direction: column;\\n  border-bottom: 1px solid #ccc;\\n}\\nmulti-well-crossplot .axis-info .axis-Z {\\n  flex: 1;\\n  display: flex;\\n  margin-bottom: 15px;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .line {\\n  border-bottom: 2px solid #8e8e8e;\\n  position: absolute;\\n  width: calc(100% - 15px);\\n  margin-top: 10px;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .axis {\\n  border: 1px solid #cccccc;\\n  color: #646464;\\n  background: #f4f4f4;\\n  font-size: 12px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-right: 15px;\\n  border-radius: 2px;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .ellipsis-text {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .label {\\n  padding: 0 10px;\\n  font-weight: bold;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .axis-type {\\n  width: 100px;\\n  color: #0077be;\\n  height: 22px;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .axis-min {\\n  /*width: 40px;*/\\n  color: #0077be;\\n  margin-right: -1px;\\n  height: 22px;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .axis-line {\\n  flex: 1;\\n  margin-right: -1px;\\n  background: #fff;\\n}\\nmulti-well-crossplot .axis-info .axis-Z .axis-max {\\n  width: 80px;\\n  color: #0077be;\\n  height: 22px;\\n}\\nmulti-well-crossplot .red-color {\\n  color: #cc6d6d;\\n}\\nmulti-well-crossplot .blue-color {\\n  color: #0077be;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-well-crossplot .list-polygon {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 15px;\\n  border-radius: 2px;\\n  border: 1px solid #ddd;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .list-polygon .button-list-polygon {\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 12px;\\n  border-left: 1px solid #ccc;\\n}\\nmulti-well-crossplot .list-polygon .button-list-polygon:hover {\\n  background: #f4f4f4;\\n  transition: all ease-in 0.3s;\\n}\\nmulti-well-crossplot .add-polygon {\\n  width: 20px;\\n  height: 20px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 1px solid #ccc;\\n  border-radius: 50%;\\n  cursor: pointer;\\n}\\nmulti-well-crossplot .add-polygon:hover {\\n  border-color: #0077be;\\n  color: #0077be;\\n  transition: all ease-in 0.3s;\\n}\\nmulti-well-crossplot .disable-node-caret .node-caret {\\n  display: none;\\n}\\nmulti-well-crossplot .disable-node-caret wi-tree-node-virtual > div {\\n  padding-left: 13px;\\n}\\nmulti-well-crossplot .switch-label {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: #666;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot .switch-label > label {\\n  margin-bottom: 0;\\n}\\nmulti-well-crossplot .switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 35px;\\n  height: 16px;\\n  margin-left: 10px;\\n}\\nmulti-well-crossplot .switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\nmulti-well-crossplot .slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n}\\nmulti-well-crossplot .slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 10px;\\n  width: 10px;\\n  left: 3px;\\n  bottom: 3px;\\n  background-color: white;\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n}\\nmulti-well-crossplot input:checked + .slider {\\n  background-color: #2196F3;\\n}\\nmulti-well-crossplot input:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\nmulti-well-crossplot input:checked + .slider:before {\\n  -webkit-transform: translateX(18px);\\n  -ms-transform: translateX(18px);\\n  transform: translateX(18px);\\n}\\nmulti-well-crossplot .slider.round {\\n  border-radius: 34px;\\n}\\nmulti-well-crossplot .slider.round:before {\\n  border-radius: 50%;\\n}\\nmulti-well-crossplot input,\\nmulti-well-crossplot select {\\n  box-shadow: none;\\n}\\nmulti-well-crossplot wi-tree-view div input,\\nmulti-well-crossplot wi-tree-view-virtual div input {\\n  width: 100%;\\n  line-height: 1.4;\\n  padding: 10px 10px 10px 14px;\\n  border: none;\\n  border-bottom: 1px solid #f0f0f0;\\n  outline: none;\\n  box-sizing: border-box;\\n}\\nmulti-well-crossplot wi-tree-view div input::placeholder,\\nmulti-well-crossplot wi-tree-view-virtual div input::placeholder {\\n  color: #cecece;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret,\\nmulti-well-crossplot wi-tree-node-virtual .node-caret,\\nmulti-well-crossplot wi-tree-node .node-label,\\nmulti-well-crossplot wi-tree-node-virtual .node-label,\\nmulti-well-crossplot wi-tree-node .node-icon,\\nmulti-well-crossplot wi-tree-node-virtual .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret,\\nmulti-well-crossplot wi-tree-node-virtual .node-caret {\\n  color: #cccbcb;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 16px;\\n}\\nmulti-well-crossplot wi-tree-node .node-content.search-mode > div,\\nmulti-well-crossplot wi-tree-node-virtual .node-content.search-mode > div {\\n  opacity: 1;\\n}\\nmulti-well-crossplot wi-tree-node .node-content,\\nmulti-well-crossplot wi-tree-node-virtual .node-content,\\nmulti-well-crossplot wi-tree-node .node-content::after,\\nmulti-well-crossplot wi-tree-node-virtual .node-content::after {\\n  line-height: 3em;\\n}\\nmulti-well-crossplot segment-layer svg.edit-point,\\nmulti-well-crossplot polygon-layer svg.edit-point {\\n  background-color: rgba(185, 185, 185, 0);\\n  cursor: crosshair;\\n  pointer-events: all;\\n  z-index: 2;\\n}\\nmulti-well-crossplot wi-table-view div.cell {\\n  display: table-cell;\\n  padding: 7px 10px;\\n  border-right: 1px solid #d4d4d4;\\n  border-bottom: 1px solid #d4d4d4;\\n  cursor: default;\\n  position: relative;\\n  border-top: none;\\n  border-left: none;\\n}\\nmulti-well-crossplot wi-table-view div.table {\\n  margin-top: 0;\\n  border-radius: 2px;\\n  border-top: 1px solid #ccc;\\n  border-left: 1px solid #ccc;\\n  border-bottom: none;\\n  border-right: none;\\n}\\nmulti-well-crossplot editable div.my-content {\\n  float: left;\\n}\\nmulti-well-crossplot wi-dropdown-list:focus {\\n  outline: none !important;\\n}\\nmulti-well-crossplot wi-dropdown-list .ui-select-bootstrap > .ui-select-match > .btn {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default:active:focus {\\n  background-color: #fff;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default.active,\\nmulti-well-crossplot wi-dropdown-list .btn-default:active,\\nmulti-well-crossplot wi-dropdown-list .open > .dropdown-toggle.btn-default {\\n  color: #333;\\n  background-color: #fff;\\n  background-image: none;\\n  border-color: #adadad;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default.focus,\\nmulti-well-crossplot wi-dropdown-list .btn-default:focus {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default-focus {\\n  box-shadow: none;\\n  outline: none;\\n}\\nmulti-well-crossplot wi-dropdown-list .form-control {\\n  border: none;\\n}\\nmulti-well-crossplot wi-dropdown-list :focus {\\n  outline: none;\\n}\\nmulti-well-crossplot wi-dropdown-list .form-control:focus {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default:hover {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-crossplot side-bar > div div.content {\\n  overflow-x: hidden;\\n  height: 100%;\\n  display: flex;\\n  overflow-y: auto;\\n  /* padding-left: 15px; */\\n  flex-direction: row;\\n}\\nmulti-well-crossplot wi-droppable {\\n  height: 100%;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret,\\nmulti-well-crossplot wi-tree-node .node-label,\\nmulti-well-crossplot wi-tree-node .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret {\\n  color: #cccbcb;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 16px;\\n}\\nmulti-well-crossplot wi-tree-node .node-content.search-mode > div {\\n  opacity: 1;\\n}\\nmulti-well-crossplot wi-tree-node .node-content,\\nmulti-well-crossplot wi-tree-node .node-content::after {\\n  line-height: 3em;\\n}\\nmulti-well-crossplot .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-well-crossplot button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-well-crossplot .active {\\n  background: #f4f4f4;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .fn-button {\\n  border: 1px solid #d9d9d9;\\n  font-size: 10px;\\n  border-radius: 2px;\\n  background: #fff;\\n  padding: 6px 12px 5px 12px;\\n  margin-right: 15px;\\n  line-height: 1;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .fn-button:hover {\\n  transition: all 0.2s ease-in;\\n  border: 1px solid #1962a7;\\n  color: #1962a7;\\n  background: #fff;\\n}\\nmulti-well-crossplot .main {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: row;\\n}\\nmulti-well-crossplot .main .main-toolbar {\\n  flex-basis: 44px;\\n  background: #0074c5;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item {\\n  margin: 0 15px;\\n  color: #fff;\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item .select-proj4 {\\n  box-shadow: none;\\n  border: none;\\n  border-radius: 0;\\n  font-size: 12px;\\n  color: #fff;\\n  background: none;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item .select-proj4:focus {\\n  border-color: none;\\n  outline: none;\\n  -webkit-box-shadow: none;\\n  box-shadow: none;\\n}\\nmulti-well-crossplot .main .statistic-table {\\n  margin: 15px 15px;\\n  position: relative;\\n  height: 25%;\\n  max-height: 64%;\\n}\\nmulti-well-crossplot .main .main-body {\\n  width: 100%;\\n  display: flex;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-crossplot .main .main-body .border-style {\\n  border: 1px solid #eee;\\n  border-top-right-radius: 3px;\\n  border-top-left-radius: 3px;\\n}\\nmulti-well-crossplot .main .main-body .main-body-left {\\n  display: flex;\\n  z-index: 1;\\n  height: calc(100%);\\n}\\nmulti-well-crossplot .main .main-body .main-body-left .input-search-list-view {\\n  background: #fff;\\n  width: 100%;\\n  height: 44px;\\n  border: 1px solid #ffffff4a;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 10px 20px 10px 15px;\\n  font-weight: bold;\\n}\\nmulti-well-crossplot .main .main-body .main-body-left ::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-crossplot .main .main-body .main-body-left :focus::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-crossplot .main .main-body .main-body-left .input-search-list-view:focus {\\n  outline: none;\\n}\\nmulti-well-crossplot .main .main-body .main-body-center {\\n  flex: 1;\\n  display: flex;\\n  height: 100%;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-crossplot .main .button-update {\\n  background: #0077be;\\n  color: #fff;\\n  font-weight: bold;\\n  flex: 1;\\n  padding: 10px;\\n  text-align: center;\\n  margin: 9px 15px 15px 15px;\\n  border-radius: 2px;\\n  transition: all 0.2s ease-in;\\n  cursor: pointer;\\n}\\nmulti-well-crossplot .main .button-update:hover {\\n  background: #1ba0ec;\\n  transition: all 0.5s;\\n}\\nmulti-well-crossplot .main .disabled-click {\\n  pointer-events: none;\\n  opacity: 0.2;\\n}\\nmulti-well-crossplot .main .label-list-view {\\n  font-weight: bold;\\n  background: #fff;\\n  display: flex;\\n  justify-content: space-between;\\n  font-weight: 400;\\n  right: 0;\\n  position: sticky;\\n}\\nmulti-well-crossplot .main .label-info-image {\\n  background: #fff;\\n  min-width: 99px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 3px;\\n  padding: 5px 10px;\\n  margin-right: 15px;\\n  justify-content: space-between;\\n}\\nmulti-well-crossplot .main .button-td {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  padding: 3px 10px;\\n  border-radius: 2px;\\n  border: 1px solid #e8e8e8;\\n}\\nmulti-well-crossplot .main .button-td:hover {\\n  background: #87c1ff;\\n  color: #fff;\\n}\\nmulti-well-crossplot .main .header-icon {\\n  margin-right: 15px;\\n  cursor: pointer;\\n  width: 10px;\\n}\\nmulti-well-crossplot .main .label-button {\\n  float: right;\\n  font-size: 115%;\\n  color: #bbbbbb;\\n  margin: 2px 5px 0 15px;\\n  pointer-events: none;\\n}\\nmulti-well-crossplot .main .button-with-label-layer {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 7px;\\n  margin-left: 5px;\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  flex: 1;\\n  text-align: center;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-label-layer:hover {\\n  background: #fff;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-label {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 10px;\\n  border: 1px solid #f4f4f4;\\n  border-radius: 20px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-label:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .main .button-with-label.active {\\n  background: #f4f4f4;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .tab-with-label {\\n  cursor: pointer;\\n  color: #cacaca;\\n  transition: all 0.2s ease-in;\\n  margin: 0px 10px;\\n  white-space: nowrap;\\n  font-weight: bold;\\n}\\nmulti-well-crossplot .main .tab-with-label:hover {\\n  color: #0077be;\\n}\\nmulti-well-crossplot .main .tab-with-label.active {\\n  color: #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .select-table-header {\\n  border: 1px solid #eee;\\n  background: #f4f4f4;\\n  padding: 5px 8px;\\n  margin: 0 8px 8px 0;\\n  cursor: pointer;\\n  border-radius: 2px;\\n  min-width: 75px;\\n  display: flex;\\n  justify-content: center;\\n}\\nmulti-well-crossplot .main .select-table-header.active {\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .label-option-sidebar {\\n  font-weight: bold;\\n  font-size: 12px;\\n  color: #646464;\\n  background: #fff;\\n  padding: 15px;\\n}\\nmulti-well-crossplot .main .selection-sidebar {\\n  border: 1px solid #c7c7c7;\\n  border-radius: 2px;\\n  padding: 2px 10px;\\n  align-items: center;\\n  display: flex;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .selection-sidebar:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .main .selection-sidebar > input:focus {\\n  outline: none;\\n}\\nmulti-well-crossplot .main .input-suggestions {\\n  margin-left: 10px;\\n  border: none;\\n  flex: 1;\\n  color: #0077be;\\n  text-align: right;\\n}\\nmulti-well-crossplot .axis-bar {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px solid #dbdbdb87;\\n  font-size: 10px;\\n  display: flex;\\n  flex: 1;\\n  align-items: center;\\n  padding: 10px 10px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .axis-bar:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .axis-bar.selected {\\n  font-weight: bold;\\n  color: #0077be;\\n}\\nmulti-well-crossplot .axis-bar::after {\\n  content: \\\"2r\\\";\\n  color: transparent;\\n  display: block;\\n  top: 0;\\n  width: 4px;\\n  right: 0;\\n}\\nmulti-well-crossplot .bottom-add {\\n  background: #f4f4f4;\\n  padding: 10px;\\n  border-radius: 2px;\\n  text-align: center;\\n  margin: 15px 15px 0 15px;\\n  cursor: pointer;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .bottom-add:hover {\\n  background: #e7e7e7;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .list-formular {\\n  padding: 0 5px 0 15px;\\n  margin-bottom: 15px;\\n  display: flex;\\n  border-radius: 2px;\\n  border: 1px solid #ddd;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .list-formular:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .delete-button {\\n  padding: 10px;\\n  cursor: pointer;\\n  font-size: 15px;\\n  color: #aaa;\\n  align-items: center;\\n  border: none;\\n  display: flex;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar {\\n  background: #fff;\\n  width: 5px;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-thumb {\\n  background-color: #ccc;\\n}\\nmulti-well-crossplot .fix-header-table {\\n  overflow-y: auto;\\n  display: flex;\\n  flex: 1;\\n}\\nmulti-well-crossplot .fix-header-table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-crossplot .rectangle {\\n  border: 0.5px solid #a7a7a7;\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 11px;\\n  background: #0077be;\\n}\\nmulti-well-crossplot table {\\n  border-collapse: collapse;\\n  table-layout: fixed;\\n  width: 100%;\\n  user-select: none;\\n}\\nmulti-well-crossplot table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-crossplot thead {\\n  border-bottom: 1px solid #ccc;\\n}\\nmulti-well-crossplot td,\\nmulti-well-crossplot th {\\n  border-bottom: 1px solid #f0f0f0;\\n  border-right: 1px solid #f0f0f0;\\n  padding-top: 10px;\\n  padding-bottom: 9px;\\n  padding-left: 14px;\\n  overflow: hidden;\\n}\\nmulti-well-crossplot tr {\\n  border-right: 4px solid #fff;\\n}\\nmulti-well-crossplot tr.updated {\\n  background-color: #c2eaff70;\\n}\\nmulti-well-crossplot tr.created {\\n  background-color: #abeaab29;\\n}\\nmulti-well-crossplot tr.deleted {\\n  background-color: #f4f4f4;\\n  pointer-events: none;\\n  color: #d8d3d3;\\n}\\nmulti-well-crossplot tr:hover {\\n  border-right: 4px solid #0077be;\\n  background: #f9f9f9;\\n}\\nmulti-well-crossplot th {\\n  padding-top: 9px;\\n  padding-bottom: 10px;\\n  text-align: left;\\n  background-color: #ffffff;\\n  color: #0077be;\\n}\\nmulti-well-crossplot ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #9e9e9e;\\n  opacity: 1;\\n  /* Firefox */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./multi-well-crossplot/style.less\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"multi-well-crossplot {\\n\\tlayer-collection {\\n\\t\\tcircle {\\n\\t\\t\\tfill: #3b9fda09;\\n\\t\\t\\tstroke: #0a2d42;\\n\\t\\t\\tstroke-width: 1px;\\n\\t\\t\\tr: 7px;\\n\\t\\t}\\n\\t}\\n\\t.rg-bottom span, .rg-top span {\\n\\t\\tmargin: 3px 0 0 -10px;\\n\\t}\\n\\t.axis-info {\\n\\t\\tdisplay: flex;\\n\\t\\tpadding: 15px;\\n\\t\\tflex-direction: column;\\n\\t\\tborder-bottom: 1px solid #ccc;\\n\\t\\t.axis-Z {\\n\\t\\t\\tflex: 1;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tmargin-bottom: 15px;\\n\\t\\t\\t.line {\\n\\t\\t\\t\\tborder-bottom: 2px solid #8e8e8e;\\n\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\twidth: calc(100% - 15px);\\n\\t\\t\\t\\tmargin-top: 10px;\\n\\t\\t\\t}\\n\\t\\t\\t.axis {\\n\\t\\t\\t\\tborder: 1px solid #cccccc;\\n\\t\\t\\t\\tcolor: #646464;\\n\\t\\t\\t\\tbackground: #f4f4f4;\\n\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tmargin-right: 15px;\\n\\t\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\t\\t// height: 22px\\n\\t\\t\\t}\\n\\t\\t\\t.ellipsis-text {\\n\\t\\t\\t\\toverflow: hidden;\\n\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t}\\n\\t\\t\\t.label {\\n\\t\\t\\t\\tpadding: 0 10px;\\n\\t\\t\\t\\tfont-weight: bold;\\n\\t\\t\\t}\\n\\t\\t\\t.axis-type {\\n\\t\\t\\t\\twidth: 100px;\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t\\theight: 22px\\n\\t\\t\\t}\\n\\t\\t\\t.axis-min {\\n\\t\\t\\t\\t/*width: 40px;*/\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t\\tmargin-right: -1px;\\n\\t\\t\\t\\theight: 22px\\n\\t\\t\\t}\\n\\t\\t\\t.axis-line {\\n\\t\\t\\t\\tflex: 1;\\n\\t\\t\\t\\tmargin-right: -1px;\\n\\t\\t\\t\\tbackground: #fff;\\n\\t\\t\\t}\\n\\t\\t\\t.axis-max {\\n\\t\\t\\t\\twidth: 80px;\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t\\theight: 22px\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t.red-color {\\n\\t\\tcolor: #cc6d6d;\\n\\t}\\n\\t.blue-color{\\n\\t\\tcolor: #0077be;\\n\\t}\\n\\t::-webkit-scrollbar-button:horizontal:increment { /* Right */\\n\\t\\tbackground-image: none;\\n\\t}\\n\\n\\t::-webkit-scrollbar-button:horizontal:decrement { /* Left */\\n\\t\\tbackground-image: none;\\n\\t}\\n\\n\\t::-webkit-scrollbar-button:vertical:increment { /* Down */\\n\\t\\tbackground-image: none;\\n\\t}\\n\\n\\t::-webkit-scrollbar-button:vertical:decrement { /* Up */\\n\\t\\tbackground-image: none;\\n\\t}\\n\\t.list-polygon {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: space-between;\\n\\t\\tmargin-bottom: 15px;\\n\\t\\tborder-radius: 2px;\\n\\t\\tborder: 1px solid #ddd;\\n\\t\\ttransition: all 0.2s ease-in;\\n\\t\\t.button-list-polygon{\\n\\t\\t\\tcursor: pointer;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\tpadding: 12px;\\n\\t\\t\\tborder-left: 1px solid #ccc;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tbackground: #f4f4f4;\\n\\t\\t\\t\\ttransition: all ease-in 0.3s;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t.add-polygon {\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\tborder: 1px solid #ccc;\\n\\t\\tborder-radius: 50%;\\n\\t\\tcursor: pointer;\\n\\t\\t&:hover {\\n\\t\\t\\tborder-color: #0077be;\\n\\t\\t\\tcolor: #0077be;\\n\\t\\t\\ttransition: all ease-in 0.3s;\\n\\t\\t}\\n\\t}\\n\\t.disable-node-caret {\\n        .node-caret {\\n            display: none;\\n\\t\\t}\\n\\t\\twi-tree-node-virtual > div {\\n\\t\\t\\tpadding-left: 13px;\\n\\t\\t}\\n    }\\n    .switch-label{\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n        color: #666;\\n        font-size: 12px;\\n        &>label{\\n            margin-bottom: 0;\\n        }\\n    }\\n\\n    .switch {\\n        position: relative;\\n          display: inline-block;\\n          width: 35px;\\n          height: 16px;\\n          margin-left: 10px;\\n      }\\n\\n      .switch input {\\n        opacity: 0;\\n        width: 0;\\n        height: 0;\\n      }\\n\\n      .slider {\\n        position: absolute;\\n        cursor: pointer;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        bottom: 0;\\n        background-color: #ccc;\\n        -webkit-transition: .2s;\\n        transition: .2s;\\n      }\\n\\n      .slider:before {\\n        position: absolute;\\n        content: \\\"\\\";\\n        height: 10px;\\n        width: 10px;\\n        left: 3px;\\n        bottom: 3px;\\n        background-color: white;\\n        -webkit-transition: .2s;\\n        transition: .2s;\\n      }\\n\\n      input:checked + .slider {\\n        background-color: #2196F3;\\n      }\\n\\n      input:focus + .slider {\\n        box-shadow: 0 0 1px #2196F3;\\n      }\\n\\n      input:checked + .slider:before {\\n        -webkit-transform: translateX(18px);\\n        -ms-transform: translateX(18px);\\n        transform: translateX(18px);\\n      }\\n\\n      /* Rounded sliders */\\n      .slider.round {\\n        border-radius: 34px;\\n      }\\n\\n      .slider.round:before {\\n        border-radius: 50%;\\n\\t  }\\n\\t  input, select {\\n\\t\\tbox-shadow: none;\\n\\t}\\n\\t/* change style special of wi-base-treeview for basemap */\\n\\twi-tree-view, wi-tree-view-virtual {\\n\\t\\t& div input {\\n\\t\\t\\twidth        : 100%;\\n\\t\\t\\tline-height  : 1.4;\\n\\t\\t\\tpadding      : 10px 10px 10px 14px;\\n\\t\\t\\tborder       : none;\\n\\t\\t\\tborder-bottom: 1px solid #f0f0f0;\\n\\t\\t\\toutline      : none;\\n\\t\\t\\tbox-sizing   : border-box;\\n\\n\\t\\t\\t&::placeholder {\\n\\t\\t\\t\\tcolor: #cecece;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\twi-tree-node, wi-tree-node-virtual {\\n\\n        .node-caret,\\n        .node-label,\\n        .node-icon {\\n            display      : flex;\\n            padding-right: 10px;\\n            font-size    : 12px;\\n        }\\n\\n        .node-caret {\\n            color    : #cccbcb;\\n            font-size: 14px;\\n            cursor   : pointer;\\n            width    : 16px;\\n        }\\n\\n        .node-content {\\n            &.search-mode>div {\\n                opacity: 1;\\n            }\\n            &,\\n            &::after {\\n                line-height: 3em;\\n            }\\n\\n        }\\n\\t}\\n\\tsegment-layer svg.edit-point, polygon-layer svg.edit-point {\\n\\t\\tbackground-color: rgba(185, 185, 185, 0);\\n\\t\\tcursor: crosshair;\\n\\t\\tpointer-events: all;\\n\\t\\tz-index: 2;\\n\\t}\\n\\twi-table-view {\\n\\t\\t& div.cell {\\n\\t\\t\\tdisplay: table-cell;\\n\\t\\t\\tpadding: 7px 10px;\\n\\t\\t\\tborder-right: 1px solid #d4d4d4;\\n\\t\\t\\tborder-bottom: 1px solid #d4d4d4;\\n\\t\\t\\tcursor: default;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\tborder-top: none;\\n\\t\\t\\tborder-left: none;\\n\\t\\t}\\n\\t\\t& div.table {\\n\\t\\t\\t// margin-top: 0;\\n\\t\\t\\tmargin-top: 0;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tborder-top: 1px solid #ccc;\\n\\t\\t\\tborder-left: 1px solid #ccc;\\n\\t\\t\\tborder-bottom: none;\\n\\t\\t\\tborder-right: none;\\n\\n\\t\\t}\\n\\t}\\n\\teditable div.my-content {\\n\\t\\tfloat: left;\\n\\t\\t// color: #a9a9a9;\\n\\t}\\n\\n\\twi-dropdown-list {\\n\\t\\t&:focus {\\n\\t\\t\\toutline: none !important;\\n\\t\\t}\\n\\n\\t\\t.ui-select-bootstrap>.ui-select-match>.btn {\\n\\t\\t\\tborder    : none;\\n\\t\\t\\tbox-shadow: none;\\n\\t\\t\\toutline   : none;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tfont-size: 12px;\\n\\t\\t}\\n\\n\\t\\t.btn-default:active:focus {\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t}\\n\\t\\t.btn-default.active, .btn-default:active, .open>.dropdown-toggle.btn-default {\\n\\t\\t\\tcolor: #333;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t\\tbackground-image: none;\\n\\t\\t\\tborder-color: #adadad;\\n\\t\\t}\\n\\n\\t\\t.btn-default.focus,\\n\\t\\t.btn-default:focus {\\n\\t\\t\\tcolor           : #333;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t\\tborder-color    : #fff;\\n\\t\\t}\\n\\t\\t.btn-default-focus {\\n\\t\\t\\tbox-shadow   : none;\\n\\t\\t\\toutline      : none;\\n\\t\\t}\\n\\n\\t\\t.form-control {\\n\\t\\t\\tborder: none;\\n\\t\\t}\\n\\n\\t\\t:focus {\\n\\t\\t\\toutline: none;\\n\\t\\t}\\n\\n\\t\\t.form-control:focus {\\n\\t\\t\\tborder    : none;\\n\\t\\t\\tbox-shadow: none;\\n\\t\\t\\toutline     : none;\\n\\n\\t\\t}\\n\\n\\t\\t.btn-default:hover {\\n\\t\\t\\tcolor           : #333;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t\\tborder-color    : #fff;\\n\\t\\t}\\n\\n\\t}\\n\\n\\tside-bar>div div.content {\\n\\t\\toverflow-x     : hidden;\\n\\t\\theight         : 100%;\\n\\t\\tdisplay        : flex;\\n\\t\\toverflow-y     : auto;\\n\\t\\t/* padding-left: 15px; */\\n\\t\\tflex-direction : row;\\n\\n\\t}\\n\\n\\twi-droppable {\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\twi-tree-node {\\n\\n\\t\\t.node-caret,\\n\\t\\t.node-label,\\n\\t\\t.node-icon {\\n\\t\\t\\tdisplay      : flex;\\n\\t\\t\\tpadding-right: 10px;\\n\\t\\t\\tfont-size    : 12px;\\n\\t\\t}\\n\\n\\t\\t.node-caret {\\n\\t\\t\\tcolor    : #cccbcb;\\n\\t\\t\\tfont-size: 14px;\\n\\t\\t\\tcursor   : pointer;\\n\\t\\t\\twidth    : 16px;\\n\\t\\t}\\n\\n\\t\\t.node-content {\\n\\t\\t\\t&.search-mode>div {\\n\\t\\t\\t\\topacity: 1;\\n\\t\\t\\t}\\n\\t\\t\\t&,\\n\\t\\t\\t&::after {\\n\\t\\t\\t\\tline-height: 3em;\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}\\n\\n\\n\\t.ui-select-match-text {\\n\\t\\ttext-align: right;\\n\\t}\\n\\n\\tbutton.disable {\\n\\t\\tcolor       : #aaa;\\n\\t\\tborder-color: #aaa;\\n\\t}\\n    .active {\\n        background: #f4f4f4;\\n        color     : #0077be;\\n        border    : 1px solid #0077be;\\n        transition: all 0.2s ease-in;\\n    }\\n\\t.fn-button {\\n        border: 1px solid #d9d9d9;\\n        font-size: 10px;\\n        border-radius: 2px;\\n        background: #fff;\\n        padding: 6px 12px 5px 12px;\\n        margin-right: 15px;\\n\\t\\tline-height: 1;\\n\\t\\tfont-weight: bold;\\n        cursor: pointer;\\n        transition   : all 0.2s ease-in;\\n\\n        &:hover {\\n            transition   : all 0.2s ease-in;\\n            border: 1px solid #1962a7;\\n            color: #1962a7;\\n            background: #fff;\\n        }\\n    }\\n\\n\\n\\t.main {\\n\\t\\tdisplay       : flex;\\n\\t\\theight        : 100%;\\n\\t\\tflex-direction: row;\\n\\n\\t\\t.main-toolbar {\\n\\t\\t\\tflex-basis : 44px;\\n\\t\\t\\tbackground : #0074c5;\\n\\t\\t\\tdisplay    : flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tposition   : relative;\\n\\n\\t\\t\\t.menu-item {\\n\\t\\t\\t\\tmargin     : 0 15px;\\n\\t\\t\\t\\tcolor      : #fff;\\n\\t\\t\\t\\tdisplay    : flex;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tcursor     : pointer;\\n\\n\\t\\t\\t\\t.select-proj4 {\\n\\t\\t\\t\\t\\tbox-shadow   : none;\\n\\t\\t\\t\\t\\tborder       : none;\\n\\t\\t\\t\\t\\tborder-radius: 0;\\n\\t\\t\\t\\t\\tfont-size    : 12px;\\n\\t\\t\\t\\t\\tcolor        : #fff;\\n\\t\\t\\t\\t\\tbackground   : none;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.select-proj4:focus {\\n\\t\\t\\t\\t\\tborder-color      : none;\\n\\t\\t\\t\\t\\toutline           : none;\\n\\t\\t\\t\\t\\t-webkit-box-shadow: none;\\n\\t\\t\\t\\t\\tbox-shadow        : none;\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t.statistic-table {\\n\\t\\t\\tmargin: 15px 15px;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\theight: 25%;\\n\\t\\t\\tmax-height: 64%;\\n\\t\\t}\\n\\n\\t\\t.main-body {\\n\\t\\t\\t// flex      : 1;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tdisplay   : flex;\\n\\t\\t\\toverflow-x: auto;\\n\\t\\t\\toverflow-y: hidden;\\n\\t\\t\\tposition  : relative;\\n\\t\\t\\tflex-direction: column;\\n\\n\\t\\t\\t.border-style {\\n\\t\\t\\t\\tborder                 : 1px solid #eee;\\n\\t\\t\\t\\tborder-top-right-radius: 3px;\\n\\t\\t\\t\\tborder-top-left-radius : 3px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.main-body-left {\\n\\t\\t\\t\\tdisplay    : flex;\\n\\t\\t\\t\\tz-index    : 1;\\n\\t\\t\\t\\theight     : calc(100%);\\n\\t\\t\\t\\t// position: absolute;\\n\\n\\t\\t\\t\\t.input-search-list-view {\\n\\t\\t\\t\\t\\tbackground   : #fff;\\n\\t\\t\\t\\t\\twidth        : 100%;\\n\\t\\t\\t\\t\\theight       : 44px;\\n\\t\\t\\t\\t\\tborder       : 1px solid #ffffff4a;\\n\\t\\t\\t\\t\\tborder-bottom: 1px solid #eaeaea;\\n\\t\\t\\t\\t\\tpadding      : 10px 20px 10px 15px;\\n\\t\\t\\t\\t\\tfont-weight  : bold;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t::-webkit-input-placeholder {\\n\\t\\t\\t\\t\\topacity       : 0.5;\\n\\t\\t\\t\\t\\tcolor         : rgba(0, 0, 0, 0.253);\\n\\t\\t\\t\\t\\t/* font-weight: 100; */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t:focus::-webkit-input-placeholder {\\n\\t\\t\\t\\t\\topacity       : 0.5;\\n\\t\\t\\t\\t\\tcolor         : rgba(0, 0, 0, 0.253);\\n\\t\\t\\t\\t\\t/* font-weight: 100; */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.input-search-list-view:focus {\\n\\t\\t\\t\\t\\toutline: none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.main-body-center {\\n\\t\\t\\t\\t// margin        : 0px 10px 0 15px;\\n\\t\\t\\t\\tflex          : 1;\\n\\t\\t\\t\\tdisplay       : flex;\\n\\t\\t\\t\\theight        : 100%;\\n\\t\\t\\t\\tposition      : relative;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t// min-width     : 700px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.button-update {\\n\\t\\t\\tbackground   : #0077be;\\n\\t\\t\\tcolor        : #fff;\\n\\t\\t\\tfont-weight  : bold;\\n\\t\\t\\tflex         : 1;\\n\\t\\t\\tpadding      : 10px;\\n\\t\\t\\ttext-align   : center;\\n\\t\\t\\tmargin       : 9px 15px 15px 15px;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t\\tcursor: pointer;\\n\\t\\t\\t&:hover{\\n\\t\\t\\t\\tbackground: #1ba0ec;\\n\\t\\t\\t\\ttransition: all 0.5s;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t.disabled-click {\\n\\t\\t\\tpointer-events: none;\\n    \\t\\topacity: 0.2;\\n\\t\\t}\\n\\n\\t\\t.label-list-view {\\n\\t\\t\\t// padding        : 16px 15px;\\n\\t\\t\\tfont-weight    : bold;\\n\\t\\t\\tbackground     : #fff;\\n\\t\\t\\t// border      : 1px solid #eee;\\n\\t\\t\\tdisplay        : flex;\\n\\t\\t\\t// align-items    : center;\\n\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\tfont-weight    : 400;\\n\\t\\t\\tright: 0;\\n\\t\\t\\tposition: sticky;\\n\\t\\t}\\n\\n\\t\\t.label-info-image {\\n\\t\\t\\tbackground     : #fff;\\n\\t\\t\\tmin-width      : 99px;\\n\\t\\t\\tdisplay        : flex;\\n\\t\\t\\talign-items    : center;\\n\\t\\t\\tborder-radius  : 3px;\\n\\t\\t\\tpadding        : 5px 10px;\\n\\t\\t\\tmargin-right   : 15px;\\n\\t\\t\\tjustify-content: space-between;\\n\\t\\t}\\n\\n\\t\\t.button-td {\\n\\t\\t\\tcursor       : pointer;\\n\\t\\t\\tbackground   : #f4f4f4;\\n\\t\\t\\tpadding      : 3px 10px;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tborder       : 1px solid #e8e8e8;\\n\\t\\t}\\n\\n\\t\\t.button-td:hover {\\n\\t\\t\\tbackground: #87c1ff;\\n\\t\\t\\tcolor     : #fff;\\n\\t\\t}\\n\\t\\t.header-icon {\\n\\t\\t\\tmargin-right: 15px;\\n\\t\\t\\tcursor: pointer;\\n\\t\\t\\twidth: 10px;\\n\\t\\t}\\n\\n\\t\\t.label-button {\\n\\t\\t\\tfloat         : right;\\n\\t\\t\\tfont-size     : 115%;\\n\\t\\t\\tcolor         : #bbbbbb;\\n\\t\\t\\tmargin        : 2px 5px 0 15px;\\n\\t\\t\\tpointer-events: none;\\n\\t\\t}\\n\\t\\t.button-with-label-layer {\\n\\t\\t\\tcursor       : pointer;\\n\\t\\t\\tbackground   : #f4f4f4;\\n\\t\\t\\tfont-size    : 10px;\\n\\t\\t\\tpadding      : 5px 7px;\\n\\t\\t\\tmargin-left: 5px;\\n\\t\\t\\tborder       : 1px solid #e4e4e4;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tflex: 1;\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\ttransition   : all 0.2s ease-in;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tbackground: #fff;\\n\\t\\t\\t\\tcolor     : #0077be;\\n\\t\\t\\t\\tborder    : 1px solid #0077be;\\n\\t\\t\\t\\ttransition: all 0.2s ease-in;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t.button-with-label {\\n\\t\\t\\tcursor       : pointer;\\n\\t\\t\\tbackground   : #f4f4f4;\\n\\t\\t\\tfont-size    : 10px;\\n\\t\\t\\tpadding      : 5px 10px;\\n\\t\\t\\tborder       : 1px solid #f4f4f4;\\n\\t\\t\\tborder-radius: 20px;\\n\\t\\t\\ttransition   : all 0.2s ease-in;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tborder       : 1px solid #0077be;\\n\\t\\t\\t}\\n\\n\\t\\t\\t&.active {\\n\\t\\t\\t\\tbackground: #f4f4f4;\\n\\t\\t\\t\\tcolor     : #0077be;\\n\\t\\t\\t\\tborder    : 1px solid #0077be;\\n\\t\\t\\t\\ttransition: all 0.2s ease-in;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.tab-with-label {\\n\\t\\t\\tcursor       : pointer;\\n\\t\\t\\tcolor: #cacaca;\\n\\t\\t\\ttransition   : all 0.2s ease-in;\\n\\t\\t\\tmargin: 0px 10px;\\n\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\tfont-weight: bold;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t}\\n\\t\\t\\t&.active {\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t.select-table-header {\\n\\t\\t\\tborder: 1px solid #eee;\\n\\t\\t\\tbackground: #f4f4f4;\\n\\t\\t\\tpadding: 5px 8px;\\n\\t\\t\\tmargin: 0 8px 8px 0;\\n\\t\\t\\tcursor: pointer;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tmin-width: 75px;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\n\\t\\t\\t&.active {\\n\\t\\t\\t\\t// background   : #fff;\\n\\t\\t\\t\\tcolor           : #0077be;\\n\\t\\t\\t\\tborder   : 1px solid #0077be;\\n\\t\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.label-option-sidebar {\\n\\t\\t\\tfont-weight: bold;\\n\\t\\t\\tfont-size: 12px;\\n\\t\\t\\tcolor: #646464;\\n\\t\\t\\t// position: sticky;\\n\\t\\t\\t// z-index: 1;\\n\\t\\t\\t// top: 0;\\n\\t\\t\\tbackground: #fff;\\n\\t\\t\\tpadding:  15px;\\n\\n\\t\\t}\\n\\n\\t\\t.selection-sidebar {\\n\\t\\t\\tborder       : 1px solid #c7c7c7;\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tpadding      : 2px 10px;\\n\\t\\t\\talign-items  : center;\\n\\t\\t\\tdisplay      : flex;\\n\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t    border       : 1px solid #0077be;\\n\\t\\t\\t}\\n\\n\\t\\t\\t&>input:focus {\\n\\t\\t\\t\\toutline: none;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.input-suggestions {\\n\\t\\t\\tmargin-left: 10px;\\n\\t\\t\\tborder     : none;\\n\\t\\t\\tflex       : 1;\\n\\t\\t\\tcolor      : #0077be;\\n\\t\\t\\ttext-align : right;\\n\\t\\t}\\n\\t}\\n\\n\\t.axis-bar {\\n\\t\\tbackground: #fff;\\n\\t\\tborder-radius: 2px;\\n\\t\\tborder: 1px solid #dbdbdb87;\\n\\t\\tfont-size: 10px;\\n\\t\\tdisplay: flex;\\n\\t\\tflex: 1;\\n\\t\\talign-items: center;\\n\\t\\tpadding: 10px 10px;\\n\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t&:hover {\\n\\t\\t\\tborder: 1px solid #0077be;\\n\\t\\t}\\n\\t\\t&.selected {\\n\\n\\t\\t\\t\\tfont-weight: bold;\\n\\t\\t\\t\\tcolor: #0077be;\\n\\n\\t\\t}\\n\\n\\t\\t&::after {\\n\\t\\t\\tcontent: \\\"2r\\\";\\n\\t\\t\\tcolor: transparent;\\n\\t\\t\\tdisplay: block;\\n\\t\\t\\ttop: 0;\\n\\t\\t\\twidth: 4px;\\n\\t\\t\\tright: 0;\\n\\t\\t}\\n\\t}\\n\\t.bottom-add {\\n\\t\\tbackground: #f4f4f4;\\n\\t\\tpadding: 10px;\\n\\t\\tborder-radius: 2px;\\n\\t\\ttext-align: center;\\n\\t\\tmargin: 15px 15px 0 15px;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition      : all 0.2s ease-in;\\n\\n\\t\\t&:hover{\\n\\t\\t\\tbackground: #e7e7e7;\\n\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\n\\t\\t}\\n\\t}\\n\\t.list-formular {\\n\\t\\tpadding: 0 5px 0 15px;\\n\\t\\tmargin-bottom: 15px;\\n\\t\\tdisplay: flex;\\n\\t\\t// background: #f4f4f4;\\n\\t\\tborder-radius: 2px;\\n\\t\\tborder: 1px solid #ddd;\\n\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t&:hover {\\n\\t\\t\\tborder: 1px solid #0077be;\\n\\t\\t}\\n\\t}\\n\\t.delete-button {\\n\\t\\tpadding: 10px;\\n\\t\\tcursor: pointer;\\n\\t\\tfont-size: 15px;\\n\\t\\tcolor: #aaa;\\n\\t\\talign-items: center;\\n\\t\\tborder: none;\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t::-webkit-scrollbar {\\n\\t\\tbackground: #fff;\\n\\t\\twidth     : 5px;\\n\\t}\\n\\n\\t::-webkit-scrollbar-thumb {\\n\\t\\tbackground-color: #ccc;\\n\\t}\\n\\n\\t.fix-header-table {\\n\\t\\toverflow-y: auto;\\n\\t\\tdisplay   : flex;\\n\\t\\tflex      : 1;\\n\\t}\\n\\n\\t.fix-header-table th {\\n\\t\\tposition: sticky;\\n\\t\\ttop     : 0;\\n\\t}\\n\\t.rectangle {\\n         border: 0.5px solid #a7a7a7;\\n         width: 12px;\\n         height: 12px;\\n         border-radius: 11px;\\n         background: #0077be\\n     }\\n\\n\\n\\ttable {\\n\\t\\t// font-family : \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n\\t\\tborder-collapse: collapse;\\n\\t\\ttable-layout   : fixed;\\n\\t\\twidth          : 100%;\\n\\t\\tuser-select    : none;\\n\\n\\n\\t}\\n\\n\\ttable th {\\n\\t\\tposition: sticky;\\n\\t\\ttop     : 0;\\n\\t}\\n\\n\\tthead {\\n\\t\\tborder-bottom: 1px solid #ccc;\\n\\t}\\n\\n\\ttd,\\n\\tth {\\n\\t\\tborder-bottom : 1px solid #f0f0f0;\\n\\t\\tborder-right  : 1px solid #f0f0f0;\\n\\t\\tpadding-top   : 10px;\\n\\t\\tpadding-bottom: 9px;\\n\\t\\tpadding-left  : 14px;\\n\\t\\toverflow      : hidden;\\n\\n\\t}\\n\\n\\ttr {\\n\\t\\tborder-right: 4px solid #fff;\\n\\n\\t\\t&.updated {\\n\\t\\t\\tbackground-color: #c2eaff70;\\n\\t\\t}\\n\\n\\t\\t&.created {\\n\\t\\t\\tbackground-color: #abeaab29;\\n\\t\\t}\\n\\n\\t\\t&.deleted {\\n\\t\\t\\tbackground-color: #f4f4f4;\\n\\t\\t\\tpointer-events  : none;\\n\\t\\t\\tcolor           : #d8d3d3;\\n\\t\\t}\\n\\t}\\n\\n\\ttr:hover {\\n\\t\\tborder-right: 4px solid #0077be;\\n\\t\\tbackground  : #f9f9f9;\\n\\t}\\n\\n\\tth {\\n\\t\\tpadding-top     : 9px;\\n\\t\\tpadding-bottom  : 10px;\\n\\t\\ttext-align      : left;\\n\\t\\tbackground-color: #ffffff;\\n\\t\\tcolor           : #0077be;\\n\\t}\\n\\n\\t::placeholder {\\n\\t\\t/* Chrome, Firefox, Opera, Safari 10.1+ */\\n\\t\\tcolor  : rgb(158, 158, 158);\\n\\t\\topacity: 1;\\n\\t\\t/* Firefox */\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"multi-well-histogram {\\n  /* Rounded sliders */\\n  /* change style special of wi-base-treeview for basemap */\\n}\\nmulti-well-histogram input,\\nmulti-well-histogram select {\\n  box-shadow: none;\\n}\\nmulti-well-histogram .red-color {\\n  color: #cc6d6d;\\n}\\nmulti-well-histogram .blue-color {\\n  color: #0077be;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-well-histogram .disable-node-caret .node-caret {\\n  display: none;\\n}\\nmulti-well-histogram .disable-node-caret wi-tree-node-virtual > div {\\n  padding-left: 13px;\\n}\\nmulti-well-histogram .switch-label {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  color: #666;\\n  font-size: 12px;\\n}\\nmulti-well-histogram .switch-label > label {\\n  margin-bottom: 0;\\n}\\nmulti-well-histogram .switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 35px;\\n  height: 16px;\\n  margin-left: 10px;\\n}\\nmulti-well-histogram .switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\nmulti-well-histogram .slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n}\\nmulti-well-histogram .slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 10px;\\n  width: 10px;\\n  left: 3px;\\n  bottom: 3px;\\n  background-color: white;\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n}\\nmulti-well-histogram input:checked + .slider {\\n  background-color: #2196F3;\\n}\\nmulti-well-histogram input:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\nmulti-well-histogram input:checked + .slider:before {\\n  -webkit-transform: translateX(18px);\\n  -ms-transform: translateX(18px);\\n  transform: translateX(18px);\\n}\\nmulti-well-histogram .slider.round {\\n  border-radius: 34px;\\n}\\nmulti-well-histogram .slider.round:before {\\n  border-radius: 50%;\\n}\\nmulti-well-histogram wi-tree-view div input,\\nmulti-well-histogram wi-tree-view-virtual div input {\\n  width: 100%;\\n  line-height: 1.4;\\n  padding: 10px 10px 10px 14px;\\n  border: none;\\n  border-bottom: 1px solid #f0f0f0;\\n  outline: none;\\n  box-sizing: border-box;\\n}\\nmulti-well-histogram wi-tree-view div input::placeholder,\\nmulti-well-histogram wi-tree-view-virtual div input::placeholder {\\n  color: #cecece;\\n}\\nmulti-well-histogram wi-tree-node .node-content.selected,\\nmulti-well-histogram wi-tree-node-virtual .node-content.selected {\\n  background: linear-gradient(to left, #e4e4e4, #fff);\\n  font-weight: bold;\\n}\\nmulti-well-histogram wi-table-view div.cell {\\n  display: table-cell;\\n  padding: 7px 10px;\\n  border-right: 1px solid #d4d4d4;\\n  border-bottom: 1px solid #d4d4d4;\\n  cursor: default;\\n  position: relative;\\n  border-top: none;\\n  border-left: none;\\n}\\nmulti-well-histogram wi-table-view div.table {\\n  margin-top: 0;\\n}\\nmulti-well-histogram wi-dropdown-list:focus {\\n  outline: none !important;\\n}\\nmulti-well-histogram wi-dropdown-list .ui-select-bootstrap > .ui-select-match > .btn {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  font-size: 12px;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default:active:focus {\\n  background-color: #fff;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default.active,\\nmulti-well-histogram wi-dropdown-list .btn-default:active,\\nmulti-well-histogram wi-dropdown-list .open > .dropdown-toggle.btn-default {\\n  color: #333;\\n  background-color: #fff;\\n  background-image: none;\\n  border-color: #adadad;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default.focus,\\nmulti-well-histogram wi-dropdown-list .btn-default:focus {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-histogram wi-dropdown-list .form-control {\\n  border: none;\\n}\\nmulti-well-histogram wi-dropdown-list :focus {\\n  outline: none;\\n}\\nmulti-well-histogram wi-dropdown-list .form-control:focus {\\n  border: none;\\n  box-shadow: none;\\n}\\nmulti-well-histogram wi-dropdown-list .btn-default:hover {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-histogram side-bar > div div.content {\\n  overflow-x: hidden;\\n  height: 100%;\\n  display: flex;\\n  overflow-y: auto;\\n  /* padding-left: 15px; */\\n  flex-direction: row;\\n}\\nmulti-well-histogram side-bar > div div.content wi-tree-node .node-content.search-mode,\\nmulti-well-histogram side-bar > div div.content wi-tree-node-virtual .node-content.search-mode {\\n  color: #000;\\n}\\nmulti-well-histogram wi-droppable {\\n  height: 100%;\\n}\\nmulti-well-histogram wi-tree-node .node-caret,\\nmulti-well-histogram wi-tree-node-virtual .node-caret,\\nmulti-well-histogram wi-tree-node .node-label,\\nmulti-well-histogram wi-tree-node-virtual .node-label,\\nmulti-well-histogram wi-tree-node .node-icon,\\nmulti-well-histogram wi-tree-node-virtual .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 12px;\\n}\\nmulti-well-histogram wi-tree-node .node-caret,\\nmulti-well-histogram wi-tree-node-virtual .node-caret {\\n  color: #cccbcb;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 16px;\\n}\\nmulti-well-histogram wi-tree-node .node-content.search-mode > div,\\nmulti-well-histogram wi-tree-node-virtual .node-content.search-mode > div {\\n  opacity: 1;\\n}\\nmulti-well-histogram wi-tree-node .node-content,\\nmulti-well-histogram wi-tree-node-virtual .node-content,\\nmulti-well-histogram wi-tree-node .node-content::after,\\nmulti-well-histogram wi-tree-node-virtual .node-content::after {\\n  line-height: 3em;\\n}\\nmulti-well-histogram .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-well-histogram button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-well-histogram .fn-button {\\n  border: 1px solid #d9d9d9;\\n  font-size: 10px;\\n  border-radius: 2px;\\n  background: #fff;\\n  padding: 6px 12px 5px 12px;\\n  margin-right: 15px;\\n  line-height: 1;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .fn-button:hover {\\n  transition: all 0.2s ease-in;\\n  border: 1px solid #1962a7;\\n  color: #1962a7;\\n  background: #fff;\\n}\\nmulti-well-histogram .main {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .main-toolbar {\\n  flex-basis: 44px;\\n  background: #0074c5;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item {\\n  margin: 0 15px;\\n  color: #fff;\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item .select-proj4 {\\n  box-shadow: none;\\n  border: none;\\n  border-radius: 0;\\n  font-size: 12px;\\n  color: #fff;\\n  background: none;\\n}\\nmulti-well-histogram .main .main-toolbar .menu-item .select-proj4:focus {\\n  border-color: none;\\n  outline: none;\\n  -webkit-box-shadow: none;\\n  box-shadow: none;\\n}\\nmulti-well-histogram .main .statistic-table {\\n  margin: 15px 15px;\\n  position: relative;\\n  height: 25%;\\n  max-height: 64%;\\n}\\nmulti-well-histogram .main .main-body {\\n  flex: 1;\\n  display: flex;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .main-body .border-style {\\n  border: 1px solid #eee;\\n  border-top-right-radius: 3px;\\n  border-top-left-radius: 3px;\\n}\\nmulti-well-histogram .main .main-body .main-body-left {\\n  display: flex;\\n  z-index: 1;\\n  height: calc(100%);\\n}\\nmulti-well-histogram .main .main-body .main-body-left .input-search-list-view {\\n  background: #fff;\\n  width: 100%;\\n  height: 44px;\\n  border: 1px solid #ffffff4a;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 10px 20px 10px 15px;\\n  font-weight: bold;\\n}\\nmulti-well-histogram .main .main-body .main-body-left ::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-histogram .main .main-body .main-body-left :focus::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-histogram .main .main-body .main-body-left .input-search-list-view:focus {\\n  outline: none;\\n}\\nmulti-well-histogram .main .main-body .main-body-center {\\n  flex: 1;\\n  display: flex;\\n  height: 100%;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-histogram .main .button-update {\\n  background: #0077be;\\n  color: #fff;\\n  font-weight: bold;\\n  flex: 1;\\n  padding: 10px;\\n  text-align: center;\\n  margin: 9px 15px 15px 15px;\\n  border-radius: 2px;\\n  cursor: pointer;\\n}\\nmulti-well-histogram .main .button-update:hover {\\n  background: #1ba0ec;\\n  transition: all 0.5s;\\n}\\nmulti-well-histogram .main .disabled-click {\\n  pointer-events: none;\\n  opacity: 0.2;\\n}\\nmulti-well-histogram .main .label-list-view {\\n  font-weight: bold;\\n  background: #fff;\\n  display: flex;\\n  justify-content: space-between;\\n  font-weight: 400;\\n  min-width: 40px;\\n}\\nmulti-well-histogram .main .label-info-image {\\n  background: #fff;\\n  min-width: 99px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 3px;\\n  padding: 5px 10px;\\n  margin-right: 15px;\\n  justify-content: space-between;\\n}\\nmulti-well-histogram .main .button-td {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  padding: 3px 10px;\\n  border-radius: 2px;\\n  border: 1px solid #e8e8e8;\\n}\\nmulti-well-histogram .main .button-td:hover {\\n  background: #87c1ff;\\n  color: #fff;\\n}\\nmulti-well-histogram .main .header-icon {\\n  margin-right: 10px;\\n  cursor: pointer;\\n  width: 10px;\\n}\\nmulti-well-histogram .main .label-button {\\n  float: right;\\n  font-size: 115%;\\n  color: #bbbbbb;\\n  margin: 2px 5px 0 15px;\\n  pointer-events: none;\\n}\\nmulti-well-histogram .main .button-with-label-layer {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 7px;\\n  margin-left: 5px;\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  flex: 1;\\n  text-align: center;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label-layer:hover {\\n  background: #fff;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 10px;\\n  border: 1px solid #f4f4f4;\\n  border-radius: 20px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .button-with-label:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-histogram .main .button-with-label.active {\\n  background: #f4f4f4;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .tab-with-label {\\n  cursor: pointer;\\n  color: #cacaca;\\n  transition: all 0.2s ease-in;\\n  margin: 0 10px;\\n  white-space: nowrap;\\n  font-weight: bold;\\n}\\nmulti-well-histogram .main .tab-with-label:hover {\\n  color: #0077be;\\n}\\nmulti-well-histogram .main .tab-with-label.active {\\n  color: #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .select-table-header {\\n  border: 1px solid #eee;\\n  background: #f4f4f4;\\n  padding: 5px 16px;\\n  margin: 0 15px 15px 0;\\n  cursor: pointer;\\n  border-radius: 2px;\\n  min-width: 91px;\\n  display: flex;\\n  justify-content: center;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .select-table-header.active {\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .label-option-sidebar {\\n  font-weight: bold;\\n  font-size: 12px;\\n  color: #646464;\\n  background: #fff;\\n  padding: 11px 16px;\\n}\\nmulti-well-histogram .main .selection-sidebar {\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  padding: 1px 10px;\\n  align-items: center;\\n  display: flex;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram .main .selection-sidebar:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-histogram .main .selection-sidebar > input:focus {\\n  outline: none;\\n}\\nmulti-well-histogram .main .input-suggestions {\\n  margin-left: 10px;\\n  border: none;\\n  flex: 1;\\n  color: #0077be;\\n  text-align: right;\\n}\\nmulti-well-histogram .axis-bar {\\n  background: #fff;\\n  border-radius: 2px;\\n  border-bottom: 1px solid #dbdbdb87;\\n  font-size: 12px;\\n  display: flex;\\n  width: 100%;\\n  text-align: left;\\n  flex: 1;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 10px 10px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-histogram ::-webkit-scrollbar {\\n  background: #f4f4f4;\\n  width: 5px;\\n}\\nmulti-well-histogram ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc;\\n}\\nmulti-well-histogram .fix-header-table {\\n  overflow-y: auto;\\n  display: flex;\\n  flex: 1;\\n}\\nmulti-well-histogram .fix-header-table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-histogram .rectangle {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: #0077be;\\n}\\nmulti-well-histogram table {\\n  border-collapse: collapse;\\n  table-layout: fixed;\\n  width: 100%;\\n  user-select: none;\\n}\\nmulti-well-histogram table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-histogram thead {\\n  border-bottom: 1px solid #ccc;\\n}\\nmulti-well-histogram td,\\nmulti-well-histogram th {\\n  border-bottom: 1px solid #f0f0f0;\\n  border-right: 1px solid #f0f0f0;\\n  padding-top: 10px;\\n  padding-bottom: 9px;\\n  padding-left: 14px;\\n  overflow: hidden;\\n}\\nmulti-well-histogram tr {\\n  border-right: 4px solid #fff;\\n}\\nmulti-well-histogram tr.updated {\\n  background-color: #c2eaff70;\\n}\\nmulti-well-histogram tr.created {\\n  background-color: #abeaab29;\\n}\\nmulti-well-histogram tr.deleted {\\n  background-color: #f4f4f4;\\n  pointer-events: none;\\n  color: #d8d3d3;\\n}\\nmulti-well-histogram tr:hover {\\n  border-right: 4px solid #0077be;\\n  background: #f9f9f9;\\n}\\nmulti-well-histogram th {\\n  padding-top: 9px;\\n  padding-bottom: 10px;\\n  text-align: left;\\n  background-color: #ffffff;\\n  color: #0077be;\\n}\\nmulti-well-histogram ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #9e9e9e;\\n  opacity: 1;\\n  /* Firefox */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./multi-well-histogram/style.less\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"multi-well-histogram {\\n    input, select {\\n        box-shadow: none;\\n    }\\n    .red-color {\\n        color: #cc6d6d;\\n    }\\n    .blue-color{\\n        color: #0077be;\\n    }\\n    ::-webkit-scrollbar-button:horizontal:increment { /* Right */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:horizontal:decrement { /* Left */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:vertical:increment { /* Down */\\n        background-image: none;\\n    }\\n\\n    ::-webkit-scrollbar-button:vertical:decrement { /* Up */\\n        background-image: none;\\n    }\\n    .disable-node-caret {\\n        .node-caret {\\n            display: none;\\n\\t\\t}\\n\\t\\twi-tree-node-virtual > div {\\n\\t\\t\\tpadding-left: 13px;\\n\\t\\t}\\n    }\\n    .switch-label{\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n        color: #666;\\n        font-size: 12px;\\n        &>label{\\n            margin-bottom: 0;\\n        }\\n    }\\n\\n    .switch {\\n        position: relative;\\n          display: inline-block;\\n          width: 35px;\\n          height: 16px;\\n          margin-left: 10px;\\n      }\\n\\n      .switch input {\\n        opacity: 0;\\n        width: 0;\\n        height: 0;\\n      }\\n\\n      .slider {\\n        position: absolute;\\n        cursor: pointer;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        bottom: 0;\\n        background-color: #ccc;\\n        -webkit-transition: .2s;\\n        transition: .2s;\\n      }\\n\\n      .slider:before {\\n        position: absolute;\\n        content: \\\"\\\";\\n        height: 10px;\\n        width: 10px;\\n        left: 3px;\\n        bottom: 3px;\\n        background-color: white;\\n        -webkit-transition: .2s;\\n        transition: .2s;\\n      }\\n\\n      input:checked + .slider {\\n        background-color: #2196F3;\\n      }\\n\\n      input:focus + .slider {\\n        box-shadow: 0 0 1px #2196F3;\\n      }\\n\\n      input:checked + .slider:before {\\n        -webkit-transform: translateX(18px);\\n        -ms-transform: translateX(18px);\\n        transform: translateX(18px);\\n      }\\n\\n      /* Rounded sliders */\\n      .slider.round {\\n        border-radius: 34px;\\n      }\\n\\n      .slider.round:before {\\n        border-radius: 50%;\\n      }\\n\\n\\n    /* change style special of wi-base-treeview for basemap */\\n    wi-tree-view, wi-tree-view-virtual {\\n        & div input {\\n            width        : 100%;\\n            line-height  : 1.4;\\n            padding      : 10px 10px 10px 14px;\\n            border       : none;\\n            border-bottom: 1px solid #f0f0f0;\\n            outline      : none;\\n            box-sizing   : border-box;\\n\\n            &::placeholder {\\n                color: #cecece;\\n            }\\n        }\\n    }\\n    wi-tree-node .node-content.selected, wi-tree-node-virtual .node-content.selected {\\n        background: linear-gradient(to left, #e4e4e4, #fff);\\n        font-weight: bold;\\n    }\\n    wi-table-view {\\n        & div.cell {\\n            display: table-cell;\\n            padding: 7px 10px;\\n            border-right: 1px solid #d4d4d4;\\n            border-bottom: 1px solid #d4d4d4;\\n            cursor: default;\\n            position: relative;\\n            border-top: none;\\n            border-left: none;\\n        }\\n        & div.table {\\n            margin-top: 0;\\n        }\\n    }\\n\\n    wi-dropdown-list {\\n        &:focus {\\n            outline: none !important;\\n        }\\n\\n        .ui-select-bootstrap>.ui-select-match>.btn {\\n            border    : none;\\n            box-shadow: none;\\n            outline   : none;\\n            display: flex;\\n            align-items: center;\\n            font-size: 12px;\\n        }\\n\\n        .btn-default:active:focus {\\n            background-color: #fff;\\n        }\\n        .btn-default.active, .btn-default:active, .open>.dropdown-toggle.btn-default {\\n            color: #333;\\n            background-color: #fff;\\n            background-image: none;\\n            border-color: #adadad;\\n        }\\n\\n        .btn-default.focus,\\n        .btn-default:focus {\\n            color           : #333;\\n            background-color: #fff;\\n            border-color    : #fff;\\n        }\\n\\n        .form-control {\\n            border: none;\\n        }\\n\\n        :focus {\\n            outline: none;\\n        }\\n\\n        .form-control:focus {\\n            border    : none;\\n            box-shadow: none;\\n        }\\n\\n        .btn-default:hover {\\n            color           : #333;\\n            background-color: #fff;\\n            border-color    : #fff;\\n        }\\n    }\\n\\n    side-bar>div div.content {\\n        overflow-x     : hidden;\\n        height         : 100%;\\n        display        : flex;\\n        overflow-y     : auto;\\n        /* padding-left: 15px; */\\n        flex-direction : row;\\n        wi-tree-node .node-content.search-mode, wi-tree-node-virtual .node-content.search-mode {\\n            color: #000;\\n        }\\n\\n    }\\n\\n    wi-droppable {\\n        height: 100%;\\n    }\\n\\n    wi-tree-node, wi-tree-node-virtual {\\n\\n        .node-caret,\\n        .node-label,\\n        .node-icon {\\n            display      : flex;\\n            padding-right: 10px;\\n            font-size    : 12px;\\n        }\\n\\n        .node-caret {\\n            color    : #cccbcb;\\n            font-size: 14px;\\n            cursor   : pointer;\\n            width    : 16px;\\n        }\\n\\n        .node-content {\\n            &.search-mode>div {\\n                opacity: 1;\\n            }\\n            &,\\n            &::after {\\n                line-height: 3em;\\n            }\\n\\n        }\\n    }\\n\\n    .ui-select-match-text {\\n        text-align: right;\\n    }\\n\\n    button.disable {\\n        color       : #aaa;\\n        border-color: #aaa;\\n    }\\n    .fn-button {\\n        border: 1px solid #d9d9d9;\\n        font-size: 10px;\\n        border-radius: 2px;\\n        background: #fff;\\n        padding: 6px 12px 5px 12px;\\n        margin-right: 15px;\\n\\t\\tline-height: 1;\\n\\t\\tfont-weight: bold;\\n        cursor: pointer;\\n        transition   : all 0.2s ease-in;\\n\\n        &:hover {\\n            transition   : all 0.2s ease-in;\\n            border: 1px solid #1962a7;\\n            color: #1962a7;\\n            background: #fff;\\n        }\\n    }\\n\\n    .main {\\n        display       : flex;\\n        height        : 100%;\\n        flex-direction: column;\\n\\n        .main-toolbar {\\n            flex-basis : 44px;\\n            background : #0074c5;\\n            display    : flex;\\n            align-items: center;\\n            position   : relative;\\n\\n            .menu-item {\\n                margin     : 0 15px;\\n                color      : #fff;\\n                display    : flex;\\n                align-items: center;\\n                cursor     : pointer;\\n\\n                .select-proj4 {\\n                    box-shadow   : none;\\n                    border       : none;\\n                    border-radius: 0;\\n                    font-size    : 12px;\\n                    color        : #fff;\\n                    background   : none;\\n                }\\n\\n                .select-proj4:focus {\\n                    border-color      : none;\\n                    outline           : none;\\n                    -webkit-box-shadow: none;\\n                    box-shadow        : none;\\n\\n                }\\n            }\\n        }\\n        .statistic-table {\\n            margin: 15px 15px;\\n            position: relative;\\n            height: 25%;\\n            max-height: 64%;\\n            // overflow: auto;\\n            // flex-basis: 200px;\\n        }\\n\\n        .main-body {\\n            flex      : 1;\\n            display   : flex;\\n            overflow-x: auto;\\n            overflow-y: hidden;\\n            position  : relative;\\n            flex-direction: column;\\n\\n            .border-style {\\n                border                 : 1px solid #eee;\\n                border-top-right-radius: 3px;\\n                border-top-left-radius : 3px;\\n            }\\n\\n            .main-body-left {\\n                display    : flex;\\n                z-index    : 1;\\n                height     : calc(100%);\\n                // position: absolute;\\n\\n                .input-search-list-view {\\n                    background   : #fff;\\n                    width        : 100%;\\n                    height       : 44px;\\n                    border       : 1px solid #ffffff4a;\\n                    border-bottom: 1px solid #eaeaea;\\n                    padding      : 10px 20px 10px 15px;\\n                    font-weight  : bold;\\n                }\\n\\n                ::-webkit-input-placeholder {\\n                    opacity       : 0.5;\\n                    color         : rgba(0, 0, 0, 0.253);\\n                    /* font-weight: 100; */\\n                }\\n\\n                :focus::-webkit-input-placeholder {\\n                    opacity       : 0.5;\\n                    color         : rgba(0, 0, 0, 0.253);\\n                    /* font-weight: 100; */\\n                }\\n\\n                .input-search-list-view:focus {\\n                    outline: none;\\n                }\\n            }\\n\\n            .main-body-center {\\n                // margin        : 0px 10px 0 15px;\\n                flex          : 1;\\n                display       : flex;\\n                height        : 100%;\\n                position      : relative;\\n                flex-direction: column;\\n                // min-width     : 700px;\\n            }\\n        }\\n\\n        .button-update {\\n            background   : #0077be;\\n            color        : #fff;\\n            font-weight  : bold;\\n            flex         : 1;\\n            padding      : 10px;\\n            text-align   : center;\\n            margin       : 9px 15px 15px 15px;\\n            border-radius: 2px;\\n            cursor: pointer;\\n            &:hover{\\n                background: #1ba0ec;\\n                transition: all 0.5s;\\n            }\\n        }\\n\\t\\t.disabled-click {\\n\\t\\t\\tpointer-events: none;\\n    \\t\\topacity: 0.2;\\n\\t\\t}\\n\\n        .label-list-view {\\n            // padding        : 16px 15px;\\n            font-weight    : bold;\\n            background     : #fff;\\n            // border      : 1px solid #eee;\\n            display        : flex;\\n            // align-items    : center;\\n            justify-content: space-between;\\n            font-weight    : 400;\\n            min-width      : 40px;\\n        }\\n\\n        .label-info-image {\\n            background     : #fff;\\n            min-width      : 99px;\\n            display        : flex;\\n            align-items    : center;\\n            border-radius  : 3px;\\n            padding        : 5px 10px;\\n            margin-right   : 15px;\\n            justify-content: space-between;\\n        }\\n\\n        .button-td {\\n            cursor       : pointer;\\n            background   : #f4f4f4;\\n            padding      : 3px 10px;\\n            border-radius: 2px;\\n            border       : 1px solid #e8e8e8;\\n        }\\n\\n        .button-td:hover {\\n            background: #87c1ff;\\n            color     : #fff;\\n        }\\n        .header-icon {\\n            margin-right: 10px;\\n            cursor: pointer;\\n            width: 10px;\\n        }\\n\\n        .label-button {\\n            float         : right;\\n            font-size     : 115%;\\n            color         : #bbbbbb;\\n            margin        : 2px 5px 0 15px;\\n            pointer-events: none;\\n        }\\n        .button-with-label-layer {\\n            cursor       : pointer;\\n            background   : #f4f4f4;\\n            font-size    : 10px;\\n            padding      : 5px 7px;\\n            margin-left: 5px;\\n            border       : 1px solid #e4e4e4;\\n            border-radius: 2px;\\n            flex: 1;\\n            text-align: center;\\n            transition   : all 0.2s ease-in;\\n            &:hover {\\n                background: #fff;\\n                color     : #0077be;\\n                border    : 1px solid #0077be;\\n                transition: all 0.2s ease-in;\\n            }\\n        }\\n        .button-with-label {\\n            cursor       : pointer;\\n            background   : #f4f4f4;\\n            font-size    : 10px;\\n            padding      : 5px 10px;\\n            border       : 1px solid #f4f4f4;\\n            border-radius: 20px;\\n            transition   : all 0.2s ease-in;\\n            &:hover {\\n             border       : 1px solid #0077be;\\n            }\\n\\n            &.active {\\n                background: #f4f4f4;\\n                color     : #0077be;\\n                border    : 1px solid #0077be;\\n                transition: all 0.2s ease-in;\\n            }\\n        }\\n\\n        .tab-with-label {\\n            cursor       : pointer;\\n\\t\\t\\tcolor: #cacaca;\\n\\t\\t\\ttransition   : all 0.2s ease-in;\\n\\t\\t\\tmargin: 0 10px;\\n\\t\\t\\t// width: 40px;\\n\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\tfont-weight: bold;\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t}\\n\\t\\t\\t&.active {\\n\\t\\t\\t\\tcolor: #0077be;\\n\\t\\t\\t\\ttransition      : all 0.2s ease-in;\\n\\t\\t\\t}\\n\\t\\t}\\n        .select-table-header {\\n            border: 1px solid #eee;\\n            background: #f4f4f4;\\n            padding: 5px 16px;\\n            margin: 0 15px 15px 0;\\n            cursor: pointer;\\n            border-radius: 2px;\\n            min-width: 91px;\\n            display: flex;\\n            justify-content: center;\\n            transition: all 0.2s ease-in;\\n\\n            &.active {\\n                // background   : #fff;\\n                color           : #0077be;\\n                border   : 1px solid #0077be;\\n                transition      : all 0.2s ease-in;\\n            }\\n        }\\n\\n        .label-option-sidebar {\\n            font-weight: bold;\\n            font-size: 12px;\\n            color: #646464;\\n            // position: sticky;\\n            // z-index: 1;\\n            // top: 0;\\n            background: #fff;\\n            padding: 11px 16px;\\n        }\\n\\n        .selection-sidebar {\\n            border       : 1px solid #e4e4e4;\\n            border-radius: 2px;\\n            padding      : 1px 10px;\\n            align-items  : center;\\n            display      : flex;\\n            transition      : all 0.2s ease-in;\\n            &:hover {\\n                border       : 1px solid #0077be;\\n                }\\n            &>input:focus {\\n                outline: none;\\n            }\\n        }\\n        .input-suggestions {\\n            margin-left: 10px;\\n            border     : none;\\n            flex       : 1;\\n            color      : #0077be;\\n            text-align : right;\\n        }\\n    }\\n    .axis-bar {\\n        background: #fff;\\n        border-radius: 2px;\\n        border-bottom: 1px solid #dbdbdb87;\\n        font-size: 12px;\\n        display: flex;\\n        width: 100%;\\n        text-align: left;\\n        flex: 1;\\n        justify-content: space-between;\\n        align-items: center;\\n        padding: 10px 10px;\\n        transition: all 0.2s ease-in;\\n\\t}\\n\\n    ::-webkit-scrollbar {\\n        background: #f4f4f4;\\n        width     : 5px;\\n    }\\n\\n    ::-webkit-scrollbar-thumb {\\n        background-color: #dcdcdc;\\n    }\\n\\n    .fix-header-table {\\n        overflow-y: auto;\\n        display   : flex;\\n        flex      : 1;\\n    }\\n\\n    .fix-header-table th {\\n        position: sticky;\\n        top     : 0;\\n    }\\n    .rectangle {\\n        width: 8px;\\n        height: 8px;\\n        border-radius: 50%;\\n        background: #0077be;\\n    }\\n\\n    table {\\n        // font-family : \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n        border-collapse: collapse;\\n        table-layout   : fixed;\\n        width          : 100%;\\n        user-select    : none;\\n\\n\\n    }\\n\\n    table th {\\n        position: sticky;\\n        top     : 0;\\n    }\\n\\n    thead {\\n        border-bottom: 1px solid #ccc;\\n    }\\n\\n    td,\\n    th {\\n        border-bottom : 1px solid #f0f0f0;\\n        border-right  : 1px solid #f0f0f0;\\n        padding-top   : 10px;\\n        padding-bottom: 9px;\\n        padding-left  : 14px;\\n        overflow      : hidden;\\n\\n    }\\n\\n    tr {\\n        border-right: 4px solid #fff;\\n\\n        &.updated {\\n            background-color: #c2eaff70;\\n        }\\n\\n        &.created {\\n            background-color: #abeaab29;\\n        }\\n\\n        &.deleted {\\n            background-color: #f4f4f4;\\n            pointer-events  : none;\\n            color           : #d8d3d3;\\n        }\\n    }\\n\\n    tr:hover {\\n        border-right: 4px solid #0077be;\\n        background  : #f9f9f9;\\n    }\\n\\n    th {\\n        padding-top     : 9px;\\n        padding-bottom  : 10px;\\n        text-align      : left;\\n        background-color: #ffffff;\\n        color           : #0077be;\\n    }\\n\\n    ::placeholder {\\n        /* Chrome, Firefox, Opera, Safari 10.1+ */\\n        color  : rgb(158, 158, 158);\\n        opacity: 1;\\n        /* Firefox */\\n    }\\n\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","module.exports = \"<wi-droppable style=\\\"display: flex;width: 100%;background: #ffffff;z-index: 1;box-shadow: 0 4px 9px #00000014;flex-basis: 40px;border-radius: 2px;\\\" on-drop=\\\"self.onDrop\\\"\\n    container-style=\\\"{display:'flex',flex: 1, position: 'relative'}\\\">\\n    <div class=\\\"tab\\\">\\n        <div class=\\\"tab-name\\\" ng-repeat=\\\"(idx, xVal) in self.selectionXValues\\\"\\n            ng-class=\\\"{active: tabIndex === idx}\\\"\\n            ng-click=\\\"self.activateTab(idx)\\\">\\n            <div ng-if=\\\"self.selectionTypes[idx] === 'curve'\\\" class=\\\"curve-16x16\\\" style=\\\"margin-right: 10px;\\\"></div>\\n            <div ng-if=\\\"self.selectionTypes[idx] === 'family'\\\" class=\\\"family-16x16\\\" style=\\\"margin-right: 10px;\\\"></div>\\n            <div ng-if=\\\"self.selectionTypes[idx] === 'family-group'\\\" class=\\\"family-group-16x16\\\"\\n                style=\\\"margin-right: 10px;\\\"></div>\\n            {{self.selectionXValues[idx].value}} - {{self.selectionYValues[idx].value}}\\n        </div>\\n        <div class=\\\"tab-drop\\\">\\n            Drop curves here\\n            <div style=\\\"margin-left: 15px; opacity: 0.4;\\\" class=\\\"ti-plus\\\"></div>\\n        </div>\\n    </div>\\n    <div ng-class=\\\"{'show-warning': self.warning}\\\" class=\\\"warning\\\">\\n        DROP CURVES, TRY AGAIN!\\n    </div>\\n</wi-droppable>\\n<div ng-show=\\\"tabIndex === idx\\\" class=\\\"main\\\" ng-repeat=\\\"(idx, xVal) in self.selectionXValues\\\">\\n    <multi-well-crossplot well-spec=\\\"self.wellSpecs[idx]\\\" zoneset-name=\\\"self.zonesetNames[idx]\\\"\\n        loga-x=\\\"self.logaX\\\"\\n        loga-y=\\\"self.logaY\\\"\\n        scale-left=\\\"self.scaleLeft\\\"\\n        scale-right=\\\"self.scaleRight\\\"\\n        scale-bottom=\\\"self.scaleBottom\\\"\\n        scale-top=\\\"self.scaleTop\\\"\\n        selection-type=\\\"self.selectionTypes[idx]\\\"\\n        selection-value-list=\\\"self.getSelectionValueList(idx)\\\"\\n        param-groups=\\\"self.getParamGroups()\\\"\\n        param-group-points-fn=\\\"self.paramGroupPointsFn\\\"\\n        get-param-group-x=\\\"self.getParamGroupX\\\"\\n        get-param-group-y=\\\"self.getParamGroupY\\\"\\n        set-param-group-x=\\\"self.setParamGroupX\\\"\\n        set-param-group-y=\\\"self.setParamGroupY\\\"\\n        get-param-group-point-label=\\\"self.getParamGroupPointLabel\\\"\\n        silent=\\\"true\\\"\\n        pickett-sets=\\\"self.pickettSets\\\"\\n        show-adjuster=\\\"self.showAdjuster\\\"\\n        get-pickett-set-rw=\\\"self.getPickettSetRw\\\"\\n        set-pickett-set-rw=\\\"self.setPickettSetRw\\\"\\n        get-pickett-set-a=\\\"self.getPickettSetA\\\"\\n        set-pickett-set-a=\\\"self.setPickettSetA\\\"\\n        get-pickett-set-m=\\\"self.getPickettSetM\\\"\\n        set-pickett-set-m=\\\"self.setPickettSetM\\\"\\n        get-pickett-set-n=\\\"self.getPickettSetN\\\"\\n        set-pickett-set-n=\\\"self.setPickettSetN\\\"\\n        set-pickett-set-name=\\\"self.setPickettSetName\\\"\\n        get-pickett-set-name=\\\"self.getPickettSetName\\\"\\n        get-pickett-set-color=\\\"self.getPickettSetColor\\\"\\n        overlay-line=\\\"self.overlayLine\\\"\\n        show-pickett-set-at=\\\"self.showPickettSetAt\\\"\\n        on-init-fn=\\\"self.onInitFn\\\"\\n        on-reload=\\\"self.onReload\\\"\\n        id-project=\\\"self.idProject\\\"\\n    ></multi-well-crossplot>\\n</div>\\n\";","module.exports = \"<wi-droppable style=\\\"display: flex;width: 100%;background: #ffffff;z-index: 1;box-shadow: 0 4px 9px #00000014;flex-basis: 40px;border-radius: 2px;\\\" on-drop=\\\"self.onDrop\\\"\\n    container-style=\\\"{display:'flex',flex: 1, position: 'relative'}\\\">\\n    <div class=\\\"tab\\\">\\n        <div class=\\\"tab-name\\\" ng-repeat=\\\"sV in self.selectionValues\\\" ng-class=\\\"{active: tabIndex === $index}\\\"\\n            ng-click=\\\"self.activateTab($index)\\\">\\n            <div ng-if=\\\"self.selectionTypes[$index] === 'curve'\\\" class=\\\"curve-16x16\\\" style=\\\"margin-right: 10px;\\\"></div>\\n            <div ng-if=\\\"self.selectionTypes[$index] === 'family'\\\" class=\\\"family-16x16\\\" style=\\\"margin-right: 10px;\\\">\\n            </div>\\n            <div ng-if=\\\"self.selectionTypes[$index] === 'family-group'\\\" class=\\\"family-group-16x16\\\"\\n                style=\\\"margin-right: 10px;\\\"></div>\\n            {{self.selectionValues[$index]}}\\n        </div>\\n        <div class=\\\"tab-drop\\\">\\n            Drop curve here\\n            <div style=\\\"margin-left: 15px; opacity: 0.4;\\\" class=\\\"plus-16x16\\\"></div>\\n        </div>\\n    </div>\\n    <div ng-class=\\\"{'show-warning': self.warning}\\\" class=\\\"warning\\\">\\n        DROP CURVE, TRY AGIAN!\\n    </div>\\n</wi-droppable>\\n<div ng-show=\\\"tabIndex === $index\\\" class=\\\"main\\\" ng-repeat=\\\"sV in self.selectionValues\\\">\\n    <multi-well-histogram well-spec=\\\"self.wellSpecs[$index]\\\" zoneset-name=\\\"self.zonesetNames[$index]\\\"\\n        selection-type=\\\"self.selectionTypes[$index]\\\" selection-value=\\\"self.selectionValues[$index]\\\"\\n        ctrl-params=\\\"self.getCtrlParams($index)\\\" zone-set-ctrl-lines=\\\"self.zoneSetCtrlLines\\\"\\n        config=\\\"self.configs[$index]\\\" silent=\\\"self.silent\\\" prefix='self.prefixs[$index]'\\n        cp-get-marker-val='self.cpGetMarkerVal' cp-set-marker-val='self.cpSetMarkerVal'\\n        cp-marker-style='self.cpMarkerStyle' cp-marker-name='self.cpMarkerName'\\n        cp-icons='self.cpIcons' cp-icon-style='self.cpIconStyle' no-stack=\\\"self.noStack\\\"\\n        stack-mode=\\\"self.stackMode\\\" on-marker-drag-end=\\\"self.onMarkerDragEnd\\\"\\n        on-reload=\\\"self.onReload\\\" id-project=\\\"self.idProject\\\">\\n    </multi-well-histogram>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>\\n        Configuration\\n    </div>\\n</div>\\n<div style=\\\"overflow: auto;\\\">\\n    <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 15px 15px 0 15px;\\\">\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Title'\\\" item-value=\\\"self.getConfigTitle\\\"\\n                set-value=\\\"self.setConfigTitle\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 0 15px;\\\">\\n            <div style=\\\"display: flex;margin: 15px 0;\\\">X-Axis Scale\\n                    <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                    </div>\\n                </div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'X Label'\\\" item-value=\\\"self.getConfigXLabel\\\"\\n                set-value=\\\"self.setConfigXLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n            <span>Unit</span>\\n            <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.xUnitList'\\n                current-select=\\\"self.config.xUnit || self.defaultConfig.xUnit\\\" on-item-changed=\\\"self.onXUnitChange\\\">\\n            </wi-dropdown-list>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Left'\\\" item-value=\\\"self.getLeft\\\" set-value=\\\"self.setConfigLeft\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-right: 15px; \\\"></div>\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Right'\\\" item-value=\\\"self.getRight\\\"\\n                        set-value=\\\"self.setConfigRight\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;flex: 1;\\\">\\n                        <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                            item-label=\\\"'Major X'\\\" item-value=\\\"self.getMajorX\\\"\\n                            set-value=\\\"self.setConfigMajorX\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                            content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                        </editable>\\n                    </div>\\n                    <div style=\\\"margin-right: 15px; \\\"></div>\\n                    <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;flex: 1;\\\">\\n                        <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                            item-label=\\\"'Minor X'\\\" item-value=\\\"self.getMinorX\\\"\\n                            set-value=\\\"self.setConfigMinorX\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                            content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                        </editable>\\n                    </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 0 15px;\\\">\\n        <div style=\\\"display: flex;margin: 15px 0;\\\">Y-Axis Scale\\n            <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Y Label'\\\" item-value=\\\"self.getConfigYLabel\\\"\\n                set-value=\\\"self.setConfigYLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n            <span>Unit</span>\\n            <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.yUnitList'\\n                current-select=\\\"self.config.yUnit || self.defaultConfig.yUnit\\\" on-item-changed=\\\"self.onYUnitChange\\\">\\n            </wi-dropdown-list>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div style=\\\"display: flex;\\\">\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Bottom'\\\" item-value=\\\"self.getBottom\\\"\\n                    set-value=\\\"self.setConfigBottom\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-right: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Top'\\\" item-value=\\\"self.getTop\\\" set-value=\\\"self.setConfigTop\\\"\\n                    enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n        </div>\\n\\n\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                        <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                            item-label=\\\"'Major Y'\\\" item-value=\\\"self.getMajorY\\\"\\n                            set-value=\\\"self.setConfigMajorY\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                            content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                        </editable>\\n                    </div>\\n                    <div style=\\\"margin-right: 15px; \\\"></div>\\n                    <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;flex: 1;\\\">\\n                        <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                            item-label=\\\"'Minor Y'\\\" item-value=\\\"self.getMinorY\\\"\\n                            set-value=\\\"self.setConfigMinorY\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                            content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                        </editable>\\n                    </div>\\n\\n        </div>\\n\\n    </div>\\n    <div ng-show=\\\"self.getSelectionValue('Z1').isUsed\\\">\\n        <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 0 15px;\\\">\\n            <div style=\\\"display: flex;margin: 15px 0;\\\">Color Z1\\n                    <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                    </div>\\n            </div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Color Z1 Label'\\\" item-value=\\\"self.getConfigZ1Label\\\"\\n                    set-value=\\\"self.setConfigZ1Label\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n                <span>Unit</span>\\n                <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.z1UnitList'\\n                    current-select=\\\"self.config.z1Unit || self.defaultConfig.z1Unit\\\" on-item-changed=\\\"self.onZ2UnitChange\\\">\\n                </wi-dropdown-list>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Min'\\\" item-value=\\\"self.getZ1Min\\\" set-value=\\\"self.setZ1Min\\\"\\n                        enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-right: 15px; \\\"></div>\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Max'\\\" item-value=\\\"self.getZ1Max\\\"\\n                        set-value=\\\"self.setZ1Max\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'N'\\\" item-value=\\\"self.getZ1N\\\"\\n                    set-value=\\\"self.setZ1N\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n                    edit-type=\\\"'number'\\\" min-value=\\\"1\\\" max-value=\\\"10\\\">\\n                </editable>\\n            </div>\\n        </div>\\n        <div class=\\\"label-option-sidebar\\\"\\n             style=\\\"padding: 15px 15px 5px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n            <div>\\n                <div class=\\\"selection-sidebar\\\" >\\n                    <span>Color Palette</span>\\n                    <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\"\\n                          current-select=\\\"self.config.currentPalName\\\"\\n                          on-item-changed=\\\"self.onChangePal\\\"\\n                          on-wi-dropdown-init=\\\"self.onPalsDropdownInit\\\">\\n                    </wi-dropdown-list>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- <div style=\\\"padding: 15px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n            <span ng-class=\\\"{}\\\" style=\\\"margin-right: 8px;\\\"\\n                ng-click=\\\"self.modifyColorZ1()\\\" class=\\\"button-with-label\\\">Modify Color</span>\\n        </div> -->\\n    </div>\\n    <div ng-show=\\\"self.getSelectionValue('Z2').isUsed\\\">\\n        <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 0 15px;\\\">\\n            <div style=\\\"display: flex;margin: 15px 0;\\\">Point Size Z2\\n                <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Point Size Z2 Label'\\\" item-value=\\\"self.getConfigZ2Label\\\"\\n                    set-value=\\\"self.setConfigZ2Label\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n                <span>Unit</span>\\n                <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.z2UnitList'\\n                    current-select=\\\"self.config.z2Unit || self.defaultConfig.z2Unit\\\" on-item-changed=\\\"self.onZ2UnitChange\\\">\\n                </wi-dropdown-list>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Min'\\\" item-value=\\\"self.getZ2Min\\\" set-value=\\\"self.setZ2Min\\\"\\n                        enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-right: 15px; \\\"></div>\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Max'\\\" item-value=\\\"self.getZ2Max\\\"\\n                        set-value=\\\"self.setZ2Max\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'N'\\\" item-value=\\\"self.getZ2N\\\"\\n                    set-value=\\\"self.setZ2N\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n                    edit-type=\\\"'number'\\\" min-value=\\\"1\\\" max-value=\\\"10\\\">\\n                </editable>\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-show=\\\"self.getSelectionValue('Z3').isUsed\\\">\\n        <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 0 15px;\\\">\\n            <div style=\\\"display: flex;margin: 15px 0;\\\">Label Z3\\n                <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Label Z3 Label'\\\" item-value=\\\"self.getConfigZ3Label\\\"\\n                    set-value=\\\"self.setConfigZ3Label\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n                <span>Unit</span>\\n                <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.z3UnitList'\\n                                  current-select=\\\"self.config.z3Unit || self.defaultConfig.z3Unit\\\" on-item-changed=\\\"self.onZ3UnitChange\\\">\\n                </wi-dropdown-list>\\n            </div>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div style=\\\"display: flex;\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Min'\\\" item-value=\\\"self.getZ3Min\\\" set-value=\\\"self.setZ3Min\\\"\\n                        enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-right: 15px; \\\"></div>\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Max'\\\" item-value=\\\"self.getZ3Max\\\"\\n                        set-value=\\\"self.setZ3Max\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n            </div>\\n\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'N'\\\" item-value=\\\"self.getZ3N\\\"\\n                    set-value=\\\"self.setZ3N\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n                    edit-type=\\\"'number'\\\" min-value=\\\"1\\\" max-value=\\\"10\\\">\\n                </editable>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Point Size\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Point Size'\\\" item-value=\\\"self.getPointSize\\\" set-value=\\\"self.setPointSize\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Log scales\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.getLogaX()}\\\" style=\\\"margin-right: 8px;\\\"\\n                ng-click=\\\"self.config.logaX=!self.config.logaX\\\" class=\\\"button-with-label\\\">Loga\\n                X</span>\\n            <span ng-class=\\\"{'active' : self.getLogaY()}\\\" style=\\\"margin-right: 8px;\\\"\\n                ng-click=\\\"self.config.logaY=!self.config.logaY\\\" class=\\\"button-with-label\\\">Loga\\n                Y</span>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Color Mode\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'zone'}\\\"\\n                ng-click=\\\"self.config.colorMode='zone'\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\"> Zone Color</span>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'well'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='well'\\\"\\n                class=\\\"button-with-label\\\">Well Color</span>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'index'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='index'\\\"\\n                class=\\\"button-with-label\\\">Index Color</span>\\n            <!-- <span ng-class=\\\"{'active' : self.config.colorMode === 'user'}\\\"\\n                ng-click=\\\"self.config.colorMode='user'\\\" class=\\\"button-with-label\\\">User\\n                Defined</span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Reverse Axis\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-click=\\\"self.reverseAxis()\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\">Reverse Axis</span>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 15px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Table Information\\n            <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div style=\\\"display: flex; flex-wrap: wrap;\\\">\\n            <span ng-repeat=\\\"(headerIdx, header) in self.statisticHeaders\\\"\\n                class=\\\"select-table-header\\\" ng-class=\\\"{'active' : self.statisticHeaderMasks[headerIdx]}\\\"\\n                ng-click=\\\"self.statisticHeaderMasks[headerIdx]= !self.statisticHeaderMasks[headerIdx]\\\">\\n                {{header}}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Layer Setting</div>\\n</div>\\n<div style=\\\"display: flex; padding: 16px 16px 10px 16px;\\\">\\n    <span ng-click=\\\"self.hideSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0px;\\\">Deactivate</span>\\n    <span ng-click=\\\"self.showSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Activate</span>\\n    <span ng-click=\\\"self.hideAllLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Deactivate All</span>\\n    <span ng-click=\\\"self.showAllLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Activate All</span>\\n</div>\\n<div ng-show=\\\"self.layers\\\"\\n    style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px;flex: 1;overflow: auto; \\\" class=\\\"disable-node-caret\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\n        filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getLayerIcon\\\"\\n        get-icons=\\\"self.getLayerIcons\\\" icon-style=\\\"self.getLayerIconStyle\\\" get-children=\\\"self.noChildren\\\" keep-children='true'\\n        run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n        click-fn='self.click2ToggleLayer'>\\n    </wi-tree-view-virtual>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-list-view ng-scope\\\"\\n    style=\\\"display :flex; background: #f4f4f4; padding: 9px 15px; justify-content: flex-start;\\\">\\n\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.refresh()\\\">RELOAD</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.saveToAsset()\\\">SAVE</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.saveAs()\\\">SAVE AS</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.print()\\\">PRINT</span>\\n    <span class=\\\"fn-button\\\" ng-class=\\\"{'active' : self.showTooltip}\\\" ng-click=\\\"self.showTooltip = !self.showTooltip\\\">TOOLTIP</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.exportStatistic()\\\">Export Statistic</span>\\n    <span ng-if=\\\"self.copyEmbeddedLink\\\" class=\\\"fn-button\\\" ng-click=\\\"self.copyEmbeddedLink(self)\\\" title=\\\"Copy embedded link\\\">\\n        <span class=\\\"fa fa-link\\\"></span>\\n    </span>\\n</div>\\n<div style=\\\"flex: 1; display: flex; flex-direction: column;\\\">\\n    <div class=\\\"main-body-center border-style printable\\\" style=\\\"position: relative;\\\" id='layer-collection'>\\n        <layer-collection v-padding=\\\"vPadding\\\" h-padding='hPadding'>\\n            <axis-layer min-val='self.getLeft()' max-val='self.getRight()' n-ticks=\\\"self.getMajorX() * self.getMinorX()\\\"\\n                minor-ticks=\\\"self.getMinorX()\\\" loga=\\\"self.getLogaX()\\\" precision=\\\"4\\\" grid=\\\"!!self.config.grid\\\"\\n                placement=\\\"1\\\" get-min-val='self.getLeft' get-max-val='self.getRight'></axis-layer>\\n            <axis-layer min-val='self.getBottom()' max-val='self.getTop()' n-ticks=\\\"self.getMajorY() * self.getMinorY()\\\"\\n                minor-ticks=\\\"self.getMinorY()\\\" loga=\\\"self.getLogaY()\\\" precision=\\\"4\\\" grid=\\\"!!self.config.grid\\\"\\n                axis-direction=\\\"'up'\\\" placement=\\\"0\\\" get-min-val='self.getBottom' get-max-val='self.getTop'></axis-layer>\\n            <scatter-layer ng-show=\\\"!layer._notUsed\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" loga=\\\"self.getLogaX()\\\" ortho-loga=\\\"self.getLogaY()\\\"\\n                my-data-x=\\\"layer.dataX\\\" my-data-y=\\\"layer.dataY\\\"\\n                symbol=\\\"self.getSelectionValue('Z3').isUsed ? 'textSymbol' : 'circle'\\\" symbol-size=\\\"5\\\"\\n                symbol-fill-style=\\\"layer.color\\\" symbol-stroke-style=\\\"'transparent'\\\" color-func=\\\"layer.color\\\"\\n                point-size-func=\\\"layer.size\\\" symbol-func=\\\"layer.textSymbol\\\" ng-repeat=\\\"layer in self.layers\\\">\\n            </scatter-layer>\\n            <heat-map\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\"\\n                loga=\\\"self.getLogaX()\\\" ortho-loga=\\\"self.getLogaY()\\\" update-trigger=\\\"self.propMapUpdateTrigger\\\"\\n                n-row=\\\"self.getRowsNumPropMap()\\\" n-col=\\\"self.getColsNumPropMap()\\\" cell-value-fn=\\\"self.cellValuePropMap\\\" cell-color-fn=\\\"self.cellColorPropMap\\\">\\n            </heat-map>\\n            <line-formula-layer min-val='self.getLeft()' max-val=\\\"self.getRight()\\\" min-draw='self.getLeft()'\\n                max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\" min-draw-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\"\\n                max-draw-y=\\\"self.getTop()\\\" ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\" formula=\\\"self.regLine\\\"\\n                eqn-offsets=\\\"['50px', '0%']\\\" line-color=\\\"self.regLine.lineStyle.lineColor\\\"\\n                line-dash=\\\"self.regLine.lineStyle.lineStyle.join(' ')\\\" line-width=\\\"self.regLine.lineStyle.lineWidth\\\" show-equation='true'\\n                mse=\\\"self.mse\\\" ng-if='self.regLine && self.regLine.family' resolution='500'>\\n            </line-formula-layer>\\n            <line-formula-layer min-val='self.getLeft()' max-val=\\\"self.getRight()\\\" min-draw='self.getLeft()'\\n                max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\" min-draw-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\"\\n                max-draw-y=\\\"self.getTop()\\\" ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\" formula=\\\"udl\\\"\\n                eqn-offsets=\\\"['65px', self.eqnOffsetY(udlIdx)]\\\" line-color=\\\"udl.lineStyle.lineColor\\\"\\n                line-dash=\\\"udl.lineStyle.lineStyle.join(' ')\\\" line-width=\\\"udl.lineStyle.lineWidth\\\"\\n                ng-repeat=\\\"(udlIdx, udl) in self.udls \\\" show-equation='udl.displayEquation' ng-show='!udl._notUsed'\\n                resolution='500' ng-if=\\\"self.validPlotRegion()\\\">\\n            </line-formula-layer>\\n            <line-formula-layer min-val='self.getLeft()' max-val=\\\"self.getRight()\\\" min-draw='self.getLeft()'\\n                max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" min-draw-y=\\\"self.getBottom()\\\"\\n                max-draw-y=\\\"self.getTop()\\\" ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\" formula=\\\"pickett\\\"\\n                show-equation='false' ng-repeat=\\\"(pickettIdx, pickett) in self.allPickettLines \\\"\\n                ng-if='self.validPlotRegion() && self.conditionForPickettPlot() && self.allPickettLines && !self.notShowPickett' resolution='5000'\\n                line-label='pickett.label' line-label-style=\\\"pickett.style\\\" ng-show='pickett._used'\\n                line-color=\\\"self.pickettLineColor(pickett)\\\">\\n            </line-formula-layer>\\n            <segment-layer min-val='self.getLeft()' max-val=\\\"self.getRight()\\\" min-draw='self.getLeft()'\\n                max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" min-draw-y=\\\"self.getBottom()\\\"\\n                max-draw-y=\\\"self.getTop()\\\" ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\"\\n                ng-if='self.validPlotRegion() && self.conditionForPickettPlot() && self.allPickettLines && !self.notShowPickett'\\n                ng-repeat=\\\"(pickettSetIdx, pickettSet) in self.pickettSets \\\"\\n                show-equation='false'\\n                points=\\\"self.pickettAdjusterArray[pickettSetIdx]\\\"\\n                ng-show='pickettSet._used' mode=\\\"pickettSet._used ? 'edit' : ''\\\"\\n                on-eqn-changed=\\\"self.getUpdatePickettParamsFn(pickettSetIdx)\\\"\\n                get-point-label=\\\"self.noLabel\\\">\\n            </segment-layer>\\n            <polygon-layer ng-show=\\\"!polygon._notShow\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" ng-repeat=\\\"polygon in self.polygons \\\"\\n                points=\\\"polygon.points\\\" mode=\\\"polygon.mode\\\" ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\"\\n                fill-style=\\\"self.polygonFillStyle(polygon)\\\" stroke-style=\\\"self.polygonStrokeStyle(polygon)\\\"\\n                show-coordinates=\\\"self.showTooltip\\\" stroke-width=\\\"self.polygonStrokeWidth(polygon)\\\">\\n            </polygon-layer>\\n            <overlay-line-layer ng-if=\\\"self.overlayLineSpec && self.overlayLineSpec.lines\\\" min-val='self.getLeft()' max-val=\\\"self.getRight()\\\"\\n                min-draw='self.getLeft()' max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\"\\n                min-draw-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" max-draw-y=\\\"self.getTop()\\\"\\n                ortho-loga=\\\"self.getLogaY()\\\" loga=\\\"self.getLogaX()\\\" overlay-line-spec=\\\"self.overlayLineSpec\\\">\\n            </overlay-line-layer>\\n            <polygon-layer ng-if=\\\"self.paramGroups && self.paramGroups.length\\\" ng-show=\\\"!paramGroup._notShow\\\"\\n                ng-repeat=\\\"paramGroup in self.paramGroups \\\"\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\"\\n                points=\\\"self.paramGroupPointsFn(paramGroup, $index)\\\" get-x-fn=\\\"self.getParamGroupX\\\" get-y-fn=\\\"self.getParamGroupY\\\"\\n                set-x-fn=\\\"self.setParamGroupX\\\" set-y-fn=\\\"self.setParamGroupY\\\"\\n                get-point-label=\\\"self.getParamGroupPointLabel\\\"\\n                params=\\\"[$index]\\\"\\n                mode=\\\"!paramGroup._notShow\\\"\\n                show-vertex=\\\"true\\\" fill-style=\\\"'transparent'\\\">\\n            </polygon-layer>\\n            <tooltip-layer ng-if=\\\"self.showTooltip\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" loga=\\\"self.getLogaX()\\\" ortho-loga=\\\"self.getLogaY()\\\"\\n                frequency-x-fn=\\\"self.getFrequencyX\\\" frequency-y-fn=\\\"self.getFrequencyY\\\" test-binding=\\\"self.getFrequencyX\\\">\\n            </tooltip-layer>\\n        </layer-collection>\\n        <p style=\\\"position: absolute; font-weight: bold; left: 50%; transform: translateX(-50%); bottom: 0\\\">\\n            {{self.getConfigXLabel()}} ({{ self.config.xUnit || self.defaultConfig.xUnit }})</p>\\n        <p style=\\\"position: absolute; top: 23px; right: 45%;text-transform: uppercase; font-weight: bold; transform: translateY(-50%);\\\">\\n            {{self.getConfigTitle()}}</p>\\n        <p style=\\\"position: absolute;left: 18px; top: 50%;font-weight: bold;transform: translate(-50%, -50%) rotate(-90deg);\\\">\\n            {{self.getConfigYLabel()}} ({{ self.config.yUnit || self.defaultConfig.yUnit }})</p>\\n    </div>\\n\\n    <div class=\\\"axis-info\\\" ng-if=\\\"(self.getSelectionValue('Z1').isUsed && self.zColors) || (self.getSelectionValue('Z2').isUsed && self.zSizes) || (self.getSelectionValue('Z3').isUsed && self.zSymbols)\\\">\\n        <div class=\\\"axis-Z\\\" ng-if=\\\"self.getSelectionValue('Z1').isUsed && self.zColors\\\">\\n            <div class=\\\"axis axis-type label\\\">\\n                <span class=\\\"ellipsis-text\\\">\\n                        {{ self.getConfigZ1Label() }}\\n                </span>\\n            </div>\\n            <div style=\\\"display: flex; flex: 1;\\\">\\n                <div class=\\\"axis axis-min label\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ1Min() }}\\n                    </span>\\n                </div>\\n                <div style=\\\"display: flex; flex: 1;position: relative;\\\">\\n                    <div style=\\\"display: flex; flex: 1; z-index: 1; \\\">\\n                        <div class=\\\"axis axis-line\\\" ng-repeat=\\\"segColor in self.zColors \\\"\\n                            ng-style=\\\"{'background-color':segColor}\\\">\\n                            <span></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"axis axis-max label\\\" style=\\\"margin-right: 0;\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ1Max() }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"axis-Z\\\" ng-if=\\\"self.getSelectionValue('Z2').isUsed && self.zSizes\\\">\\n            <div class=\\\"axis axis-type label\\\">\\n                <span class=\\\"ellipsis-text\\\">\\n                        {{ self.getConfigZ2Label() }}\\n                </span>\\n            </div>\\n            <div style=\\\"display: flex; flex: 1;\\\">\\n                <div class=\\\"axis axis-min label\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ2Min() }}\\n                    </span>\\n                </div>\\n                <div style=\\\"display: flex; flex: 1;position: relative;\\\">\\n                    <div style=\\\"display: flex; flex: 1; z-index: 1; \\\">\\n                        <div class=\\\"axis axis-line\\\" ng-repeat=\\\"segSize in self.zSizes \\\">\\n                            <span>{{segSize}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"axis axis-max label\\\" style=\\\"margin-right: 0;\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ2Max() }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"axis-Z\\\" style=\\\"margin-bottom: 0;\\\" ng-if=\\\"self.getSelectionValue('Z3').isUsed && self.zSymbols\\\">\\n            <div class=\\\"axis axis-type label\\\">\\n                <span class=\\\"ellipsis-text\\\">\\n                        {{ self.getConfigZ3Label() }}\\n                </span>\\n            </div>\\n            <div style=\\\"display: flex; flex: 1;\\\">\\n                <div class=\\\"axis axis-min label\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ3Min() }}\\n                    </span>\\n                </div>\\n                <div style=\\\"display: flex; flex: 1;position: relative;\\\">\\n                    <div style=\\\"display: flex; flex: 1; z-index: 1; \\\">\\n                        <div class=\\\"axis axis-line\\\" ng-repeat=\\\"segSymbol in self.zSymbols \\\">\\n                            <span>{{segSymbol}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"axis axis-max label\\\" style=\\\"margin-right: 0;\\\">\\n                    <span class=\\\"ellipsis-text\\\">\\n                            {{ self.getZ3Max() }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <div class=\\\"statistic-table\\\" resizable r-directions=\\\"['top']\\\" r-flex=\\\"true\\\">\\n        <div style=\\\"overflow-x: auto; position: absolute; top: 0; right: 0; left: 0; bottom: 0;\\\">\\n            <wi-table-view ng-if=\\\"self.layers.length\\\" row-count=\\\"self.getZoneNames().length\\\"\\n                col-count=\\\"self.getHeaders().length\\\" col-headers=\\\"self.getHeaders()\\\"\\n                get-row-icons=\\\"self.getStatsRowIcons\\\" get-row-icon-style=\\\"self.getStatsIconStyle\\\"\\n                row-headers=\\\"self.getZoneNames()\\\" accessor=\\\"self.statsValue\\\" valid-row=\\\"self.isLayerUsed\\\"\\n                item-list=\\\"self.layers\\\">\\n            </wi-table-view>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Overlay Line</div>\\n</div>\\n<div style=\\\"margin: 15px;overflow: hidden;border: 1px solid #ddd;border-radius: 2px; flex: 1;\\\" class=\\\"disable-node-caret\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.listOverlayLine\\\" \\n        get-label=\\\"self.getOvlLabel\\\" get-icon=\\\"self.getOvlIcon\\\"\\n        get-children=\\\"self.getOvlChildren\\\" keep-children='true' uncollapsible='true'\\n        run-match=\\\"self.runOvlMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n        click-fn='self.clickOvlFunction'\\n        vlist-height=\\\"500\\\">\\n    </wi-tree-view-virtual>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Parameters</div>\\n</div>\\n<div style=\\\"display: flex; padding: 15px 15px 10px 15px;\\\">\\n    <span ng-click=\\\"self.hideSelectedParamGroup()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0;\\\">Hide</span>\\n    <span ng-click=\\\"self.showSelectedParamGroup()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Show</span>\\n    <span ng-click=\\\"self.hideAllParamGroup()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Hide All</span>\\n    <span ng-click=\\\"self.showAllParamGroup()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Show All</span>\\n</div>\\n<div ng-show=\\\"self.paramGroups\\\"\\n    style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px;flex: 1;overflow: auto; \\\" class=\\\"disable-node-caret\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.paramGroups\\\" get-label=\\\"self.getParamGroupLabel\\\"\\n        filter=\\\"self.paramGroupFilter\\\" get-icon=\\\"self.getParamGroupIcon\\\" get-children=\\\"self.noChildren\\\"\\n        run-match=\\\"self.runParamGroupMatch\\\" hide-unmatched=\\\"true\\\"\\n        hide-search='false' click-fn='self.click2ToggleParamGroup'>\\n    </wi-tree-view-virtual>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>\\n        Picket Plot\\n    </div>\\n</div>\\n<div style=\\\"padding-bottom:0;\\\" class=\\\"label-option-sidebar\\\">\\n    <div>\\n        <div class=\\\"switch-label\\\">\\n           Show Pickett\\n            <label class=\\\"switch\\\">\\n                      <input type=\\\"checkbox\\\" checked>\\n                      <span class=\\\"slider round\\\" ng-click=\\\"self.notShowPickett = !self.notShowPickett\\\"></span>\\n            </label>\\n        </div>\\n        <div\\n            style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-bottom: 6px; margin-top: 18px;\\\">\\n        </div>\\n    </div>\\n</div>\\n<div style=\\\"display: flex; flex-direction: column; height: 100%;\\\">\\n        <div style=\\\"flex: 1; overflow: auto;\\\">\\n            <div style=\\\"margin: 15px;margin-bottom:0;\\\" class='bottom-add' ng-click=\\\"self.addPickettSet()\\\">Add</div>\\n            <div style=\\\"overflow: overlay; display:flex; flex-direction: column;\\\">\\n                <div style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px; cursor: pointer;\\\"\\n                    ng-repeat='(pickettSetIdx, pickettSet) in self.pickettSets'>\\n                    <div style=\\\"display: flex; flex-direction: row;padding: 10px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\n                        <div style=\\\" display: flex;align-items: center;\\\">\\n                            <i class=\\\"header-icon\\\"\\n                                ng-class=\\\"{'fa fa-caret-down': pickettSet._notHidden, 'fa fa-caret-right': !pickettSet._notHidden}\\\"\\n                                ng-click=\\\"self.toggleShowPickettSet(pickettSetIdx)\\\"></i>\\n                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;margin-top:5px;\\\"\\n                                item-label=\\\"'Name: '\\\" item-value=\\\"self.pickettSetName\\\" set-value=\\\"self.changePickettSetName\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                content-style=\\\"{flex:1,float:'none','text-align':'left'}\\\" params=\\\"pickettSetIdx\\\">\\n                            </editable>\\n                        </div>\\n                        <div>\\n                            <span\\n                                ng-class=\\\"{'red-color fa fa-eye-slash': !pickettSet._used, 'blue-color fa fa-eye': pickettSet._used }\\\"\\n                                ng-click=\\\"self.turnOnPickettSet(pickettSetIdx)\\\"\\n                                style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                            </span>\\n                            <span class=\\\"fa fa-times-circle\\\" ng-click=\\\"self.removePickettSet(pickettSetIdx)\\\"\\n                                style=\\\"color: rgb(163, 163, 163);cursor: pointer;margin-right: 5px;\\\">\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"label-option-sidebar\\\" ng-show=\\\"pickettSet._notHidden\\\">\\n                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                item-label=\\\"'Rw'\\\" item-value=\\\"self.getRwParam\\\" set-value=\\\"self.setRwParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\" params=\\\"pickettSetIdx\\\">\\n                            </editable>\\n                        </div>\\n                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                item-label=\\\"'m'\\\" item-value=\\\"self.getMParam\\\"\\n                                set-value=\\\"self.setMParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\" params=\\\"pickettSetIdx\\\">\\n                            </editable>\\n                        </div>\\n                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                item-label=\\\"'n'\\\" item-value=\\\"self.getNParam\\\"\\n                                set-value=\\\"self.setNParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\" params=\\\"pickettSetIdx\\\">\\n                            </editable>\\n                        </div>\\n                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                item-label=\\\"'a'\\\" item-value=\\\"self.getAParam\\\"\\n                                set-value=\\\"self.setAParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\" params=\\\"pickettSetIdx\\\">\\n                            </editable>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div resizable r-directions=\\\"['top']\\\" r-flex=\\\"true\\\" style=\\\"flex-basis: 40%;\\\">\\n            <div style=\\\"margin: 15px;margin-bottom:0;\\\" class='bottom-add' ng-click=\\\"self.addSwParam()\\\">Add</div>\\n            <div style=\\\"overflow: overlay; display:flex; flex-direction: column;\\\">\\n                <div style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px; cursor: pointer;\\\">\\n                    <div style=\\\"display: flex; flex-direction: row;padding: 10px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\n                        <div style=\\\" display: flex;align-items: center;\\\">\\n                            <i class=\\\"header-icon\\\"\\n                                ng-class=\\\"{'fa fa-caret-down': self._showSwParams, 'fa fa-caret-right': !self._showSwParams}\\\"\\n                                ng-click=\\\"self._showSwParams = !self._showSwParams\\\"></i>\\n                            <div ng-bind=\\\"'Sw Param List'\\\" style=\\\"font-weight: bold; max-width: 120px; white-space: nowrap;text-overflow: ellipsis; overflow: hidden;\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"label-option-sidebar\\\" ng-show=\\\"self._showSwParams\\\">\\n                        <div style=\\\"overflow: overlay;\\\">\\n                            <div class=\\\"list-formular\\\" ng-repeat=\\\"(pickettIdx, pickett) in self.swParamList\\\">\\n                                <div class=\\\"selection-sidebar\\\"\\n                                    style=\\\"padding: 9px 10px 5px 10px; flex: 4; margin-right: 15px; border: none;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Sw'\\\" item-value=\\\"self.getSwParam\\\" params=\\\"pickettIdx\\\"\\n                                        set-value=\\\"self.setSwParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div class=\\\"fa fa-times delete-button\\\" ng-click=\\\"self.removeSwParam(pickettIdx)\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n</div>\\n<!--<div class=\\\"label-option-sidebar\\\">-->\\n    <!--<div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">-->\\n        <!--<editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"-->\\n            <!--item-label=\\\"'Rw'\\\" item-value=\\\"self.getRwParam\\\" set-value=\\\"self.setRwParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"-->\\n            <!--content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">-->\\n        <!--</editable>-->\\n    <!--</div>-->\\n    <!--<div style=\\\"margin-bottom: 15px; \\\"></div>-->\\n    <!--<div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">-->\\n        <!--<editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"-->\\n            <!--item-label=\\\"'m'\\\" item-value=\\\"self.getMParam\\\"-->\\n            <!--set-value=\\\"self.setMParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"-->\\n            <!--content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">-->\\n        <!--</editable>-->\\n    <!--</div>-->\\n    <!--<div style=\\\"margin-bottom: 15px; \\\"></div>-->\\n    <!--<div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">-->\\n        <!--<editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"-->\\n            <!--item-label=\\\"'n'\\\" item-value=\\\"self.getNParam\\\"-->\\n            <!--set-value=\\\"self.setNParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"-->\\n            <!--content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">-->\\n        <!--</editable>-->\\n    <!--</div>-->\\n    <!--<div style=\\\"margin-bottom: 15px; \\\"></div>-->\\n    <!--<div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">-->\\n        <!--<editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"-->\\n            <!--item-label=\\\"'a'\\\" item-value=\\\"self.getAParam\\\"-->\\n            <!--set-value=\\\"self.setNParam\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"-->\\n            <!--content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">-->\\n        <!--</editable>-->\\n    <!--</div>-->\\n    <!--<div style=\\\"margin-bottom: 15px; \\\"></div>-->\\n<!--</div>-->\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Print Setting</div>\\n</div>\\n<print-settings style=\\\"overflow: auto;\\\" plot-ctrl=\\\"self\\\"></print-settings>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>\\n       Probability Map \\n    </div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 10px 15px 0;\\\">\\n    <div style=\\\"display: flex;\\\">\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Rows'\\\" item-value=\\\"self.getRowsNumPropMap\\\" set-value=\\\"self.setRowsNumPropMap\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n        <div style=\\\"margin-right: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Columns'\\\" item-value=\\\"self.getColsNumPropMap\\\"\\n                set-value=\\\"self.setColsNumPropMap\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n    </div>\\n</div>\\n<div style=\\\"display: flex; padding: 10px 15px 10px 15px;\\\">\\n    <span ng-click=\\\"self.hideSelectedPropMap()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0;\\\">Deactivate</span>\\n    <span ng-click=\\\"self.showSelectedPropMap()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Activate</span>\\n    <span ng-click=\\\"self.hideAllPropMap()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Deactivate All</span>\\n    <span ng-click=\\\"self.showAllPropMap()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Activate All</span>\\n</div>\\n<div ng-show=\\\"self.layers\\\"\\n    style=\\\"border: 1px solid #e4e4e4;margin:0 15px;border-radius: 2px;flex: 1;overflow: hidden; \\\" class=\\\"disable-node-caret\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\n        filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getPropMapTreeIcon\\\"\\n        get-icons=\\\"self.getPropMapTreeIcons\\\" icon-style=\\\"self.getPropMapTreeIconStyle\\\" get-children=\\\"self.noChildren\\\" keep-children='true'\\n        run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n        click-fn='self.click2TogglePropMap'>\\n    </wi-tree-view-virtual>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>\\n        Regression Line\\n    </div>\\n</div>\\n<div style=\\\"padding: 15px 15px 10px;\\\" class=\\\"label-option-sidebar\\\">\\n    <div class=\\\"selection-sidebar\\\">\\n        <span>Type</span>\\n        <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.regressionTypeList'\\n            current-select=\\\"self.regressionType\\\"\\n            on-item-changed=\\\"self.onRegressionTypeChange\\\">\\n        </wi-dropdown-list>\\n    </div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\"\\n    style=\\\"padding: 0 15px 10px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n    <div ng-if=\\\"self.regressionType == 'Polynomial'\\\">\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Order'\\\" item-value=\\\"self.getPolynomialOrder\\\" set-value=\\\"self.setPolynomialOrder\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n    </div>\\n    <div style=\\\"display: flex;\\\" ng-if=\\\"self.regressionType != 'Polynomial'\\\">\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'FitX'\\\" item-value=\\\"self.getFitX\\\"\\n                set-value=\\\"self.setFitX\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n        <div style=\\\"margin-right: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'FitY'\\\" item-value=\\\"self.getFitY\\\"\\n                set-value=\\\"self.setFitY\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n    </div>\\n</div>\\n<div style=\\\"display: flex; padding: 0 15px 10px 15px;\\\">\\n    <span ng-click=\\\"self.hideSelectedRegression()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0;\\\">Deactivate</span>\\n    <span ng-click=\\\"self.showSelectedRegression()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Activate</span>\\n    <span ng-click=\\\"self.hideAllRegression()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Deactivate All</span>\\n    <span ng-click=\\\"self.showAllRegression()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 10px;\\\">Activate All</span>\\n</div>\\n<div ng-if=\\\"self.regLine && self.regLine.lineStyle\\\" style=\\\"display: flex; padding: 0 15px 10px 15px;\\\">\\n    <line-style style=\\\"width: 100%; padding: 0 15px;\\\" bind-line-style=\\\"self.regLine.lineStyle\\\"></line-style>\\n</div>\\n<div ng-show=\\\"self.layers\\\"\\n    style=\\\"border: 1px solid #e4e4e4;margin:0 15px;border-radius: 2px;flex: 1;overflow: hidden; \\\" class=\\\"disable-node-caret\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\n        filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getRegIcon\\\"\\n        get-icons=\\\"self.getRegIcons\\\" icon-style=\\\"self.getRegIconStyle\\\" get-children=\\\"self.noChildren\\\" keep-children='true'\\n        run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n        click-fn='self.click2ToggleRegression'>\\n    </wi-tree-view-virtual>\\n</div>\\n<div class=\\\"label-option-sidebar\\\"\\n    style=\\\"padding: 15px; display: flex; flex-direction: column; overflow: auto; flex: 1;\\\">\\n    <div style=\\\"display: flex;margin-bottom: 0;align-items: center;\\\">Polygon\\n        <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin: 9px;\\\"></div>\\n        <div class=\\\"ti ti-plus add-polygon\\\" ng-click=\\\"self.addPolygon()\\\"></div>\\n    </div>\\n\\n    <div style=\\\"overflow: auto; padding-top: 15px;\\\">\\n        <div class=\\\"list-polygon\\\" ng-repeat=\\\"polygon in self.polygons\\\">\\n            <div style=\\\"margin: 0 10px; border: none;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"\\\" item-value=\\\"polygon.label\\\" params=\\\"$index\\\"\\n                    set-value=\\\"self.setPolygonLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"self.polygonContentStyle(polygon)\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"display: flex;\\\">\\n                <div ng-class=\\\"{'red-color': !polygon.exclude, 'blue-color ': polygon.exclude }\\\"\\n                    class=\\\"button-list-polygon ti ti-control-play\\\"\\n                    title=\\\"Include\\\"\\n                    ng-click=\\\"polygon.exclude = !polygon.exclude\\\" >\\n                </div>\\n                <div ng-class=\\\"{'red-color': polygon._notUsed, 'blue-color ': !polygon._notUsed }\\\"\\n                    ng-click=\\\"polygon._notUsed = !polygon._notUsed\\\"\\n                    title=\\\"Use\\\"\\n                    class=\\\"button-list-polygon ti ti-check\\\">\\n                </div>\\n                <div ng-class=\\\"{'red-color ': polygon._notShow, 'blue-color ': !polygon._notShow }\\\"\\n                    class=\\\"button-list-polygon ti ti-eye\\\"\\n                    title=\\\"Show/hide\\\"\\n                    ng-click=\\\"polygon._notShow = !polygon._notShow\\\">\\n                </div>\\n                <div ng-class=\\\"{'red-color': !polygon.mode, 'blue-color': polygon.mode == 'edit' }\\\"\\n                    class=\\\"button-list-polygon ti ti-pencil\\\"\\n                    title=\\\"Edit\\\"\\n                    ng-click=\\\"self.toggleEditPolygon(polygon)\\\">\\n                </div>\\n                <div\\n                    class=\\\"button-list-polygon ti ti-close\\\"\\n                    title=\\\"Close\\\"\\n                    ng-click=\\\"self.removePolygon($index)\\\">\\n                </div>\\n            </div>\\n            <!-- <div style=\\\"cursor: pointer; flex: 1; border: none;\\\">\\n                <span ng-class=\\\"{'active' : true}\\\" style=\\\"margin-right: 8px;\\\"\\n                    ng-click=\\\"polygon.exclude = !polygon.exclude\\\" class=\\\"button-with-label\\\">\\n                    {{ polygon.exclude ? 'Exclude' : 'Include' }}\\n                </span>\\n                <span\\n                    ng-class=\\\"{'red-color fa fa-check': polygon._notUsed, 'blue-color fa fa-check': !polygon._notUsed }\\\"\\n                    ng-click=\\\"polygon._notUsed = !polygon._notUsed\\\"\\n                    style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                </span>\\n                <span\\n                    ng-class=\\\"{'red-color fa fa-eye-slash': polygon._notShow, 'blue-color fa fa-eye': !polygon._notShow }\\\"\\n                    ng-click=\\\"polygon._notShow = !polygon._notShow\\\"\\n                    style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                </span>\\n                <span\\n                    ng-class=\\\"{'red-color fa fa-edit': !polygon.mode, 'blue-color fa fa-edit': polygon.mode == 'edit' }\\\"\\n                    ng-click=\\\"self.toggleEditPolygon(polygon)\\\"\\n                    style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                </span>\\n            </div>\\n            <div class=\\\"fa fa-times delete-button\\\" ng-click=\\\"self.removePolygon($index)\\\"></div> -->\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<!-- <side-bar my-default-width=\\\"420\\\" orientation=\\\"w\\\" collapsed=\\\"false\\\" ng-if=\\\"self.familyTable && self.pals\\\"> -->\\n<side-bar my-default-width=\\\"420\\\" orientation=\\\"w\\\" collapsed=\\\"self.sidebarCollapsed || false\\\">\\n    <div style=\\\"display: flex; flex-direction: column; height: 100%;flex: 1;\\\">\\n        <div style=\\\"display: flex; flex-direction: column; width: 100%; height: 100%;\\\">\\n            <!-- -----WELLS----- -->\\n            <div ng-show=\\\"isSet(1)\\\" style=\\\"overflow: auto;flex: 1;display:flex;flex-direction:column;\\\">\\n                \" + require('./wells.html') + \"\\n            </div>\\n            <!-- -----ZONE----- -->\\n            <div ng-show=\\\"isSet(2)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./zone.html') + \"\\n            </div>\\n            <!-- -----CONFIG----- -->\\n            <div ng-show=\\\"isSet(3)\\\" style=\\\"overflow: hidden; flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./config.html') + \"\\n            </div>\\n            <!-- -----FORMULA----- -->\\n            <div ng-show=\\\"isSet(4)\\\"\\n                style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./udl.html') + \"\\n            </div>\\n            <!-- -----REGRESSION----- -->\\n            <div ng-show=\\\"isSet(5)\\\" ng-if=\\\"self.getColorPalette();\\\"\\n                style=\\\"overflow: auto;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./regression.html') + \"\\n            </div>\\n            <!-- -----LAYERS----- -->\\n            <div ng-show=\\\"isSet(6)\\\"\\n                style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./layers.html') + \"\\n            </div>\\n            <!-- -----PRINT SETTINGS----- -->\\n            <div ng-show=\\\"isSet(7)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./print-settings.html') + \"\\n            </div>\\n            <!-- -----Overlay Line----- -->\\n            <div ng-show=\\\"isSet(8)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./overlay-line.html') + \"\\n            </div>\\n            <!-- -----Pickett Line----- -->\\n            <div ng-show=\\\"isSet(9)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./pickett-line.html') + \"\\n            </div>\\n            <!-- ---- PARAMETERS ----- -->\\n            <div ng-if=\\\"self.paramGroups && self.paramGroups.length\\\" ng-show=\\\"isSet(10)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./parameters.html') + \"\\n            </div>\\n            <!-- -----Probability Map----- -->\\n            <div ng-show=\\\"isSet(10)\\\"\\n                style=\\\"overflow: auto;flex: 1; display: flex; flex-direction: column;\\\">\\n                \" + require('./probability-map.html') + \"\\n            </div>\\n            <div style=\\\"display: flex;\\\" >\\n                <span class=\\\"button-update\\\" ng-class=\\\"{'disabled-click': !self.isSettingChange}\\\"\\n                    ng-click=\\\"self.genLayers()\\\">\\n                    Update\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"label-list-view\\\" style=\\\"\\n            display: flex;\\n            border-left: 1px solid #e4e4e4;\\n            flex-direction: column;\\n            justify-content: start;\\n            padding: 0px;\\n            right: 0;\\n            min-width: 40px;\\n            background: #fff;\\n            overflow-y: overlay;\\n            overflow-x: hidden;\\n            position: sticky;\\n            box-shadow: 0 10px 10px #00000017;\\\">\\n        <div style=\\\"\\n            transform-origin: left;\\n            transform: translate(20px, -50%) rotate(90deg);\\n            display: flex;\\n            position: absolute;\\\">\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(1)}\\\" ng-click=\\\"setTab(1)\\\">\\n                <div >\\n                    Wells\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(3)}\\\" ng-click=\\\"setTab(3)\\\">\\n                <div>\\n                    Configuration\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(2)}\\\" ng-click=\\\"setTab(2)\\\" ng-show=\\\"!self.paramGroups || !self.paramGroups.length\\\">\\n                <div >\\n                    Zone/Interval\\n                </div>\\n            </div>\\n            <!--<div ng-if=\\\"self.paramGroups && self.paramGroups.length\\\" class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(10)}\\\" ng-click=\\\"setTab(10)\\\">-->\\n                <!--<div>Parameters</div>-->\\n            <!--</div>-->\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(4)}\\\" ng-click=\\\"setTab(4)\\\">\\n                <div>Formula</div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(5)}\\\" ng-click=\\\"setTab(5)\\\">\\n                <div>Regression Line</div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(10)}\\\" ng-click=\\\"setTab(10)\\\">\\n                <div>Probability Map</div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(6)}\\\" ng-click=\\\"setTab(6)\\\">\\n                <div >\\n                    Layers\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(8)}\\\" ng-click=\\\"setTab(8)\\\">\\n                <div >\\n                    Overlay Line\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(9)}\\\" ng-click=\\\"setTab(9)\\\" ng-if='self.showPickettTabCondition()'>\\n                <div >\\n                    Pickett Plot\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(7)}\\\" ng-click=\\\"setTab(7)\\\">\\n                <div >\\n                    Print Setting\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n </side-bar>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>\\n        Formular: {{self.udls.name}}\\n    </div>\\n</div>\\n<div style=\\\"display: flex; padding: 15px;\\\">\\n    <span ng-click=\\\"self.addUDL()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0px;\\\">Add</span>\\n    <span ng-click=\\\"self.saveUDL()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Save</span>\\n    <span ng-click=\\\"self.saveAsUDL()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Save As</span>\\n    <span ng-click=\\\"self.loadUDL()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Load</span>\\n</div>\\n<!-- <div style=\\\"margin: 15px;\\\" class='bottom-add' ng-click=\\\"self.addUDL()\\\">Add</div>\\n<div style=\\\"margin: 15px;\\\" class='bottom-add' ng-click=\\\"self.saveUDL()\\\">Save</div>\\n<div style=\\\"margin: 15px;\\\" class='bottom-add' ng-click=\\\"self.saveAsUDL()\\\">Save As</div>\\n<div style=\\\"margin: 15px;\\\" class='bottom-add' ng-click=\\\"self.loadUDL()\\\">Load</div> -->\\n<div class=\\\"label-option-sidebar\\\" style=\\\"overflow: auto;\\\">\\n    <div style=\\\"overflow: overlay;\\\">\\n        <div class=\\\"list-formular\\\" ng-repeat=\\\"udl in self.udls\\\">\\n            <div class=\\\"selection-sidebar\\\"\\n                style=\\\"padding: 9px 10px 5px 10px; flex: 4; margin-right: 15px; border: none;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Y = '\\\" item-value=\\\"self.getFnUDL\\\" params=\\\"$index\\\"\\n                    set-value=\\\"self.setFnUDL\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'left'}\\\">\\n                </editable>\\n            </div>\\n            <div class=\\\"selection-sidebar\\\"\\n                style=\\\"padding: 9px 10px 5px 10px; cursor: pointer; flex: 1; border: none;\\\">\\n                <span\\n                    ng-class=\\\"{'red-color ti ti-layout-cta-left': !udl.displayEquation, 'blue-color ti ti-layout-cta-left': udl.displayEquation }\\\"\\n                    ng-click=\\\"udl.displayEquation = !udl.displayEquation\\\"\\n                    style=\\\"cursor: pointer; margin-right: 15px; margin-top: -5px;\\\">\\n                </span>\\n                <span\\n                    ng-class=\\\"{'red-color fa fa-eye-slash': udl._notUsed, 'blue-color fa fa-eye': !udl._notUsed }\\\"\\n                    ng-click=\\\"udl._notUsed = !udl._notUsed\\\"\\n                    style=\\\"cursor: pointer; margin-right: 15px; margin-top: -5px;\\\">\\n                </span>\\n                <line-style style=\\\"min-width: 30px;\\\" bind-line-style=\\\"udl.lineStyle\\\"></line-style>\\n            </div>\\n            <div class=\\\"fa fa-times delete-button\\\" ng-click=\\\"self.removeUDL($index)\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Wells</div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\"\\n    style=\\\" margin-top: 5px;padding-bottom: 5px; display: flex; justify-content: space-between;\\\">\\n    <span>Input</span>\\n    <div>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'family-group'}\\\"\\n            ng-click=\\\"self.selectionType='family-group'\\\" class=\\\"button-with-label\\\"\\n            style=\\\"margin-right: 8px;\\\">Family Group</span>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'family'}\\\"\\n            ng-click=\\\"self.selectionType='family'\\\" class=\\\"button-with-label\\\"\\n            style=\\\"margin-right: 8px;\\\">Family</span>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'curve'}\\\"\\n            ng-click=\\\"self.selectionType='curve'\\\" class=\\\"button-with-label\\\">Curve</span>\\n    </div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\"\\n    style=\\\"display: flex; justify-content: space-between; padding-top: 20px;\\\">\\n    <span>Scale Axis</span>\\n    <div>\\n        <span ng-class=\\\"{'active' : self.getSelectionValue('Z1').isUsed}\\\" style=\\\"margin-right: 8px;\\\"\\n            ng-click=\\\"self.getSelectionValue('Z1').isUsed = !self.getSelectionValue('Z1').isUsed\\\" class=\\\"button-with-label\\\">\\n            Color Z1\\n        </span>\\n        <span ng-class=\\\"{'active' : self.getSelectionValue('Z2').isUsed}\\\" style=\\\"margin-right: 8px;\\\"\\n            ng-click=\\\"self.getSelectionValue('Z2').isUsed = !self.getSelectionValue('Z2').isUsed\\\" class=\\\"button-with-label\\\">\\n            Point Size Z2\\n        </span>\\n        <span ng-class=\\\"{'active' : self.getSelectionValue('Z3').isUsed}\\\" style=\\\"margin-right: 8px;\\\"\\n            ng-click=\\\"self.getSelectionValue('Z3').isUsed = !self.getSelectionValue('Z3').isUsed\\\" class=\\\"button-with-label\\\">\\n            Label Z3\\n        </span>\\n    </div>\\n</div>\\n<div style=\\\"padding: 8px 15px;\\\" class=\\\"label-option-sidebar\\\"\\n    ng-repeat=\\\"selectionValue in self.selectionValueList\\\"\\n    ng-show=\\\"selectionValue.isUsed\\\">\\n    <div class=\\\"selection-sidebar\\\">\\n        <span>{{selectionValue.label}}</span>\\n        <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.selectionList'\\n            current-select=\\\"selectionValue.value\\\"\\n            on-item-changed=\\\"selectionValue.onChange\\\">\\n        </wi-dropdown-list>\\n    </div>\\n</div>\\n<div style=\\\"overflow: overlay; display:flex; flex-direction: column;\\\">\\n    <wi-sortable item-list=\\\"self.treeConfig\\\" related-list=\\\"[self.wellSpec]\\\" update-fn=\\\"self.sortableUpdate\\\">\\n        <div class=\\\"sort-item\\\" style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px; cursor: pointer;\\\"\\n            ng-repeat='well in self.treeConfig'>\\n            <div style=\\\"display: flex; flex-direction: row;padding: 10px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\n                    <div style=\\\" display: flex;align-items: center;\\\">\\n                        <i class=\\\"header-icon\\\"\\n                            ng-class=\\\"{'fa fa-caret-down': well._notHidden, 'fa fa-caret-right': !well._notHidden}\\\"\\n                            ng-click=\\\"well._notHidden = !well._notHidden\\\"></i>\\n                        <div ng-bind=\\\"well.name\\\" style=\\\"font-weight: bold; max-width: 120px; white-space: nowrap;text-overflow: ellipsis; overflow: hidden;\\\"></div>\\n                    </div>\\n\\n                    <div>\\n                        <span\\n                            ng-class=\\\"{'red-color fa fa-eye-slash': well._notUsed, 'blue-color fa fa-eye': !well._notUsed }\\\"\\n                            ng-click=\\\"self.toggleWell(well)\\\"\\n                            style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                        </span>\\n                        <span class=\\\"fa fa-filter\\\"\\n                            ng-class=\\\"{'blue-color': self.hasDiscriminator(well)}\\\"\\n                            ng-click=\\\"self.discriminatorDialog(well)\\\"\\n                            style=\\\"cursor: pointer; margin-right: 17px;\\\">\\n                        </span>\\n                        <span class=\\\"fa fa-times-circle\\\" ng-click=\\\"self.removeWell(well)\\\"\\n                            style=\\\"color: rgb(163, 163, 163);cursor: pointer;margin-right: 5px;\\\">\\n                        </span>\\n                    </div>\\n            </div>\\n            <div style=\\\"display: flex; flex-direction: row ; flex-wrap: wrap; max-width: 420px; background: #f4f4f4; align-items: center;justify-content: flex-start;text-align: center;\\\">\\n                <div class=\\\"axis-bar\\\" ng-class='{\\\"selected\\\": well.isSettingAxis == selectionValue.name}'\\n                    ng-click=\\\"well.isSettingAxis = selectionValue.name\\\"\\n                    ng-repeat=\\\"selectionValue in self.selectionValueList\\\" ng-show=\\\"selectionValue.isUsed\\\">\\n                    <div ng-bind=\\\"selectionValue.name\\\" style=\\\"font-weight: bold;\\\"></div>\\n                    <div style=\\\"margin: 0 10px; max-width: 70px; flex: 1;white-space: nowrap; text-overflow: ellipsis; overflow: hidden;\\\"\\n                        ng-bind=\\\"self.getWellSpec(well)[self.getAxisKey(selectionValue.name)].datasetName\\\"></div>\\n                    <div ng-bind=\\\"self.getCurve(well, self.getAxisKey(selectionValue.name)).name\\\"></div>\\n                </div>\\n            </div>\\n            <wi-tree-view-virtual ng-show=\\\"well._notHidden\\\" tree-root=\\\"well\\\" get-label=\\\"self.getLabel\\\"\\n                filter=\\\"self.getFilterForWell(self.getAxisKey(well.isSettingAxis))\\\" get-icon=\\\"self.getIcon\\\"\\n                get-children=\\\"self.getChildren\\\" keep-children='true' uncollapsible='true'\\n                run-match=\\\"self.runWellMatch\\\" hide-unmatched=\\\"true\\\" hide-search='true'\\n                click-fn='self.clickFunction' collapsed=\\\"false\\\">\\n            </wi-tree-view-virtual>\\n        </div>\\n    </wi-sortable>\\n</div>\\n\";","module.exports = \"<div\\n  class=\\\"label-option-sidebar\\\"\\n  style=\\\"padding: 12px 20px; display: flex; gap: 1em; background: #f4f4f4; border-bottom: 1px solid #dcdcdc\\\"\\n>\\n  <span\\n    ng-class=\\\"{'active' : self.zonationType !== 'interval'}\\\"\\n    ng-click=\\\"self.zonationType='zone'\\\"\\n    class=\\\"button-with-label\\\"\\n  >\\n    Zone\\n  </span>\\n  <span\\n    ng-class=\\\"{'active' : self.zonationType === 'interval'}\\\"\\n    ng-click=\\\"self.zonationType='interval'\\\"\\n    class=\\\"button-with-label\\\"\\n  >\\n    Interval\\n  </span>\\n</div>\\n<div ng-if=\\\"self.zonationType === 'interval'\\\" style=\\\"padding: 16px 16px\\\">\\n  <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1\\\">\\n    <editable\\n      style=\\\"flex: 1; display: flex; flex-direction: row; overflow: hidden\\\"\\n      item-label=\\\"'Top'\\\"\\n      item-value=\\\"self.getIntervalTop\\\"\\n      set-value=\\\"self.setIntervalTop\\\"\\n      enabled=\\\"true\\\"\\n      label-style=\\\"{}\\\"\\n      content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n    ></editable>\\n  </div>\\n  <div style=\\\"margin-bottom: 15px\\\"></div>\\n  <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1\\\">\\n    <editable\\n      style=\\\"flex: 1; display: flex; flex-direction: row; overflow: hidden\\\"\\n      item-label=\\\"'Bottom'\\\"\\n      item-value=\\\"self.getIntervalBottom\\\"\\n      set-value=\\\"self.setIntervalBottom\\\"\\n      enabled=\\\"true\\\"\\n      label-style=\\\"{}\\\"\\n      content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n    ></editable>\\n  </div>\\n</div>\\n<div ng-if=\\\"self.zonationType !== 'interval'\\\">\\n  <div ng-if=\\\"self.zonationType !== 'interval'\\\">\\n    <div class=\\\"label-option-sidebar\\\">\\n      <div class=\\\"selection-sidebar\\\">\\n        <span>Zoneset</span>\\n        <wi-dropdown-list\\n          style=\\\"flex: 1; margin-left: 10px\\\"\\n          items=\\\"self.zonesetList\\\"\\n          current-select=\\\"self.zonesetName\\\"\\n          on-item-changed=\\\"self.onZonesetSelectionChanged\\\"\\n        >\\n        </wi-dropdown-list>\\n      </div>\\n    </div>\\n    <div style=\\\"display: flex; padding: 0 15px 10px 15px\\\">\\n      <span ng-click=\\\"self.hideSelectedZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 0\\\">Deactivate</span>\\n      <span ng-click=\\\"self.showSelectedZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 10px\\\">Activate</span>\\n      <span ng-click=\\\"self.hideAllZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 10px\\\"\\n        >Deactivate All</span\\n      >\\n      <span ng-click=\\\"self.showAllZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 10px\\\">Activate All</span>\\n    </div>\\n    <div\\n      ng-show=\\\"self.zoneTreeUniq\\\"\\n      style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px; border-radius: 2px; flex: 1; overflow: auto\\\"\\n    >\\n      <div style=\\\"border-bottom: 1px solid #eee\\\">\\n        <i class=\\\"fa fa-search\\\" style=\\\"position: relative; left: 0.5em; color: #aaa\\\"></i>\\n        <input\\n          type=\\\"text\\\"\\n          ng-model=\\\"filter\\\"\\n          placeholder=\\\"Search\\\"\\n          style=\\\"border: none; width: calc(100% - 1.5em); padding: 8px\\\"\\n        />\\n      </div>\\n      <div style=\\\"height: calc(100% - 34px)\\\">\\n        <vue-component\\n          root=\\\"WiTree\\\"\\n          props=\\\"{\\n                treeRoot: self.zoneTreeUniq,\\n                getLabel: self.getZoneLabel,\\n                getIcon: self.getZoneIcon,\\n                clickFn: self.click2ToggleZone,\\n                filter: filter,\\n            }\\\"\\n          style=\\\"flex: 1\\\"\\n        ></vue-component>\\n      </div>\\n    </div>\\n    <div ng-hide=\\\"self.zoneTreeUniq\\\" style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px\\\">zonationAll</div>\\n  </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"main\\\">\\n\\n    <div class=\\\"main-body\\\">\\n        \" + require('./fragments/main-area.html') + \"\\n    </div>\\n    <wi-droppable style=\\\"display:flex;\\\" on-drop=\\\"self.onDrop\\\"\\n        container-style=\\\"{}\\\">\\n        <div style=\\\" height: 100%; right: 0; border-left: 1px solid #ccc; box-shadow: 0 0 20px #0000001c;\\\">\\n            \" + require('./fragments/side-bar.html') + \"\\n        </div>\\n    </wi-droppable>\\n</div>\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Assistive Lines</div>\\n</div>\\n<div style=\\\"flex:1;overflow: auto;\\\">\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"height: 100%; padding: 16px; display: flex;justify-content: space-between;flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Gaussian / Log-normal Distribution\\n            <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div style=\\\"margin-bottom: 5px;\\\">\\n            <span ng-class=\\\"{'active' : !self.config.notUsedGaussian}\\\"\\n                ng-click=\\\"self.toggleGaussianLine(false)\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\">Gaussian</span>\\n            <span ng-class=\\\"{'active' : self.config.notUsedGaussian}\\\"\\n                ng-click=\\\"self.toggleGaussianLine(true)\\\" class=\\\"button-with-label\\\">Log-normal Distribution</span>\\n            <span ng-class=\\\"{'active' : !self.config.notShowCumulative}\\\"\\n                ng-click=\\\"self.config.notShowCumulative = !self.config.notShowCumulative\\\" class=\\\"button-with-label\\\">Cumulative</span>\\n        </div>\\n        <div style=\\\"display: flex; padding: 16px 0; font-weight: initial; color: #333;\\\">\\n            <span ng-click=\\\"self.hideSelectedGaussian()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 0;\\\">Deactivate</span>\\n            <span ng-click=\\\"self.showSelectedGaussian()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 15px;\\\">Activate</span>\\n            <span ng-click=\\\"self.hideAllGaussian()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 15px;\\\">Deactivate All</span>\\n            <span ng-click=\\\"self.showAllGaussian()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 15px;\\\">Activate All</span>\\n        </div>\\n        <div ng-show=\\\"self.histogramList\\\"\\n            style=\\\"border: 1px solid #eee; margin-bottom: 15px;flex:1;overflow: hidden;\\\" class=\\\"disable-node-caret\\\">\\n            <wi-tree-view-virtual tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\n                filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getGaussianIcon\\\" get-icons=\\\"self.getGaussianIcons\\\"\\n                get-children=\\\"self.noChildren\\\" icon-style=\\\"self.getGaussianIconStyle\\\" keep-children='true'\\n                run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n                click-fn='self.click2ToggleGaussian'>\\n            </wi-tree-view-virtual>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Configuration</div>\\n</div>\\n<div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; margin: 16px 16px 5px 16px;\\\">\\n    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n        item-label=\\\"'Title'\\\" item-value=\\\"self.getConfigTitle\\\"\\n        set-value=\\\"self.setConfigTitle\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n    </editable>\\n</div>\\n<div style=\\\"font-weight: bold;display: flex; padding: 11px 16px; margin-left: 3px;color: #717171;\\\">X-Axis Scale\\n    <div\\n        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n    </div>\\n</div>\\n<!-- <div class=\\\"label-option-sidebar\\\" style=\\\"margin-top: -5px;\\\">\\n    <span>X-Axis Scale</span>\\n</div> -->\\n<div style=\\\"overflow: auto;\\\">\\n    <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 5px 16px;\\\">\\n\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'X Label'\\\" item-value=\\\"self.getConfigXLabel\\\"\\n                set-value=\\\"self.setConfigXLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n            <span>Unit</span>\\n            <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.xUnitList'\\n                current-select=\\\"self.config.xUnit || self.defaultConfig.xUnit\\\" on-item-changed=\\\"self.onUnitChange\\\">\\n            </wi-dropdown-list>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;margin-bottom: 15px;\\\">\\n            <span>Depth Unit</span>\\n            <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.depthUnitList'\\n                current-select=\\\"self.config.depthUnit || self.defaultConfig.depthUnit\\\" on-item-changed=\\\"self.onDepthUnitChange\\\">\\n            </wi-dropdown-list>\\n        </div>\\n\\n        <div style=\\\"display: flex;\\\">\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Left'\\\" item-value=\\\"self.getLeft\\\"\\n                    set-value=\\\"self.setConfigLeft\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-right: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Right'\\\" item-value=\\\"self.getRight\\\"\\n                    set-value=\\\"self.setConfigRight\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n        </div>\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        <div style=\\\"display: flex;\\\">\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Major'\\\" item-value=\\\"self.getMajor\\\"\\n                    set-value=\\\"self.setConfigMajor\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n            <div style=\\\"margin-right: 15px; \\\"></div>\\n            <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;flex: 1;\\\">\\n                <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                    item-label=\\\"'Minor'\\\" item-value=\\\"self.getMinor\\\"\\n                    set-value=\\\"self.setConfigMinor\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                    content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                </editable>\\n            </div>\\n        </div>\\n\\n        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n\\n        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                item-label=\\\"'Divisions'\\\" item-value=\\\"self.getDivisions\\\"\\n                set-value=\\\"self.setConfigDivisions\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n            </editable>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 20px; display: flex; justify-content: space-between;   flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Scale and Grid\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.config.loga}\\\"\\n                ng-click=\\\"self.config.loga = !self.config.loga\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\">Log Scale</span>\\n            <span ng-class=\\\"{'active' : self.config.grid}\\\"\\n                ng-click=\\\"self.config.grid = !self.config.grid\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\">Show Grid</span>\\n            <span ng-class=\\\"{'active' : self.config.flipHorizontal}\\\"\\n                ng-click=\\\"self.config.flipHorizontal = !self.config.flipHorizontal\\\"\\n                class=\\\"button-with-label\\\">Flip Horizontally</span>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 20px; display: flex; justify-content: space-between; flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Display Mode\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n\\n        <div>\\n            <span ng-class=\\\"{'active' : self.config.displayMode === 'bar'}\\\"\\n                ng-click=\\\"self.config.displayMode='bar'\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\"> Bar Mode</span>\\n            <span ng-class=\\\"{'active' : self.config.displayMode === 'line'}\\\"\\n                ng-click=\\\"self.config.displayMode='line'\\\" class=\\\"button-with-label\\\">Line\\n                Mode</span>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Color Mode\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'zone'}\\\"\\n                ng-click=\\\"self.config.colorMode='zone'\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\"> Zone Color</span>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'well'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='well'\\\"\\n                class=\\\"button-with-label\\\">Well Color</span>\\n            <span ng-class=\\\"{'active' : self.config.colorMode === 'index'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='index'\\\"\\n                class=\\\"button-with-label\\\">Index Color</span>\\n            <!-- <span ng-class=\\\"{'active' : self.config.colorMode === 'user'}\\\"\\n                ng-click=\\\"self.config.colorMode='user'\\\" class=\\\"button-with-label\\\">User Defined</span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 20px; display: flex; justify-content: space-between; flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Stack Mode\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.config.stackMode === 'none'}\\\"\\n                ng-click=\\\"self.config.stackMode='none';self.resetHistogramList();\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\">No Stack</span>\\n            <span ng-class=\\\"{'active' : self.config.stackMode === 'well'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.stackMode='well';self.resetHistogramList();\\\"\\n                class=\\\"button-with-label\\\">Well</span>\\n            <span ng-class=\\\"{'active' : self.config.stackMode === 'zone'}\\\"\\n                style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.stackMode='zone';self.resetHistogramList();\\\"\\n                class=\\\"button-with-label\\\">Zone</span>\\n            <span ng-class=\\\"{'active' : self.config.stackMode === 'all'}\\\"\\n                ng-click=\\\"self.config.stackMode='all';self.resetHistogramList();\\\" class=\\\"button-with-label\\\">All</span>\\n        </div>\\n    </div>\\n    <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 10px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Histogram Mode\\n            <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\"></div>\\n        </div>\\n        <div>\\n            <span ng-class=\\\"{'active' : self.getHistogramMode() === 'frequency'}\\\"\\n                ng-click=\\\"self.changeHistogramMode('frequency')\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\"> Frequency Count</span>\\n            <span ng-class=\\\"{'active' : self.getHistogramMode() === 'percentage'}\\\"\\n                ng-click=\\\"self.changeHistogramMode('percentage')\\\"\\n                class=\\\"button-with-label\\\">Percentage</span>\\n        </div>\\n\\n    </div>\\n    <!-- <div class=\\\"label-option-sidebar\\\"\\n        style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n        <div style=\\\"display: flex;margin-bottom: 16px;\\\">Depth Limitation Mode\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n            </div>\\n        </div>\\n        <div>\\n            <div ng-show=\\\"self.config.limitType === 'interval'\\\">\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Top'\\\" item-value=\\\"self.getConfigLimitTop\\\"\\n                        set-value=\\\"self.setConfigLimitTop\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                        item-label=\\\"'Bottom'\\\" item-value=\\\"self.getConfigLimitBottom\\\"\\n                        set-value=\\\"self.setConfigLimitBottom\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                    </editable>\\n                </div>\\n                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n            </div>\\n            <span ng-class=\\\"{'active' : self.config.limitType === 'interval'}\\\"\\n                ng-click=\\\"self. config.limitType = 'interval'\\\" class=\\\"button-with-label\\\"\\n                style=\\\"margin-right: 8px;\\\"> Interval Depth</span>\\n            <span ng-class=\\\"{'active' : self.config.limitType === 'zonal'}\\\"\\n                ng-click=\\\"self.config.limitType = 'zonal'\\\" class=\\\"button-with-label\\\">Zonal\\n                Depth</span>\\n            <div style=\\\"margin-bottom: 15px; \\\"></div>\\n        </div>\\n    </div> -->\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Control Params</div>\\n</div>\\n<div style=\\\"overflow: hidden; display: flex; flex-direction: column; flex: 1;\\\">\\n    <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 16px; display: flex; justify-content: space-between; flex-direction: column; flex: 1; overflow: hidden;\\\">\\n        <div>\\n            <div class=\\\"switch-label\\\">\\n                Use Background\\n                <label class=\\\"switch\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"slider round\\\" ng-click=\\\"self.notCPBackground = !self.notCPBackground\\\"></span>\\n                </label>\\n            </div>\\n            <div\\n                style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-bottom: 6px; margin-top: 18px;\\\">\\n            </div>\\n        </div>\\n        \\n        <div style=\\\"display: flex; padding: 16px 0;\\\">\\n            <span ng-click=\\\"self.hideSelectedCtrlParams()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 0px;\\\">Hide</span>\\n            <span ng-click=\\\"self.showSelectedCtrlParams()\\\" class=\\\"button-with-label-layer\\\"\\n                style=\\\"margin-left: 15px;\\\">Show</span>\\n            <span ng-click=\\\"self.hideAllCtrlParams()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px;\\\">Hide\\n                All</span>\\n            <span ng-click=\\\"self.showAllCtrlParams()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px;\\\">Show\\n                All</span>\\n        </div>\\n        <div ng-show=\\\"self.histogramList\\\"\\n            style=\\\"border: 1px solid #eee; flex:1; overflow: hidden;\\\" class=\\\"disable-node-caret\\\">\\n            <wi-tree-view-virtual tree-root=\\\"self.ctrlParams\\\" get-label=\\\"self.cpMarkerName\\\"\\n                filter=\\\"self.cpFilter\\\" get-icon=\\\"self.cpIcon\\\" get-icons=\\\"self.cpIcons\\\"\\n                get-children=\\\"self.noChildren\\\" icon-style=\\\"self.cpIconStyle\\\" keep-children='true'\\n                run-match=\\\"self.runCPMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n                click-fn='self.click2ToggleCtrlParams'>\\n            </wi-tree-view-virtual>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Layer</div>\\n</div>\\n<div style=\\\"display: flex; padding: 16px 16px 0px 16px;\\\">\\n    <span ng-click=\\\"self.hideSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 0px;\\\">Deactivate</span>\\n    <span ng-click=\\\"self.showSelectedLayer()\\\" class=\\\"button-with-label-layer\\\"\\n        style=\\\"margin-left: 15px;\\\">Activate</span>\\n    <span ng-click=\\\"self.hideAllLayer()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px;\\\">Deactivate\\n        All</span>\\n    <span ng-click=\\\"self.showAllLayer()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px;\\\">Activate\\n        All</span>\\n</div>\\n<div ng-show=\\\"self.histogramList\\\" class=\\\"disable-node-caret\\\"\\n    style=\\\"border: 1px solid #eee; margin: 15px 15px 5px 15px;flex:1;overflow: hidden;\\\">\\n    <wi-tree-view-virtual tree-root=\\\"self.getLayerTree()\\\" \\n        get-label=\\\"self.getLayerLabel\\\" filter=\\\"self.layerFilter\\\"\\n        get-icon=\\\"self.getLayerIcon\\\" get-icons=\\\"self.getLayerIcons\\\" get-children=\\\"self.noChildren\\\"\\n        icon-style=\\\"self.getLayerIconStyle\\\" keep-children='true' run-match=\\\"self.runLayerMatch\\\"\\n        hide-unmatched=\\\"true\\\" hide-search='false' click-fn='self.click2ToggleLayer'>\\n    </wi-tree-view-virtual>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-list-view ng-scope\\\"\\n    style=\\\"display :flex; background: #f4f4f4; padding: 9px 15px; justify-content: flex-start;\\\">\\n    <!-- <span  class=\\\"reload-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n    <span  class=\\\"save-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n    <span  class=\\\"save-as-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span> -->\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.refresh()\\\">RELOAD</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.save()\\\">SAVE</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.saveAs()\\\">SAVE AS</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.print()\\\">PRINT</span>\\n    <span class=\\\"fn-button\\\" ng-click=\\\"self.exportStatistic()\\\">Export Statistic</span>\\n    <span ng-if=\\\"self.copyEmbeddedLink\\\" class=\\\"fn-button\\\" ng-click=\\\"self.copyEmbeddedLink(self)\\\" title=\\\"Copy embedded link\\\">\\n        <span class=\\\"fa fa-link\\\"></span>\\n    </span>\\n</div>\\n<div style=\\\"flex: 1; display: flex; flex-direction: column;\\\">\\n    <div class=\\\"main-body-center border-style printable\\\" style=\\\"position: relative;\\\">\\n        <layer-collection v-padding=\\\"50\\\" h-padding='60'>\\n            <axis-layer min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" loga=\\\"self.getLoga()\\\"\\n                n-ticks=\\\"self.getMajor() * self.getMinor()\\\" minor-ticks=\\\"self.getMinor()\\\" precision=\\\"4\\\"\\n                grid=\\\"!!self.config.grid\\\" placement=\\\"1\\\"\\n                get-min-val=\\\"self.getLeft\\\" get-max-val=\\\"self.getRight\\\">\\n            </axis-layer>\\n            <axis-layer ng-if=\\\"self.getHistogramMode() === 'frequency'\\\"\\n                min-val='self.minY || 0' max-val='self.getMaxY() || 100' n-ticks=\\\"10\\\" minor-ticks=\\\"1\\\"\\n                precision=\\\"4\\\" grid=\\\"!!self.config.grid\\\" axis-direction=\\\"'up'\\\" placement=\\\"0\\\"></axis-layer>\\n            <axis-layer ng-if=\\\"self.getHistogramMode() === 'percentage'\\\"\\n                min-val='0' max-val='self.getMaxY() || 100' n-ticks=\\\"10\\\" minor-ticks=\\\"1\\\"\\n                precision=\\\"2\\\" grid=\\\"!!self.config.grid\\\" axis-direction=\\\"'up'\\\" placement=\\\"0\\\"></axis-layer>\\n            <axis-layer min-val=\\\"0\\\" max-val=\\\"100\\\" n-ticks=\\\"10\\\" minor-ticks=\\\"1\\\" precision=\\\"4\\\"\\n                grid=\\\"false\\\" axis-direction=\\\"'up'\\\" placement=\\\"1\\\"></axis-layer>\\n            <canvas-barchart-layer ng-show=\\\"!bins._notUsed\\\" plot-type=\\\"self.getHistogramMode()\\\"\\n                ng-if=\\\"self.getDisplayMode() == 'bar' && self.getStackMode() == 'none'\\\"\\n                ng-repeat=\\\"bins in self.histogramList\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y='self.minY || 0' max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\n                bins=\\\"bins\\\" bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\">\\n            </canvas-barchart-layer>\\n            <canvas-barchart-layer ng-show=\\\"!groupOfBins._notUsed\\\" plot-type=\\\"self.getHistogramMode()\\\" ng-if=\\\"self.getDisplayMode() == 'bar' &&\\n                self.getStackMode() == 'well'\\\" ng-repeat=\\\"groupOfBins in self.histogramList\\\"\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" min-y='self.minY || 0'\\n                max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\" autofit='false' bins=\\\"groupOfBins\\\"\\n                bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\" multiple='true'>\\n            </canvas-barchart-layer>\\n            <canvas-barchart-layer ng-show=\\\"!groupOfBins._notUsed\\\" plot-type=\\\"self.getHistogramMode()\\\" ng-if=\\\"self.getDisplayMode() == 'bar' &&\\n                self.getStackMode() == 'zone'\\\" ng-repeat=\\\"groupOfBins in self.histogramList\\\"\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" min-y='self.minY || 0'\\n                max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\" autofit='false' bins=\\\"groupOfBins\\\"\\n                bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\" multiple='true'>\\n            </canvas-barchart-layer>\\n            <canvas-barchart-layer ng-show=\\\"!bins._notUsed\\\" plot-type=\\\"self.getHistogramMode()\\\" ng-if=\\\"self.getDisplayMode() == 'bar' &&\\n                self.getStackMode() == 'all'\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y='self.minY || 0' max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\n                bins=\\\"bins\\\" bin-gap=\\\"self.getBinGap()\\\" color-func=\\\"self.colorFn\\\" multiple='true'\\n                ng-repeat=\\\"bins in self.histogramList\\\">\\n            </canvas-barchart-layer>\\n            <line-formula-layer ng-if=\\\"self.condition4GaussianLine()\\\" min-val='self.getLeft()' max-val='self.getRight()'\\n                min-y='self.minY || 0' max-y='self.getMaxY() || 100' autofit='true' resolution='5000' loga=\\\"self.getLoga()\\\"\\n                formula=\\\"self.gaussianLine\\\" line-color=\\\"self.gaussianLine.color\\\" line-width=\\\"self.gaussianLine.width\\\">\\n            </line-formula-layer>\\n            <control-marker-layer ng-if=\\\"self.condition4GaussianLine()\\\"\\n                loga=\\\"self.getLoga()\\\"\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" min-y='self.minY || 0'\\n                max-y='self.getMaxY() || 100'\\n                markers=\\\"self.gaussianLine.sigmaLines\\\" draggable=\\\"false\\\"\\n                not-use-background='true'\\n                axis-direction=\\\"'right'\\\"\\n                get-marker-value=\\\"self.getMarkerGaussianVal\\\"\\n                set-marker-value=\\\"self.setMarkerGaussianVal\\\"\\n                get-marker-style-fn=\\\"self.markerGaussianStyle\\\"\\n                get-marker-name=\\\"self.markerName\\\"\\n                marker-width=\\\"19\\\">\\n            </control-marker-layer>\\n            <line-formula-layer ng-if=\\\"self.condition4LogNormalD()\\\" min-val='self.getLeft()' max-val='self.getRight()'\\n                loga=\\\"self.getLoga()\\\" min-y='self.minY || 0' max-y='self.getMaxY() || 100' autofit='true' resolution='5000'\\n                eqn-offsets=\\\"['65px', '0%']\\\" formula=\\\"self.logNormalDLine\\\" line-color=\\\"self.logNormalDLine.color\\\"\\n                line-width=\\\"self.logNormalDLine.width\\\" show-equation='true'>\\n            </line-formula-layer>\\n            <line-point-layer ng-if=\\\"self.condition4CumulativeLine()\\\" min-val=\\\"self.getLeft()\\\" plot-type=\\\"self.getHistogramMode()\\\"\\n                max-val=\\\"self.getRight()\\\" min-y='self.minY || 0' max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\"\\n                min-draw=\\\"self.getLeft()\\\" max-draw=\\\"self.getRight()\\\" min-draw-y=\\\"self.minY || 0\\\" max-draw-y=\\\"self.getMaxY() || 100\\\"\\n                autofit='false' get-x='self.getCumulativeX' get-y='self.getCumulativeY' line-data=\\\"self.cmltLineData\\\"\\n                line-color=\\\"self.cmltLineData.color\\\" line-width='self.cmltLineData.width' line-dash=\\\"'2 0'\\\">\\n            </line-point-layer>\\n            <line-point-layer ng-if=\\\"self.getDisplayMode() === 'line' && !bins._notUsed\\\" plot-type=\\\"self.getHistogramMode()\\\"\\n                ng-repeat=\\\"bins in self.histogramList\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                min-y='self.minY || 0' max-y='self.getMaxY() || 100' loga=\\\"self.getLoga()\\\" autofit='false'\\n                get-x='self.getBinX' get-y='self.getBinY' line-data=\\\"bins\\\" line-color=\\\"bins.color\\\"\\n                line-width='2' line-dash=\\\"'2 0'\\\" color-func=\\\"self.colorFn\\\">\\n            </line-point-layer>\\n            <control-marker-layer ng-if=\\\"self.ctrlParams && self.ctrlParams.length && self.validPlotRegion()\\\"\\n                min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" min-y='self.minY || 0'\\n                max-y='self.getMaxY() || 100'\\n                markers=\\\"self.ctrlParams\\\" draggable=\\\"true\\\"\\n                markers-mask = \\\"self.ctrlParamsMask\\\"\\n                order-free='true' loga=\\\"self.getLoga()\\\"\\n                not-use-background='self.notCPBackground'\\n                axis-direction=\\\"'right'\\\"\\n                get-marker-value=\\\"self.cpGetMarkerVal\\\"\\n                set-marker-value=\\\"self.cpSetMarkerVal\\\"\\n                get-marker-style-fn=\\\"self.cpMarkerStyle\\\"\\n                get-marker-name=\\\"self.cpMarkerName\\\"\\n                marker-width=\\\"19\\\"\\n                on-marker-drag-end=\\\"self.onMarkerDragEnd\\\">\\n            </control-marker-layer>\\n        </layer-collection>\\n        <p style=\\\"position: absolute; font-weight: bold; left: 50%; transform: translateX(-50%); bottom: 0\\\">\\n            {{self.getConfigXLabel()}} ({{ self.config.xUnit || self.defaultConfig.xUnit }})</p>\\n        <p\\n            style=\\\"position: absolute; top: 23px; right: 45%;text-transform: uppercase; font-weight: bold; transform: translateY(-50%);\\\">\\n            {{self.getConfigTitle()}}</p>\\n        <p style=\\\"position: absolute; font-weight: bold;top: 23px;left: 15px; transform: translateY(-50%);\\\"\\n            ng-if=\\\"self.getHistogramMode() === 'frequency'\\\">Frequency</p>\\n        <p style=\\\"position: absolute; font-weight: bold;top: 23px;left: 15px; transform: translateY(-50%);\\\"\\n            ng-if=\\\"self.getHistogramMode() === 'percentage'\\\">Percentage (%)</p>\\n        <p style=\\\"position: absolute; font-weight: bold;top: 23px; right: 15px;transform: translateY(-50%);\\\">Percentile (%)</p>\\n    </div>\\n    <div class=\\\"statistic-table\\\" resizable r-directions=\\\"['top']\\\" r-flex=\\\"true\\\">\\n        <div style=\\\"overflow: auto; position: absolute;overflow: auto; position: absolute; top: 0; right: 0; left: 0; bottom: 0;\\\" >\\n            <wi-table-view ng-if=\\\"self.histogramList.length\\\" row-count=\\\"self.getZoneNames().length\\\"\\n                col-count=\\\"self.getHeaders().length\\\" col-headers=\\\"self.getHeaders()\\\"\\n                get-row-icons=\\\"self.getStatsRowIcons\\\" get-row-icon-style=\\\"self.getStatsIconStyle\\\"\\n                row-headers=\\\"self.getZoneNames()\\\" accessor=\\\"self.statsValue\\\" valid-row=\\\"self.isLayerUsed\\\"\\n                item-list=\\\"self.histogramList\\\">\\n            </wi-table-view>\\n        </div>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Print Setting</div>\\n</div>\\n<print-settings style=\\\"overflow: auto;\\\" plot-ctrl=\\\"self\\\"></print-settings>\\n\";","module.exports = \"<!-- <side-bar ng-if=\\\"self.familyTable && self.palTable\\\" my-default-width=\\\"370\\\" orientation=\\\"w\\\" collapsed=\\\"false\\\"> -->\\n<side-bar my-default-width=\\\"370\\\" orientation=\\\"w\\\" collapsed=\\\"self.sidebarCollapsed || false\\\">\\n    <div style=\\\"display: flex; flex-direction: column; width: 100%; height: 100%;\\\">\\n        <!--Wells-->\\n        <div ng-show=\\\"isSet(1)\\\" style=\\\"overflow: auto;flex: 1;display:flex;flex-direction:column;\\\">\\n            \" + require('./wells.html') + \"\\n        </div>\\n        <!--Zone-->\\n        <div ng-show=\\\"isSet(2)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n            \" + require('./zone.html') + \"\\n        </div>\\n        <!--Control Params-->\\n        <div ng-show=\\\"isSet(7) && self.ctrlParams.length\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n            \" + require('./control-params.html') + \"\\n        </div>\\n        <!--Assistive Lines-->\\n        <div ng-show=\\\"isSet(6)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n            \" + require('./assistive-lines.html') + \"\\n        </div>\\n        <!--Configuration-->\\n        <div ng-show=\\\"isSet(3)\\\" style=\\\"overflow: hidden;flex: 1;display: flex;flex-direction: column;\\\">\\n            \" + require('./config.html') + \"\\n        </div>\\n        <!--Statistic-->\\n        <div ng-show=\\\"isSet(4)\\\" style=\\\"overflow: hidden;flex: 1;display: flex;flex-direction: column;\\\">\\n            \" + require('./statistic.html') + \"\\n        </div>\\n        <!--Layers-->\\n        <div ng-show=\\\"isSet(5)\\\" style=\\\"overflow: auto; flex: 1; display: flex; flex-direction: column;\\\">\\n            \" + require('./layers.html') + \"\\n        </div>\\n        <!-- -----PRINT SETTINGS----- -->\\n        <div ng-show=\\\"isSet(8)\\\" style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n            \" + require('./print-settings.html') + \"\\n        </div>\\n        <div style=\\\"display: flex;\\\">\\n            <span class=\\\"button-update\\\" ng-class=\\\"{'disabled-click': !self.isSettingChange}\\\" ng-click=\\\"self.genHistogramList()\\\">\\n                Update\\n            </span>\\n        </div>\\n    </div>\\n    <div class=\\\"label-list-view\\\" style=\\\"\\n            display: flex;\\n            border-left: 1px solid #e4e4e4;\\n            flex-direction: column;\\n            justify-content: start;\\n            padding: 0px;\\n            right: 0;\\n            background: #fff;\\n            overflow-y: overlay;\\n            overflow-x: hidden;\\n            position: sticky;\\n            box-shadow: 0 10px 10px #00000017;\\\">\\n        <div style=\\\"\\n            transform-origin: left;\\n            transform: translate(20px, -50%) rotate(90deg);\\n            display: flex;\\n            position: absolute;\\\">\\n            <div ng-class=\\\"{'active' : isSet(1)}\\\" ng-click=\\\"setTab(1)\\\" class=\\\"tab-with-label\\\">\\n                <div >\\n                    Wells\\n                </div>\\n            </div>\\n            <div ng-class=\\\"{'active' : isSet(3)}\\\" ng-click=\\\"setTab(3)\\\" class=\\\"tab-with-label\\\">\\n                <div >\\n                    Configuration\\n                </div>\\n            </div>\\n            <!--<div ng-show='self.ctrlParams.length' ng-class=\\\"{'active' : isSet(7)}\\\" ng-click=\\\"setTab(7)\\\" class=\\\"tab-with-label\\\">-->\\n                <!--<div>-->\\n                    <!--Control Params-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <div ng-class=\\\"{'active' : isSet(2)}\\\" ng-click=\\\"setTab(2)\\\" class=\\\"tab-with-label\\\"\\n                ng-show=\\\"!self.ctrlParams || !self.ctrlParams.length\\\">\\n                <div >\\n                    Zone/Interval\\n                </div>\\n            </div>\\n            <div ng-class=\\\"{'active' : isSet(6)}\\\" ng-click=\\\"setTab(6)\\\" class=\\\"tab-with-label\\\">\\n                <div >\\n                    Assistive Lines\\n                </div>\\n            </div>\\n            <div ng-class=\\\"{'active' : isSet(4)}\\\" ng-click=\\\"setTab(4)\\\" class=\\\"tab-with-label\\\">\\n                <div >\\n                    Statistic\\n                </div>\\n            </div>\\n            <div ng-class=\\\"{'active' : isSet(5)}\\\" ng-click=\\\"setTab(5)\\\" class=\\\"tab-with-label\\\">\\n                <div >\\n                    Layers\\n                </div>\\n            </div>\\n            <div class=\\\"tab-with-label\\\" ng-class=\\\"{'active' : isSet(8)}\\\" ng-click=\\\"setTab(8)\\\">\\n                <div >\\n                    Print Setting\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</side-bar>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\" style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Statistic</div>\\n</div>\\n<div onmouseover=\\\"this.style.overflow='overlay'\\\" onmouseout=\\\"this.style.overflow='hidden'\\\"style=\\\"flex:1; padding: 15px;\\\">\\n    <div style=\\\"display: flex;margin-bottom: 16px;\\\">Table Information\\n        <div style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n        </div>\\n    </div>\\n    <div style=\\\"display: flex; flex-wrap: wrap;    position: absolute;\\\">\\n        <span ng-repeat=\\\"header in self.statisticHeaders\\\" class=\\\"select-table-header\\\"\\n            ng-class=\\\"{'active' : self.statisticHeaderMasks[$index]}\\\"\\n            ng-click=\\\"self.statisticHeaderMasks[$index]= !self.statisticHeaderMasks[$index]\\\">\\n            {{header}}</span>\\n    </div>\\n</div>\\n\";","module.exports = \"<div class=\\\"label-option-sidebar\\\"\\n    style=\\\"padding: 12px 20px;display: flex;background: #f4f4f4;border-bottom: 1px solid #dcdcdc;justify-content: space-between;flex-direction: column;\\\">\\n    <div>Wells</div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\" style=\\\"margin-top: 10px; display: flex; justify-content: space-between;\\\">\\n    <span>Input</span>\\n    <div>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'family-group'}\\\" ng-click=\\\"self.selectionType='family-group'\\\"\\n            class=\\\"button-with-label\\\" style=\\\"margin-right: 8px;\\\">Family Group</span>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'family'}\\\" ng-click=\\\"self.selectionType='family'\\\"\\n            class=\\\"button-with-label\\\" style=\\\"margin-right: 8px;\\\">Family</span>\\n        <span ng-class=\\\"{'active' : self.selectionType === 'curve'}\\\" ng-click=\\\"self.selectionType='curve'\\\"\\n            class=\\\"button-with-label\\\">Curve</span>\\n    </div>\\n</div>\\n<div class=\\\"label-option-sidebar\\\" style=\\\"display: flex;\\\">\\n    <div class=\\\"selection-sidebar\\\" style=\\\"flex: 1;\\\">\\n        <span>X Axis</span>\\n        <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.selectionList'\\n            current-select=\\\"self.selectionValue\\\" on-item-changed=\\\"self.onInputSelectionChanged\\\">\\n        </wi-dropdown-list>\\n    </div>\\n</div>\\n<div style=\\\"overflow: auto; display:flex; flex-direction: column; flex: 1;\\\">\\n    <wi-sortable item-list=\\\"self.treeConfig\\\" related-list=\\\"[self.wellSpec]\\\" update-fn=\\\"self.sortableUpdate\\\">\\n        <div class=\\\"sort-item\\\" style=\\\"border: 1px solid #e4e4e4;margin: 5px 16px;border-radius: 2px;\\\"\\n            ng-repeat='well in self.treeConfig'>\\n            <div style=\\\"display: flex; flex-direction: row; position: relative; padding: 9px 10px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\n                <div style=\\\"display: flex; align-items: center;\\\">\\n                    <i class=\\\"header-icon\\\" ng-class=\\\"{'fa fa-caret-down': well._notHidden, 'fa fa-caret-right': !well._notHidden}\\\"\\n                        ng-click=\\\"well._notHidden = !well._notHidden\\\"></i>\\n                    <div style=\\\"border-radius: 2px; padding: 1px 10px;max-width: 150px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\\"\\n                        ng-bind=\\\"well.name\\\"></div>\\n                </div>\\n                <div style=\\\"display: flex; align-items: center;position:absolute; right: 10px;\\\">\\n\\n                    <span ng-class=\\\"{'red-color fa fa-eye-slash': well._notUsed, 'blue-color fa fa-eye': !well._notUsed }\\\"\\n                        ng-click=\\\"self.toggleWell(well)\\\" style=\\\"cursor: pointer; margin-right: 17px;\\\">\\n                    </span>\\n                    <span class=\\\"fa fa-filter\\\" ng-class=\\\"{'blue-color': self.hasDiscriminator(well)}\\\"\\n                        ng-click=\\\"self.discriminatorDialog(well)\\\" style=\\\"cursor: pointer; margin-right: 17px;\\\">\\n                    </span>\\n                    <span class=\\\"fa fa-times-circle\\\" ng-click=\\\"self.removeWell(well)\\\"\\n                        style=\\\"color: rgb(163, 163, 163);cursor: pointer;margin-right: 5px;\\\">\\n                    </span>\\n                </div>\\n            </div>\\n            <div style=\\\"display: flex;position: relative;flex-direction: row ; flex-wrap: wrap; max-width: 420px;border-top: 1px solid #dbdbdb; background: #f4f4f4; align-items: center;justify-content: flex-start;text-align: center;\\\">\\n                <div class=\\\"axis-bar\\\">\\n                    <div style=\\\"overflow: hidden;white-space: nowrap;text-overflow: ellipsis; flex: 1;\\\" title=\\\"{{self.getWellSpec(well).datasetName}}\\\">Dataset: {{self.getWellSpec(well).datasetName}}</div>\\n                    <div style=\\\"border-right: 1px solid #ddd;height: 17px;margin: 0 10px;\\\"></div>\\n                    <div style=\\\"overflow: hidden;white-space: nowrap;text-overflow: ellipsis; flex: 1;\\\" title=\\\"{{self.getCurve(well).name}}\\\">Curve: {{self.getCurve(well).name}}</div>\\n                </div>\\n            </div>\\n            <div>\\n                <wi-tree-view-virtual ng-hide=\\\"!well._notHidden\\\" tree-root=\\\"well\\\" get-label=\\\"self.getLabel\\\" filter=\\\"self.selectionValue\\\"\\n                get-icon=\\\"self.getIcon\\\" get-children=\\\"self.getChildren\\\" keep-children='true' uncollapsible='false'\\n                run-match=\\\"self.runMatch\\\" hide-unmatched=\\\"true\\\" hide-search='true' click-fn='self.clickFunction' vlist-height=\\\"110\\\" collapsed=\\\"false\\\">\\n                </wi-tree-view-virtual>\\n            </div>\\n        </div>\\n    </wi-sortable>\\n</div>\\n\";","module.exports = \"<div\\n  class=\\\"label-option-sidebar\\\"\\n  style=\\\"padding: 12px 20px; display: flex; gap: 1em; background: #f4f4f4; border-bottom: 1px solid #dcdcdc\\\"\\n>\\n  <span\\n    ng-class=\\\"{'active' : self.zonationType !== 'interval'}\\\"\\n    ng-click=\\\"self.zonationType='zone'\\\"\\n    class=\\\"button-with-label\\\"\\n  >\\n    Zone\\n  </span>\\n  <span\\n    ng-class=\\\"{'active' : self.zonationType === 'interval'}\\\"\\n    ng-click=\\\"self.zonationType='interval'\\\"\\n    class=\\\"button-with-label\\\"\\n  >\\n    Interval\\n  </span>\\n</div>\\n<div ng-if=\\\"self.zonationType === 'interval'\\\" style=\\\"padding: 16px 16px\\\">\\n  <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1\\\">\\n    <editable\\n      style=\\\"flex: 1; display: flex; flex-direction: row; overflow: hidden\\\"\\n      item-label=\\\"'Top'\\\"\\n      item-value=\\\"self.getIntervalTop\\\"\\n      set-value=\\\"self.setIntervalTop\\\"\\n      enabled=\\\"true\\\"\\n      label-style=\\\"{}\\\"\\n      content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n    ></editable>\\n  </div>\\n  <div style=\\\"margin-bottom: 15px\\\"></div>\\n  <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px; flex: 1\\\">\\n    <editable\\n      style=\\\"flex: 1; display: flex; flex-direction: row; overflow: hidden\\\"\\n      item-label=\\\"'Bottom'\\\"\\n      item-value=\\\"self.getIntervalBottom\\\"\\n      set-value=\\\"self.setIntervalBottom\\\"\\n      enabled=\\\"true\\\"\\n      label-style=\\\"{}\\\"\\n      content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\"\\n    ></editable>\\n  </div>\\n</div>\\n<div ng-if=\\\"self.zonationType !== 'interval'\\\">\\n  <div class=\\\"label-option-sidebar\\\" style=\\\"padding: 16px 16px\\\">\\n    <div class=\\\"selection-sidebar\\\">\\n      <span>Zoneset</span>\\n      <wi-dropdown-list\\n        style=\\\"flex: 1; margin-left: 10px\\\"\\n        items=\\\"self.zonesetList\\\"\\n        on-wi-dropdown-init=\\\"self.zonesetDropdownInit\\\"\\n        current-select=\\\"self.zonesetName\\\"\\n        on-item-changed=\\\"self.onZonesetSelectionChanged\\\"\\n      >\\n      </wi-dropdown-list>\\n    </div>\\n  </div>\\n  <div style=\\\"display: flex; padding: 0 16px 11px 16px\\\">\\n    <span ng-click=\\\"self.hideSelectedZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 0\\\">Deactivate</span>\\n    <span ng-click=\\\"self.showSelectedZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px\\\">Activate</span>\\n    <span ng-click=\\\"self.hideAllZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px\\\">Deactivate All</span>\\n    <span ng-click=\\\"self.showAllZone()\\\" class=\\\"button-with-label-layer\\\" style=\\\"margin-left: 15px\\\">Activate All</span>\\n  </div>\\n  <div\\n    ng-show=\\\"self.zoneTree\\\"\\n    style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px; border-radius: 2px; flex: 1; overflow: auto\\\"\\n  >\\n    <div style=\\\"border-bottom: 1px solid #eee\\\">\\n      <i class=\\\"fa fa-search\\\" style=\\\"position: relative; left: 0.5em; color: #aaa\\\"></i>\\n      <input\\n        type=\\\"text\\\"\\n        ng-model=\\\"filter\\\"\\n        placeholder=\\\"Search\\\"\\n        style=\\\"border: none; width: calc(100% - 1.5em); padding: 8px\\\"\\n      />\\n    </div>\\n    <div style=\\\"height: calc(100% - 34px)\\\">\\n      <vue-component\\n        root=\\\"WiTree\\\"\\n        props=\\\"{\\n                    treeRoot: self.zoneTreeUniq,\\n                    getLabel: self.getZoneLabel,\\n                    getIcon: self.getZoneIcon,\\n                    clickFn: self.click2ToggleZone,\\n                    filter: filter,\\n                }\\\"\\n      ></vue-component>\\n    </div>\\n  </div>\\n  <div ng-hide=\\\"self.zoneTree\\\" style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px\\\">zonationAll</div>\\n</div>\\n\";","module.exports = \"<header ng-if=\\\"self.dragHeader\\\">{{ 'Histogram' }}\\n</header>\\n<div class=\\\"main\\\">\\n    <div style=\\\"display:flex; width: 100%; height: 100%; flex: 1;\\\">\\n        <div class=\\\"main-body\\\">\\n            \" + require('./fragments/main-area.html') + \"\\n        </div>\\n        <wi-droppable on-drop=\\\"self.onDrop\\\" container-style=\\\"{display:'flex',flex: 1, position: 'relative', height: '100%'}\\\">\\n            <div style=\\\" height: 100%; right: 0; border-left: 1px solid #ccc;\\\">\\n                \" + require('./fragments/side-bar.html') + \"\\n            </div>\\n        </wi-droppable>\\n    </div>\\n</div>\\n\";","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","module.exports = {\n    multiWellCrossplot: require('./multi-well-crossplot'),\n    multiCrossplot: require('./multi-crossplot'),\n    multiWellHistogram: require('./multi-well-histogram'),\n    multiHistogram: require('./multi-histogram')\n}\n","var componentName = 'multiCrossplot';\nmodule.exports.name = componentName;\nrequire('./style.less');\n\nvar app = angular.module(componentName, ['multiWellCrossplot','wiLoading']);\napp.component(componentName, {\n    template: require('./template.html'),\n    controller: multiCrossplotController,\n    controllerAs: 'self',\n    bindings: {\n        token: \"<\",\n        idProject: \"<\",\n        wellSpecs: \"=\",\n        zonesetNames: \"<\",\n        selectionTypes: \"<\",\n        selectionXValues: \"<\",\n        selectionYValues: \"<\",\n        selectionZ1Values: \"<\",\n        selectionZ2Values: \"<\",\n        selectionZ3Values: \"<\",\n        selectionValueCouple: '<',\n\t\tidHistograms: \"<\",\n\t\tconfigs: '<',\n        logaX: \"<\",\n        logaY: \"<\",\n        scaleLeft: \"<\",\n        scaleRight: \"<\",\n        scaleBottom: \"<\",\n        scaleTop: \"<\",\n        onSave: '<',\n        onSaveAs: '<',\n\t\ttitles: '<',\n        paramGroups: '<',\n        paramGroupPointsFn: \"<\",\n        getParamGroupX: \"<\",\n        getParamGroupY: \"<\",\n        setParamGroupX: \"<\",\n        setParamGroupY: \"<\",\n        getParamGroupPointLabel: \"<\",\n        pickettSets: \"<\",\n        showAdjuster: '<',\n        getPickettSetRw: '<',\n        getPickettSetA: \"<\",\n        getPickettSetM: \"<\",\n        getPickettSetN: \"<\",\n        setPickettSetRw: '<',\n        setPickettSetA: \"<\",\n        setPickettSetM: \"<\",\n        setPickettSetN: \"<\",\n        getPickettSetName: \"<\",\n        setPickettSetName: \"<\",\n        getPickettSetColor: \"<\",\n        overlayLine: \"<\",\n        showPickettSetAt: \"<\",\n        onInitFn: \"<\",\n        onReload: '<'\n    },\n    transclude: true\n});\nmultiCrossplotController.$inject = ['$scope', '$timeout', '$element', 'wiToken', 'wiApi', 'wiDialog', 'wiLoading'];\nfunction multiCrossplotController($scope, $timeout, $element, wiToken, wiApi, wiDialog, wiLoading) {\n    let self = this;\n    self.silent = true;\n    $scope.tabIndex = 0;\n    const svl = [];\n\n    this.$onInit = async function () {\n        if (self.token)\n            wiToken.setToken(self.token);\n        for (let i = 0; i < self.selectionXValues.length; i++) svl.push([]);\n    }\n    self.activateTab = function ($index){\n        $timeout(()=>{\n            $scope.tabIndex = $index;\n        })\n\n    }\n    this.getParamGroups = function() {\n        if (typeof self.paramGroups == 'function') {\n            return self.paramGroups();\n        } else {\n            return self.paramGroups;\n        }\n    }\n    this.getSelectionValueList = function(idx) {\n        svl[idx].length = 0;\n        svl[idx].push(self.selectionXValues[idx], self.selectionYValues[idx], self.selectionZ1Values[idx], self.selectionZ2Values[idx], self.selectionZ3Values[idx]);\n        return svl[idx];\n    }\n    this.onDrop = function (event, helper, myData) {\n        let idCurves = helper.data(\"idCurves\");\n        let selectionXValue;\n        let idWell;\n        if(idCurves && idCurves.length >= 2){\n            $timeout(()=>{\n                self.warning = false;\n            })\n            wiApi.getCurveInfoPromise(idCurves[0]).then(curveInfo => {\n                selectionXValue = curveInfo.name;\n                return wiApi.getDatasetInfoPromise(curveInfo.idDataset);\n            }).then(datasetInfo => {\n                idWell = datasetInfo.idWell;\n                $timeout(()=>{\n                    self.wellSpecs.push([{idWell}]);\n                    self.selectionTypes.push('curve');\n                    self.selectionXValues.push(selectionXValue);\n                    wiApi.getCurveInfoPromise(idCurves[1]).then(curveInfo => {\n                        // console.log(curveInfo.name);\n                        $timeout(()=>{\n                            self.selectionYValues.push(curveInfo.name);\n                        });\n                    })\n                });\n            });\n            \n        } else {\n            $timeout(()=>{\n                self.warning = true;\n            })\n        }\n        \n    }\n    // this.removeTab = function ($event, index){\n    //     $event.stopPropagation();\n    //     $event.preventDefault();\n    //     $timeout(() => {\n    //         self.wellSpecs.splice(index, 1);\n    //     })\n    // }\n}\n","var componentName = 'multiHistogram';\nmodule.exports.name = componentName;\nrequire('./style.less');\n\nconst _DECIMAL_LEN = 4;\n\nvar app = angular.module(componentName, ['multiWellHistogram','wiLoading']);\napp.component(componentName, {\n    template: require('./template.html'),\n    controller: multiHistogramController,\n    controllerAs: 'self',\n    bindings: {\n        token: \"<\",\n        idProject: \"<\",\n        wellSpecs: \"=\",\n        zonesetNames: \"<\",\n        selectionTypes: \"<\",\n        selectionValues: \"<\",\n\t\tidHistograms: \"<\",\n        configs: '<',\n        noStack: '<',\n        stackMode: \"<\",\n        ctrlParamsList: '<',\n        onSave: '<',\n        onSaveAs: '<',\n\t\ttitles: '<',\n        prefixs: '<',\n        cpGetMarkerVal: '<',\n        cpSetMarkerVal: '<',\n        cpMarkerStyle: '<',\n        cpMarkerName: '<',\n        cpIcons: '<',\n        cpIconStyle: '<',\n        onMarkerDragEnd: \"<\",\n        onReload: '<'\n    },\n    transclude: true\n});\nmultiHistogramController.$inject = ['$scope', '$timeout', '$element', 'wiToken', 'wiApi', 'wiDialog', 'wiLoading']\nfunction multiHistogramController($scope, $timeout, $element, wiToken, wiApi, wiDialog, wiLoading) {\n    let self = this;\n    self.silent = true;\n    $scope.tabIndex = 0;\n\n    this.$onInit = async function () {\n        if (self.token)\n            wiToken.setToken(self.token);\n        console.log(self.zonesetNames);\n    }\n    self.activateTab = function ($index){\n        $timeout(()=>{\n            $scope.tabIndex = $index;\n        })\n\n    }\n    this.getCtrlParams = function(index) {\n        if (typeof self.ctrlParamsList == 'function') {\n            return self.ctrlParamsList()[index];\n            //self.ctrlParamsList().then(result => {\n                //return result[index];\n            //});\n        } else {\n            return self.ctrlParamsList[index];\n        }\n    }\n    this.onDrop = function (event, helper, myData) {\n        let idCurves = helper.data(\"idCurves\");\n        let curveName;\n        let idWell;\n        if(idCurves){\n            self.warning = false;\n            wiLoading.show(document.getElementsByTagName(\"body\")[0], false);\n            wiApi.getCurveInfoPromise(idCurves[0]).then(curveInfo => {\n                console.log(curveInfo);\n                curveName = curveInfo.name;\n                return wiApi.getDatasetInfoPromise(curveInfo.idDataset);\n            }).then(datasetInfo => {\n                idWell = datasetInfo.idWell;\n                $timeout(()=>{\n                    self.wellSpecs.push([{idWell}]);\n                    self.selectionTypes.push('curve');\n                    self.selectionValues.push(curveName);\n                });\n                wiLoading.hide();\n            });\n        } else {\n            $timeout(()=>{\n                self.warning = true;\n            })\n        }\n        \n    }\n}\n","import { WiTree } from '@revotechuet/misc-component-vue';\nimport utils from '../utils';\nimport './style.less';\n\nconst componentName = 'multiWellCrossplot';\nexport const name = componentName;\n\nconst regression = require('../vendor/js/wi-regression');\nconst PrintableController = Printable.klass;\nconst component = Printable.component;\n\nconst _DECIMAL_LEN = 4;\nconst _PICKETT_LIMIT = 5;\nconst _POLYGON_LIMIT = 5;\n\nconst app = angular.module(componentName, [\n    'sideBar', 'wiTreeViewVirtual', 'wiTableView',\n    'wiApi', 'editable',\n    'wiDialog',\n    'wiDroppable', 'wiDropdownList', 'angularResizable',\n    'plot-toolkit', 'printSettings',\n    'wiLoading', 'line-style'\n]);\napp.component(componentName, component({\n    controller: multiWellCrossplotController,\n    template: require('./template.html'),\n    bindings: {\n        token: \"<\",\n        idProject: \"<\",\n        wellSpec: \"<\",\n        zonesetName: \"<\",\n        selectionType: \"=\",\n        selectionValueList: '<',\n        idCrossplot: \"<\",\n        config: '<',\n        logaX: '<',\n        logaY: \"<\",\n        scaleLeft: \"<\",\n        scaleRight: \"<\",\n        scaleBottom: \"<\",\n        scaleTop: \"<\",\n        //printSettings: '<',\n        onSave: '<',\n        onSaveAs: '<',\n        onInitFn: '<',\n        polygons: '<',\n        polygonExclude: '<',\n        regressionType: '<',\n        silent: \"<\",\n        pointSize: '<',\n        udlsAssetId: '<',\n        pickettSets: '<',\n        swParamList: '<',\n        paramGroups: '<',\n        paramGroupPointsFn: \"<\",\n        getParamGroupX: \"<\",\n        getParamGroupY: \"<\",\n        setParamGroupX: \"<\",\n        setParamGroupY: \"<\",\n        getParamGroupPointLabel: \"<\",\n        showAdjuster: '<',\n        getPickettSetRw: '<',\n        getPickettSetA: \"<\",\n        getPickettSetM: \"<\",\n        getPickettSetN: \"<\",\n        setPickettSetRw: '<',\n        setPickettSetA: \"<\",\n        setPickettSetM: \"<\",\n        setPickettSetN: \"<\",\n        getPickettSetName: \"<\",\n        setPickettSetName: \"<\",\n        getPickettSetColor: '<',\n        overlayLine: \"<\",\n        showPickettSetAt: \"<\",\n        showTooltip: \"<\",\n        onReload: '<',\n        afterNewPlotCreated: '<',\n        copyEmbeddedLink: '<',\n        sidebarCollapsed: '<'\n    },\n    transclude: true\n}));\nmultiWellCrossplotController.$inject = ['$scope', '$timeout', '$element', '$compile', 'wiToken', 'wiApi', 'wiDialog', 'wiLoading'];\nfunction multiWellCrossplotController($scope, $timeout, $element, $compile, wiToken, wiApi, wiDialog, wiLoading) {\n    let self = this;\n    $scope.WiTree = WiTree;\n    PrintableController.call(this, $scope, $element, $timeout, $compile, wiApi, wiLoading);\n    self.treeConfig = [];\n    self.silent = true;\n    self.selectedNode = null;\n    self.datasets = {};\n    self.logsData = [];\n    //--------------\n    $scope.tab = 1;\n    self.selectionTab = self.selectionTab || 'Wells';\n\n    $scope.setTab = function (newTab) {\n        $scope.tab = newTab;\n    };\n\n    $scope.isSet = function (tabNum) {\n        return $scope.tab === tabNum;\n    };\n    //--------------\n    this.getDataset = function (well) {\n        wiApi.getCachedWellPromise(well.idWell).then((well) => {\n            self.datasets[well] = well.datasets;\n        }).catch(e => console.error(e));\n    }\n\n    function getCurvesInWell(well) {\n        let curves = [];\n        well.datasets.forEach(dataset => {\n            curves.push(...dataset.curves);\n        });\n        return curves;\n    }\n    this.getFamilyTable = function () {\n        return wiApi.getFamilyTable();\n    }\n    this.getPals = function () {\n        return wiApi.getPalettes();\n    }\n\n    this.defaultBindings = function () {\n        if (self.token)\n            wiToken.setToken(self.token);\n        self.verticalMargin = 0;\n        self.horizontalMargin = 0;\n        self.pickettAdjusterArray = [];\n        self.allPickettLines = [];\n        self.pickettSets = self.pickettSets || [\n            { rw: 0.03, m: 2, n: 2, a: 1, color: 'blue' },\n        ];\n        self.pickettSets.forEach(pickettSet => {\n            pickettSet._used = false;\n        })\n        if (self.showPickettSetAt !== undefined) self.pickettSets[self.showPickettSetAt]._used = true;\n        self.pickettSets[0]._notHidden = true;\n        self.swParamList = self.swParamList || [{ sw: 1 }, { sw: 0.5 }, { sw: 0.3 }, { sw: 0.2 }];\n        self.pointSize = self.pointSize || 10;\n        self.isSettingChange = true;\n        self.defaultConfig = self.defaultConfig || {};\n        self.showTooltip = self.showTooltip == undefined ? true : self.showTooltip;\n        self.wellSpec = self.wellSpec || [];\n        self.listOverlayLine = self.listOverlayLine || [];\n        self.selectionType = self.selectionType || 'family-group';\n        self.zonationType = self.zonationType || 'zone' // 'zone' | 'interval';\n        self.interval = self.interval ?? (self.wellSpec.length ? {\n            top: Math.min(...self.wellSpec.map(w => Math.min(w.xAxis.datasetTop, w.yAxis.datasetTop))),\n            bottom: Math.max(...self.wellSpec.map(w => Math.max(w.xAxis.datasetBottom, w.yAxis.datasetBottom))),\n        } : {\n            top: -9999,\n            bottom: 9999,\n        });\n        self.zoneTree = [];\n        self.zonesetName = self.zonesetName || \"ZonationAll\";\n        self.config = self.config || {\n            familyX: \"\", familyY: \"\", familyZ1: \"\",\n            familyZ2: \"\", familyZ3: \"\", grid: true, displayMode: 'bar',\n            colorMode: 'zone', stackMode: 'well', binGap: 5, title: self.title || '',\n            rowsNumPropMap: 5, colsNumPropMap: 7, polynomialOrder: 2\n        };\n        /*self.printSettings = self.printSettings || {orientation: 'portrait', aspectRatio: '16:9', alignment: 'left', border: false,\n            width: 210,\n            vMargin: 0,\n            hMargin: 0\n        };*/\n        self.polygons = self.polygons || [];\n        self.polygonExclude = self.polygonExclude || false;\n        self.selectionValueList = self.selectionValueList || self.initSelectionValueList();\n        self.selectionValueList.forEach(s => {\n            setOnChangeFn(s);\n        })\n        self.statisticHeaders = ['X-Axis', 'Y-Axis', 'Z1-Axis', 'Z2-Axis', 'Z3-Axis', 'Filter', 'Points', 'MSE', 'Correlation'];\n        self.statisticHeaderMasks = [true, true, self.getSelectionValue('Z1').isUsed, self.getSelectionValue('Z2').isUsed, self.getSelectionValue('Z3').isUsed, true, true, true, true];\n        self.regressionType = self.regressionType || 'Linear';\n        // regression type list\n        self.regressionTypeList = [{\n            data: { label: 'Linear' },\n            properties: { name: 'Linear' }\n        }, {\n            data: { label: 'Exponential' },\n            properties: { name: 'Exponential' }\n        }, {\n            data: { label: 'Power' },\n            properties: { name: 'Power' }\n        }, {\n            data: { label: 'Polynomial' },\n            properties: { name: 'Polynomial' }\n        }];\n\n        if (self.udlsAssetId) {\n            initUDL();\n        } else {\n            self.udls = [];\n            self.udls.name = 'Untitled';\n        }\n        if (self.overlayLine) {\n            self.overlayLineSpec = { idOverlayLine: self.overlayLine.idOverlayLine, name: self.overlayLine.name };\n        }\n\n        $scope.vPadding = 50;\n        $scope.hPadding = 60;\n        self.paramGroupPointsFn = self.paramGroupPointsFn || function (paramGroup) {\n            return paramGroup.points;\n        }\n        this.getParamGroupX = this.getParamGroupX || function (point) {\n            return point.params[0].value;\n        }\n        this.getParamGroupY = this.getParamGroupY || function (point) {\n            let xAxis = self.getSelectionValueList(\"X\");\n            if (xAxis.family) {\n                let param = point.params.find(param => param.$res.family === xAxis.family);\n                return param.value;\n            }\n            return point.params[1].value;\n        }\n        this.setParamGroupX = this.setParamGroupX || function (point, value) {\n            point.params[0].value = value;\n        }\n        this.setParamGroupY = this.setParamGroupY || function (point, value) {\n            point.params[1].value = value;\n        }\n        self.paramGroups = self.paramGroups || [];\n        //let zoneInfoList = self.paramGroups.map(paramGroup => paramGroup.properties);\n        //wiApi.indexZonesForCorrelation(zoneInfoList);\n\n        self.getPickettSetRw = self.getPickettSetRw || function (pickettSet, index) {\n            return pickettSet.rw || '[empty]';\n        }\n        self.setPickettSetRw = self.setPickettSetRw || function (pickettSet, index, newValue) {\n            pickettSet.rw = newValue;\n        }\n        self.getPickettSetA = self.getPickettSetA || function (pickettSet, index) {\n            return pickettSet.a || '[empty]';\n        }\n        self.setPickettSetA = self.setPickettSetA || function (pickettSet, index, newValue) {\n            pickettSet.a = newValue;\n        }\n        self.getPickettSetM = self.getPickettSetM || function (pickettSet, index) {\n            return pickettSet.m || '[empty]';\n        }\n        self.setPickettSetM = self.setPickettSetM || function (pickettSet, index, newValue) {\n            pickettSet.m = newValue;\n        }\n        self.getPickettSetN = self.getPickettSetN || function (pickettSet, index) {\n            return pickettSet.n || '[empty]';\n        }\n        self.setPickettSetN = self.setPickettSetN || function (pickettSet, index, newValue) {\n            pickettSet.n = newValue;\n        }\n        self.getPickettSetName = self.getPickettSetName || function (pickettSet, index) {\n            return self.pickettSets[index].name || `[empty]`;\n        }\n        self.setPickettSetName = self.setPickettSetName || function (pickettSet, index, newVal) {\n            self.pickettSets[index].name = newVal;\n        }\n        self.getPickettSetColor = self.getPickettSetColor || function (pickettSet, idx) {\n            return pickettSet.color || 'black';\n        }\n        self.xUnitList = self.xUnitList || [];\n        self.yUnitList = self.yUnitList || [];\n    }\n    this.exportStatistic = async function () {\n        const perm = await wiApi.checkObjectPermission('project.export').then(res => res && res.value)\n        if (!perm) return __toastr.warning(\"You don't have permission to export\")\n        if (!self.layers.length) {\n            let msg = `No statistic data to export`;\n            if (__toastr) __toastr.error(msg);\n            console.error(msg);\n            return;\n        }\n        let rowHeaders = self.getZoneNames();\n        let colHeaders = self.getHeaders();\n        let items = [];\n        let headers = {\n            Layer: 'Layer'\n        };\n\n        colHeaders.forEach((cHeader, cHeaderIdx) => {\n            headers[cHeader] = cHeader;\n        })\n        rowHeaders.forEach((rHeader, rHeaderIdx) => {\n            let item = {\n                \"Layer\": rHeader\n            };\n            colHeaders.forEach((cHeader, cHeaderIdx) => {\n                item[cHeader] = self.statsValue([rHeaderIdx, cHeaderIdx]);\n            })\n            items.push(item);\n        });\n        let fileTitle = self.getConfigTitle();\n        utils.exportCSVFile(headers, items, fileTitle);\n    }\n    this.$onInit = function () {\n        self.doInit();\n        self.onInitFn && self.onInitFn(self);\n\n        $timeout(() => {\n            $scope.$watch(() => {\n                return self.getFamilyTable();\n            }, (newVal, oldVal) => {\n                self.familyTable = newVal;\n            })\n            $scope.$watch(() => {\n                return self.getPals();\n            }, (newVal, oldVal) => {\n                self.palTable = newVal;\n            })\n            $scope.$watch(() => self.config, (newVal, oldVal) => {\n                self.isSettingChange = true;\n            }, true);\n            $scope.$watch(() => (self.selectionType), (newVal, oldVal) => {\n                if (newVal === oldVal) return;\n                self.isSettingChange = true;\n                self.selectionValueList.forEach(s => s.value = '');\n                getSelectionList(self.selectionType, self.treeConfig);\n                updateDefaultConfig();\n            });\n            $scope.$watch(() => {\n                return self.wellSpec.map(wsp => {\n                    return `${wsp.xAxis ? wsp.xAxis.idCurve : ''}-\n                        ${wsp.yAxis ? wsp.yAxis.idCurve : ''}-\n                        ${wsp.z1Axis ? wsp.z1Axis.idCurve : ''}-\n                        ${wsp.z2Axis ? wsp.z2Axis.idCurve : ''}-\n                        ${wsp.z3Axis ? wsp.z3Axis.idCurve : ''}`;\n                }).join('');\n            }, () => {\n                self.isSettingChange = true;\n                updateDefaultConfig();\n            }, true);\n            $scope.$watch(() => {\n                return `${JSON.stringify(self.selectionValueList)}`;\n            }, () => {\n                self.isSettingChange = true;\n                self.updateShowZStats();\n                updateDefaultConfig()\n            });\n            $scope.$watch(() => (self.treeConfig.map(w => w.idWell)), () => {\n                self.isSettingChange = true;\n                getSelectionList(self.selectionType, self.treeConfig);\n                getZonesetsFromWells(self.treeConfig);\n                updateDefaultConfig();\n            }, true);\n            $scope.$watch(() => `${self.regressionType}-${JSON.stringify(self.polygons)}`, () => {\n                self.isSettingChange = true;\n                self.updateRegressionLine(self.regressionType, self.polygons);\n            })\n            $scope.$watch('tab', () => {\n                onTabChange();\n            })\n            $scope.$watch(() => {\n                return self.pickettSets.map(pickettSet => `\n                    ${self.getPickettSetRw(pickettSet)}-\n                    ${self.getPickettSetM(pickettSet)}-\n                    ${self.getPickettSetN(pickettSet)}-\n                    ${self.getPickettSetA(pickettSet)}\n                    `).join('');\n            }, () => {\n                self.updatePickettAdjusterArrayDebounce();\n            })\n            $scope.$watch(() => {\n                return self.layers.map(layer => layer._use4PropMap).join('');\n            }, () => {\n                updatePropMap();\n            })\n            $scope.$watch(() => self.zonationType, (val) => {\n                self.isSettingChange = true;\n                if (val === 'interval') {\n                    if (self.wellSpec.length && self.interval.top === -9999 && self.interval.bottom === 9999) {\n                        self.interval.top = Math.min(...self.wellSpec.map(w => Math.min(w.xAxis.datasetTop, w.yAxis.datasetTop)));\n                        self.interval.bottom = Math.max(...self.wellSpec.map(w => Math.max(w.xAxis.datasetBottom, w.yAxis.datasetBottom)));\n                    }\n                }\n            });\n            getTrees(() => {\n                $timeout(() => {\n                    self.genLayers();\n                }, 500);\n            });\n        }, 700);\n\n    }\n    function onTabChange() {\n        if ($scope.tab != 5) {\n            self.polygons.forEach(polygon => {\n                polygon.mode = null;\n            })\n        }\n    }\n    this.showPickettTabCondition = function () {\n        return self.validPlotRegion() && self.conditionForPickettPlot() && self.allPickettLines && !self.notShowPickett;\n    }\n\n    this.sortableUpdate = function () {\n        $scope.$digest();\n    }\n\n    this.eqnOffsetY = function ($index) {\n        return `calc(${$index * 100}% + ${$scope.vPadding}px)`;\n    }\n\n    self.updateShowZStats = function () {\n        let z1Idx = self.statisticHeaders.indexOf('z1Axis');\n        let z2Idx = self.statisticHeaders.indexOf('z2Axis');\n        let z3Idx = self.statisticHeaders.indexOf('z3Axis');\n        self.statisticHeaderMasks[z1Idx] = self.getSelectionValue('Z1').isUsed;\n        self.statisticHeaderMasks[z2Idx] = self.getSelectionValue('Z2').isUsed;\n        self.statisticHeaderMasks[z3Idx] = self.getSelectionValue('Z3').isUsed;\n    }\n    self.statsValue = function ([row, col]) {\n        let statsArray = self.layers;\n        try {\n            switch (_headers[col]) {\n                case 'X-Axis':\n                    return statsArray[row].curveXInfo || 'N/A';\n                case 'Y-Axis':\n                    return statsArray[row].curveYInfo || 'N/A';\n                case 'Z1-Axis':\n                    return statsArray[row].curveZ1Info || 'N/A';\n                case 'Z2-Axis':\n                    return statsArray[row].curveZ2Info || 'N/A';\n                case 'Z3-Axis':\n                    return statsArray[row].curveZ3Info || 'N/A';\n                case 'Filter':\n                    return statsArray[row].conditionExpr || 'N/A';\n                case 'Points':\n                    return statsArray[row].numPoints;\n                case 'MSE':\n                    return statsArray[row].mse || 'N/A'\n                case 'Correlation':\n                    return statsArray[row].correlation;\n                default:\n                    return \"this default\";\n            }\n        } catch {\n            return 'N/A';\n        }\n    }\n    self.getStatsRowIcons = function (rowIdx) {\n        return ['rectangle'];\n    }\n    self.getStatsIconStyle = function (rowIdx) {\n        return {\n            'background-color': self.layers[rowIdx].layerColor\n        }\n    }\n    this.calcMSE = function (a, b) {\n        let error = 0\n        for (let i = 0; i < a.length; i++) {\n            error += Math.pow((b[i] - a[i]), 2)\n        }\n        return error / a.length\n    }\n    this.calcCorrelation = function (x, y) {\n        let xDeviation = deviation(x);\n        let yDeviation = deviation(y);\n        let num = _.sum(xDeviation.map(function (xi, i) {\n            return xi * yDeviation[i];\n        }));\n        let den = Math.sqrt(_.sum(xDeviation.map(function (xi) {\n            return Math.pow(xi, 2);\n        })) * _.sum(yDeviation.map(function (yi) {\n            return Math.pow(yi, 2);\n        })));\n        return (num / den).toFixed(4);\n        function deviation(x) {\n            var xBar, n, d, i;\n            xBar = _.mean(x);\n            n = x.length;\n            d = new Array(n);\n            for (i = 0; i < n; i++) {\n                d[i] = x[i] - xBar;\n            }\n            return d;\n        }\n    }\n\n    this.onSelectionValueListChange = function (axisName) {\n        switch (axisName) {\n            case 'X':\n                delete self.config.left;\n                delete self.config.right;\n                delete self.config.xLabel;\n                delete self.config.logaX;\n                break;\n            case 'Y':\n                delete self.config.top;\n                delete self.config.bottom;\n                delete self.config.yLabel;\n                delete self.config.logaY;\n                break;\n        }\n    }\n    this.initSelectionValueList = () => {\n        let selectionValueList = [{\n            name: 'X',\n            label: 'X Axis',\n            value: '',\n            isUsed: true\n        }, {\n            name: 'Y',\n            label: 'Y Axis',\n            value: '',\n            isUsed: true\n        }, {\n            name: 'Z1',\n            label: 'Z1 Axis',\n            value: ''\n        }, {\n            name: 'Z2',\n            label: 'Z2 Axis',\n            value: ''\n        }, {\n            name: 'Z3',\n            label: 'Z3 Axis',\n            value: ''\n        }]\n        return selectionValueList;\n    }\n    function setOnChangeFn(obj) {\n        if (!obj) return;\n        if (!obj.onChange) {\n            obj.onChange = (function (selectedItemProps) {\n                this.value = (selectedItemProps || {}).name;\n            }).bind(obj);\n        }\n    }\n    this.getSelectionValue = (name) => {\n        if (!self.selectionValueList.length) return '';\n        let selectionValue = self.selectionValueList.find(s => {\n            return s.name == name;\n        })\n        return selectionValue;\n    }\n\n    function getSelectionList(selectionType, wellArray) {\n        let selectionHash = {};\n        let allCurves = [];\n        wellArray.forEach(well => {\n            let curvesInWell = getCurvesInWell(well);\n            allCurves.push(...curvesInWell);\n        });\n        switch (selectionType) {\n            case 'curve':\n                allCurves.forEach(curve => {\n                    selectionHash[curve.name] = 1;\n                })\n                break;\n            case 'family':\n                allCurves.forEach(curve => {\n                    let family = wiApi.getFamily(curve.idFamily);\n                    if (family)\n                        selectionHash[family.name] = 1;\n                })\n                break;\n            case 'family-group':\n                allCurves.forEach(curve => {\n                    let family = wiApi.getFamily(curve.idFamily);\n                    if (family)\n                        selectionHash[family.familyGroup] = 1;\n                })\n                break;\n        }\n        self.selectionList = Object.keys(selectionHash).map(item => ({\n            data: { label: item },\n            properties: { name: item }\n        }));\n        self.selectionList.sort((a, b) => {\n            return a.data.label.localeCompare(b.data.label);\n        })\n    }\n\n    this.getLabel = function (node) {\n        return node.name;\n    }\n    this.getIcon = function (node) {\n        if (node.idCurve) return 'curve-16x16';\n        if (node.idDataset) return 'curve-data-16x16';\n        if (node.idWell) return 'well-16x16';\n    }\n    this.getChildren = function (node) {\n        if (node.idDataset) {\n            return node.curves;\n        }\n        if (node.idWell) {\n            return node.datasets;\n        }\n        return [];\n    }\n    this.clickFunction = clickFunction;\n    function clickFunction($event, node, selectedObjs, treeRoot) {\n        let wellSpec = self.wellSpec.find(wsp => wsp.idWell === treeRoot.idWell && wsp._idx === treeRoot._idx);\n        switch (treeRoot.isSettingAxis) {\n            case 'X':\n                wellSpec.xAxis = {};\n                wellSpec.xAxis.idCurve = node.idCurve;\n                wellSpec.xAxis.idDataset = node.idDataset;\n                break;\n            case 'Y':\n                wellSpec.yAxis = {};\n                wellSpec.yAxis.idCurve = node.idCurve;\n                wellSpec.yAxis.idDataset = node.idDataset;\n                break;\n            case 'Z1':\n                wellSpec.z1Axis = {};\n                wellSpec.z1Axis.idCurve = node.idCurve;\n                wellSpec.z1Axis.idDataset = node.idDataset;\n                break;\n            case 'Z2':\n                wellSpec.z2Axis = {};\n                wellSpec.z2Axis.idCurve = node.idCurve;\n                wellSpec.z2Axis.idDataset = node.idDataset;\n                break;\n            case 'Z3':\n                wellSpec.z3Axis = {};\n                wellSpec.z3Axis.idCurve = node.idCurve;\n                wellSpec.z3Axis.idDataset = node.idDataset;\n                break;\n            default:\n        }\n    }\n    this.refresh = function () {\n        if (self.onReload) {\n            self.onReload(refresh);\n        } else {\n            refresh();\n        }\n        function refresh() {\n            getTrees(() => {\n                getZonesetsFromWells(self.treeConfig);\n                self.genLayers();\n                self.isSettingChange = true;\n            });\n            wiApi.updatePalettes(() => {\n                self.palTable = wiApi.getPalettes();\n                self.wiDropdownCtrl.items = Object.keys(self.palTable).map(palName => ({\n                    data: {\n                        label: palName\n                    },\n                    properties: {\n                        name: palName,\n                        palette: self.palTable[palName]\n                    }\n                }));\n            });\n        }\n    };\n    async function getTree(wellSpec, callback) {\n        let wellIdx = self.treeConfig.findIndex(wellTree => wellTree.idWell === wellSpec.idWell && wellTree._idx === wellSpec._idx);\n        let well = await wiApi.getCachedWellPromise(wellSpec.idWell);\n        wellSpec.name = well.name;\n        well = Object.assign({}, well);\n        well.isSettingAxis = 'X';\n        well._idx = wellSpec._idx;\n        $timeout(() => {\n            self.treeConfig.push(well);\n        })\n        return well;\n    }\n    this.getTrees = getTrees;\n    async function getTrees(callback) {\n        wiLoading.show($element.find('.main')[0], self.silent);\n        self.treeConfig.length = 0;\n        for (let w of self.wellSpec) {\n            try {\n                let well = await wiApi.getCachedWellPromise(w.idWell || w);\n                w.name = well.name;\n                well = Object.assign({}, well);\n                well.isSettingAxis = 'X';\n                well._idx = w._idx;\n                $timeout(() => {\n                    self.treeConfig.push(well);\n                });\n            }\n            catch (e) {\n                w.notFound = true;\n                let msg = `Well ${w.name} not found`;\n                if (__toastr) __toastr.error(msg);\n                console.error(e);\n            }\n        }\n        self.wellSpec = self.wellSpec.filter(wellspec => !wellspec.notFound);\n        //if (self.idCrossplot) {\n        //self.saveToAsset();\n        //}\n        if (!$scope.$root.$$phase) $scope.$digest();\n        callback && callback();\n        wiLoading.hide();\n    }\n    function getZonesetsFromWells(wells) {\n        if (!wells.length) return;\n        let zsList;\n        for (let well of wells) {\n            let zonesets = well.zone_sets;\n            if (!zsList) {\n                zsList = angular.copy(zonesets);\n            }\n            else if (zsList.length) {\n                zsList = intersectAndMerge(zsList, zonesets);\n            }\n            else {\n                break;\n            }\n        }\n        self.zonesetList = (zsList || []).map(zs => ({\n            data: {\n                label: zs.name\n            },\n            properties: zs\n        }));\n        self.zonesetList.splice(0, 0, { data: { label: 'ZonationAll' }, properties: genZonationAllZS(0, 1) });\n        let selectedZonesetProps = (self.zonesetList.find(zs => zs.properties.name === self.zonesetName) || {}).properties;\n        if (!selectedZonesetProps) {\n            selectedZonesetProps = self.zonesetList[0].properties;\n        }\n        self.onZonesetSelectionChanged(selectedZonesetProps, false);\n        if (!$scope.$root.$$phase) $scope.$digest();\n    }\n    function intersectAndMerge(dstZoneList, srcZoneList) {\n        return dstZoneList.filter(zs => {\n            let zoneset = srcZoneList.find(zs1 => zs.name === zs1.name);\n            if (!zoneset) return false;\n            for (let z of zoneset.zones) {\n                let zone = zs.zones.find(zo => zo.zone_template.name == z.zone_template.name);\n                if (!zone) {\n                    zs.zones.push(angular.copy(z));\n                }\n            }\n            return true;\n        });\n    }\n    this.getAxisKey = function (isSettingAxis) {\n        switch (isSettingAxis) {\n            case 'X':\n                return 'xAxis';\n            case 'Y':\n                return 'yAxis';\n            case 'Z1':\n                return 'z1Axis';\n            case 'Z2':\n                return 'z2Axis';\n            case 'Z3':\n                return 'z3Axis';\n            default:\n        }\n    }\n    this.getCurve = getCurve;\n    function getCurve(well, requiredAxis) {\n        let wellSpec = getWellSpec(well);\n        if (!Object.keys(wellSpec).length) return {};\n        let axis = requiredAxis || self.getAxisKey(well.isSettingAxis);\n        let curves = getCurvesInWell(well).filter(c => self.runWellMatch(c, self.getFilterForWell(axis)));\n        let curve = wellSpec[axis] && wellSpec[axis].idCurve ? (curves.find(c => c.idCurve === wellSpec[axis].idCurve) || curves[0]) : curves[0];\n        if (!curve) {\n            wellSpec[axis] = {};\n            return undefined;\n        }\n        if (wellSpec[axis] == undefined) wellSpec[axis] = {};\n        wellSpec[axis].curveName = curve.name;\n        wellSpec[axis].idCurve = curve.idCurve;\n        wellSpec[axis].idDataset = curve.idDataset;\n\n        let datasets = self.getChildren(well);\n        let dataset = wellSpec[axis] && wellSpec[axis].idDataset ? datasets.find(ds => ds.idDataset === wellSpec[axis].idDataset) : datasets[0];\n        wellSpec[axis].datasetName = dataset.name;\n        wellSpec[axis].datasetTop = parseFloat(dataset.top);\n        wellSpec[axis].datasetBottom = parseFloat(dataset.bottom);\n        wellSpec[axis].datasetStep = parseFloat(dataset.step);\n        return curve;\n    }\n    const EMPTY_ARRAY = []\n    this.noChildren = function (node) {\n        return EMPTY_ARRAY;\n    }\n    this.noLabel = function () {\n        return '';\n    }\n\n    // ---CONFIG---\n    this.getConfigLeft = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.left) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.left, 3);\n    }\n    this.getConfigLimitTop = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.limitTop) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.limitTop, 3);\n    }\n    this.getConfigLimitBottom = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.limitBottom) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.limitBottom, 3);\n    }\n    this.setConfigLimitTop = function (notUse, newValue) {\n        self.config.limitTop = parseFloat(newValue)\n    }\n    this.setConfigLimitBottom = function (notUse, newValue) {\n        self.config.limitBottom = parseFloat(newValue)\n    }\n    this.setConfigLeft = function (notUse, newValue) {\n        self.config.left = parseFloat(newValue);\n    }\n    this.getConfigRight = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.right) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.right, 3);\n    }\n    this.setConfigRight = function (notUse, newValue) {\n        self.config.right = parseFloat(newValue);\n    }\n    this.getConfigMajorX = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.majorX) ? \"[empty]\" : self.config.majorX;\n    }\n    this.setConfigMajorX = function (notUse, newValue) {\n        self.config.majorX = parseFloat(newValue);\n    }\n    this.getConfigMajorY = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.majorY) ? \"[empty]\" : self.config.majorY;\n    }\n    this.setConfigMajorY = function (notUse, newValue) {\n        self.config.majorY = parseFloat(newValue);\n    }\n    this.getConfigMinorX = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.minorX) ? \"[empty]\" : self.config.minorX;\n    }\n    this.setConfigMinorX = function (notUse, newValue) {\n        self.config.minorX = parseFloat(newValue);\n    }\n    this.getConfigMinorY = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.minorY) ? \"[empty]\" : self.config.minorY;\n    }\n    this.setConfigMinorY = function (notUse, newValue) {\n        self.config.minorY = parseFloat(newValue);\n    }\n    this.getConfigTop = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.top) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.top, 3);\n    }\n    this.setConfigTop = function (notUse, newValue) {\n        self.config.top = parseFloat(newValue);\n    }\n    this.getConfigBottom = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.bottom) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.bottom, 3);\n    }\n    this.setConfigBottom = function (notUse, newValue) {\n        self.config.bottom = parseFloat(newValue);\n    }\n    this.getConfigTitle = function () {\n        self.config = self.config || {};\n        return (self.config.title || \"\").length ? self.config.title : \"New Crossplot\";\n    }\n    this.setConfigTitle = function (notUse, newValue) {\n        self.config.title = newValue;\n    }\n    this.getConfigXLabel = function () {\n        self.config = self.config || {};\n        return (self.config.xLabel || \"\").length ? self.config.xLabel : ((self.getSelectionValue('X') || {}).value || '[Unknown]');\n    }\n    this.setConfigXLabel = function (notUse, newValue) {\n        self.config.xLabel = newValue;\n    }\n    this.getConfigYLabel = function () {\n        self.config = self.config || {};\n        return (self.config.yLabel || \"\").length ? self.config.yLabel : ((self.getSelectionValue('Y') || {}).value || '[Unknown]');\n    }\n    this.setConfigYLabel = function (notUse, newValue) {\n        self.config.yLabel = newValue;\n    }\n    this.getConfigZ1Label = function () {\n        self.config = self.config || {};\n        return (self.config.z1Label || \"\").length ? self.config.z1Label : ((self.getSelectionValue('Z1') || {}).value || '[Unknown]');\n    }\n    this.setConfigZ1Label = function (notUse, newValue) {\n        self.config.z1Label = newValue;\n    }\n    this.getConfigZ2Label = function () {\n        self.config = self.config || {};\n        return (self.config.z2Label || \"\").length ? self.config.z2Label : ((self.getSelectionValue('Z2') || {}).value || '[Unknown]');\n    }\n    this.setConfigZ2Label = function (notUse, newValue) {\n        self.config.z2Label = newValue;\n    }\n    this.getConfigZ3Label = function () {\n        self.config = self.config || {};\n        return (self.config.z3Label || \"\").length ? self.config.z3Label : ((self.getSelectionValue('Z3') || {}).value || '[Unknown]');\n    }\n    this.setConfigZ3Label = function (notUse, newValue) {\n        self.config.z3Label = newValue;\n    }\n    this.setZ1Min = function (notUse, newValue) {\n        self.config.z1Min = parseFloat(newValue);\n    }\n    this.getConfigZ1Min = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z1Min) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z1Min, 3);\n    }\n    this.setZ1Max = function (notUse, newValue) {\n        self.config.z1Max = parseFloat(newValue);\n    }\n    this.getConfigZ1Max = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z1Max) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z1Max, 3);\n    }\n    this.setZ1N = function (notUse, newValue) {\n        self.config.z1N = parseFloat(newValue);\n    }\n    this.setZ2Min = function (notUse, newValue) {\n        self.config.z2Min = parseFloat(newValue);\n    }\n    this.getConfigZ2Min = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z2Min) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z2Min, 3);\n    }\n    this.setZ2Max = function (notUse, newValue) {\n        self.config.z2Max = parseFloat(newValue);\n    }\n    this.getConfigZ2Max = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z2Max) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z2Max, 3);\n    }\n    this.setZ2N = function (notUse, newValue) {\n        self.config.z2N = parseFloat(newValue);\n    }\n    this.setZ3Min = function (notUse, newValue) {\n        self.config.z3Min = parseFloat(newValue);\n    }\n    this.getConfigZ3Min = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z3Min) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z3Min, 3);\n    }\n    this.setZ3Max = function (notUse, newValue) {\n        self.config.z3Max = parseFloat(newValue);\n    }\n    this.getConfigZ3Max = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.z3Max) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.z3Max, 3);\n    }\n    this.setZ3N = function (notUse, newValue) {\n        self.config.z3N = parseFloat(newValue);\n    }\n    this.getZ1Min = () => (isNaN(self.config.z1Min) ? (isNaN(self.defaultConfig.z1Min) ? '[empty]' : self.defaultConfig.z1Min) : self.config.z1Min)\n    this.getZ1Max = () => (isNaN(self.config.z1Max) ? (isNaN(self.defaultConfig.z1Max) ? '[empty]' : self.defaultConfig.z1Max) : self.config.z1Max)\n    this.getZ1N = () => (isNaN(self.config.z1N) ? (isNaN(self.defaultConfig.z1N) ? '[empty]' : self.defaultConfig.z1N) : self.config.z1N)\n    this.getZ2Min = () => (isNaN(self.config.z2Min) ? (isNaN(self.defaultConfig.z2Min) ? '[empty]' : self.defaultConfig.z2Min) : self.config.z2Min)\n    this.getZ2Max = () => (isNaN(self.config.z2Max) ? (isNaN(self.defaultConfig.z2Max) ? '[empty]' : self.defaultConfig.z2Max) : self.config.z2Max)\n    this.getZ2N = () => (isNaN(self.config.z2N) ? (isNaN(self.defaultConfig.z2N) ? '[empty]' : self.defaultConfig.z2N) : self.config.z2N)\n    this.getZ3Min = () => (isNaN(self.config.z3Min) ? (isNaN(self.defaultConfig.z3Min) ? '[empty]' : self.defaultConfig.z3Min) : self.config.z3Min)\n    this.getZ3Max = () => (isNaN(self.config.z3Max) ? (isNaN(self.defaultConfig.z3Max) ? '[empty]' : self.defaultConfig.z3Max) : self.config.z3Max)\n    this.getZ3N = () => (isNaN(self.config.z3N) ? (isNaN(self.defaultConfig.z3N) ? '[empty]' : self.defaultConfig.z3N) : self.config.z3N)\n    this.getTop = () => (isNaN(self.config.top) ? (self.scaleTop || self.defaultConfig.top || 0) : self.config.top)\n    this.getBottom = () => (isNaN(self.config.bottom) ? (self.scaleBottom || self.defaultConfig.bottom || 0) : self.config.bottom)\n    this.getLeft = () => (isNaN(self.config.left) ? (self.scaleLeft || self.defaultConfig.left || 0) : self.config.left)\n    //this.getRight = () => (isNaN(self.config.right) ? (self.scaleRight || self.defaultConfig.right || 0) : self.config.right)\n    this.getRight = function () {\n        if (isNaN(self.config.right)) {\n            return (self.scaleRight || self.defaultConfig.right || 0);\n        }\n        return self.config.right;\n    }\n    this.getMajorX = () => (isNaN(self.config.majorX) ? (self.defaultConfig.majorX || 5) : self.config.majorX)\n    this.getMajorY = () => (isNaN(self.config.majorY) ? (self.defaultConfig.majorY || 5) : self.config.majorY)\n    this.getMinorX = () => (isNaN(self.config.minorX) ? (self.defaultConfig.minorX || 1) : self.config.minorX)\n    this.getMinorY = () => (isNaN(self.config.minorY) ? (self.defaultConfig.minorY || 1) : self.config.minorY)\n    this.getLogaX = () => (self.config.logaX == undefined ? (self.logaX || self.defaultConfig.logaX || false) : self.config.logaX)\n    this.getLogaY = () => (self.config.logaY == undefined ? (self.logaY || self.defaultConfig.logaY || false) : self.config.logaY)\n    this.getColorMode = () => (self.config.colorMode || self.defaultConfig.colorMode || 'zone')\n    this.getColor = (zone, well, layerIdx) => {\n        let cMode = self.getColorMode();\n        switch (cMode) {\n            case 'zone':\n                return zone.zone_template.background;\n            case 'index':\n                if (!layerIdx) {\n                    return zone.zone_template.background;\n                }\n                let palette = self.palTable.RandomColor || self.palTable.HFU;\n                return utils.palette2RGB(palette[layerIdx % palette.length], false);\n            default:\n                return cMode === 'well' ? utils.getWellColor(well) : 'red';\n        }\n    }\n    this.getFitX = () => self.config.fitX || 'NaN';\n    this.setFitX = (notUse, newVal) => {\n        self.config.fitX = parseFloat(newVal);\n    }\n    this.getFitY = () => self.config.fitY || 'NaN';\n    this.setFitY = (notUse, newVal) => {\n        self.config.fitY = parseFloat(newVal);\n    }\n    this.getPointSize = () => (self.pointSize);\n    this.setPointSize = (notUse, newVal) => {\n        self.isSettingChange = true;\n        self.pointSize = parseFloat(newVal);\n    }\n    this.getPolynomialOrder = () => (self.config.polynomialOrder || 2);\n    this.setPolynomialOrder = (notUse, newVal) => {\n        self.isSettingChange = true;\n        self.config.polynomialOrder = parseFloat(newVal);\n    }\n    this.getIntervalTop = () => self.interval.top;\n    this.setIntervalTop = (_, v) => {\n        const n = +v;\n        self.interval.top = isFinite(n) ? n : v;\n        self.isSettingChange = true;\n    }\n    this.getIntervalBottom = () => self.interval.bottom;\n    this.setIntervalBottom = (_, v) => {\n        const n = +v;\n        self.interval.bottom = isFinite(n) ? n : v;\n        self.isSettingChange = true;\n    }\n    // ---DEFAULT CONFIG\n    function clearDefaultConfig() {\n        self.defaultConfig = {};\n    }\n    function updateDefaultConfig() {\n        clearDefaultConfig();\n        self.selectionValueList.forEach(s => {\n            if (s.isUsed) {\n                setDefaultConfig(self.getAxisKey(s.name), 0);\n            }\n        })\n\n        //overlay line---------------------------------------------------\n        if (self.treeConfig.length) {\n            let well = self.treeConfig[0];\n            let curveX = self.getCurve(well, 'xAxis');\n            let curveY = self.getCurve(well, 'yAxis');\n            if (curveX && curveY && curveX.idCurve && curveY.idCurve) {\n                wiApi.getOverlayLinesPromise(curveX.idCurve, curveY.idCurve).then((data) => {\n                    $timeout(() => {\n                        self.listOverlayLine = data;\n                        if (self.overlayLineSpec && (self.overlayLineSpec.idOverlayLine || self.overlayLineSpec.name)) {\n                            let showedOvl = self.listOverlayLine.find(ovl => ovl.idOverlayLine === self.overlayLineSpec.idOverlayLine ||\n                                self.overlayLineSpec.name === ovl.name);\n                            if (showedOvl) {\n                                clickOvlFunction(null, showedOvl);\n                            } else {\n                                self.overlayLineSpec = undefined;\n                            }\n                        }\n                    })\n                }).catch((err) => {\n                    console.error(err);\n                })\n            }\n        }\n        //END overlay line---------------------------------------------------\n\n        async function updateUnitList(axis, idFamily, idCurve) {\n            let list = await wiApi.getListUnit({\n                idFamily: idFamily,\n                idCurve: idCurve\n            })\n            list = list.map(item => ({\n                data: { label: item.name },\n                properties: { name: item.name }\n            }))\n            switch (axis) {\n                case 'xAxis':\n                    self.xUnitList = list;\n                    break;\n                case 'yAxis':\n                    self.yUnitList = list;\n                    break;\n                case 'z1Axis':\n                    self.z1UnitList = list;\n                    break;\n                case 'z2Axis':\n                    self.z2UnitList = list;\n                    break;\n                case 'z3Axis':\n                    self.z3UnitList = list;\n                    break;\n            }\n        }\n        function setDefaultConfig(axis, index) {\n            if (index >= self.treeConfig.length) return;\n            let curve = getCurve(self.treeConfig[index], axis);\n            if (!curve) {\n                setDefaultConfig(axis, index + 1);\n            } else {\n                let family = wiApi.getFamily(curve.idFamily);\n                if (!family) return;\n                updateUnitList(axis, family.idFamily, curve.idCurve);\n                switch (axis) {\n                    case 'xAxis':\n                        self.defaultConfig.xLabel = self.getSelectionValue('X').value;\n                        self.defaultConfig.left = family.family_spec[0].minScale;\n                        self.defaultConfig.right = family.family_spec[0].maxScale;\n                        self.defaultConfig.logaX = family.family_spec[0].displayType.toLowerCase() === 'logarithmic';\n                        self.defaultConfig.xUnit = family.family_spec[0].unit;\n                        if (family.idFamily != self.config.xIdFamily) {\n                            self.config.xIdFamily = family.idFamily;\n                            delete self.config.xUnit;\n                            delete self.config.left;\n                            delete self.config.right;\n                            delete self.config.logaX;\n                        }\n                        break;\n                    case 'yAxis':\n                        self.defaultConfig.yLabel = self.getSelectionValue('Y').value;\n                        self.defaultConfig.top = family.family_spec[0].maxScale;\n                        self.defaultConfig.bottom = family.family_spec[0].minScale;\n                        self.defaultConfig.logaY = family.family_spec[0].displayType.toLowerCase() === 'logarithmic';\n                        self.defaultConfig.yUnit = family.family_spec[0].unit;\n                        if (family.idFamily != self.config.yIdFamily) {\n                            self.config.yIdFamily = family.idFamily;\n                            delete self.config.yUnit;\n                            delete self.config.top;\n                            delete self.config.bottom;\n                            delete self.config.logaY;\n                        }\n                        break;\n                    case 'z1Axis':\n                        self.defaultConfig.z1Max = family.family_spec[0].maxScale || 100;\n                        self.defaultConfig.z1Min = family.family_spec[0].minScale || 0;\n                        self.defaultConfig.z1Unit = family.family_spec[0].unit;\n                        self.defaultConfig.z1N = 5;\n                        if (family.idFamily != self.config.z1IdFamily) {\n                            self.config.z1IdFamily = family.idFamily;\n                            delete self.config.z1Unit;\n                            delete self.config.z1Max;\n                            delete self.config.z1Min;\n                            delete self.config.z1N;\n                        }\n                        break;\n                    case 'z2Axis':\n                        self.defaultConfig.z2Max = family.family_spec[0].maxScale || 100;\n                        self.defaultConfig.z2Min = family.family_spec[0].minScale || 0;\n                        self.defaultConfig.z2N = 5;\n                        self.defaultConfig.z2Unit = family.family_spec[0].unit;\n                        if (family.idFamily != self.config.z2IdFamily) {\n                            self.config.z2IdFamily = family.idFamily;\n                            delete self.config.z2Unit;\n                            delete self.config.z2Max;\n                            delete self.config.z2Min;\n                            delete self.config.z2N;\n                        }\n                        break;\n                    case 'z3Axis':\n                        self.defaultConfig.z3Max = family.family_spec[0].maxScale || 100;\n                        self.defaultConfig.z3Min = family.family_spec[0].minScale || 0;\n                        self.defaultConfig.z3Unit = family.family_spec[0].unit;\n                        self.defaultConfig.z3N = 5;\n                        if (family.idFamily != self.config.z3IdFamily) {\n                            self.config.z3IdFamily = family.idFamily;\n                            delete self.config.z3Unit;\n                            delete self.config.z3Max;\n                            delete self.config.z3Min;\n                            delete self.config.z3N;\n                        }\n                        break;\n                    default:\n                }\n            }\n        }\n    }\n\n    this.onXUnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.xUnit;\n        self.config.xUnit = (selectedItemProps || {}).name;\n        self.config.left = wiApi.convertUnit(self.getLeft(), oldUnit, self.config.xUnit);\n        self.config.left = parseFloat(wiApi.bestNumberFormat(self.config.left), 4)\n        self.config.right = wiApi.convertUnit(self.getRight(), oldUnit, self.config.xUnit);\n        self.config.right = parseFloat(wiApi.bestNumberFormat(self.config.right), 4)\n    }\n\n    this.onYUnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.yUnit;\n        self.config.yUnit = (selectedItemProps || {}).name;\n        self.config.top = wiApi.convertUnit(self.getTop(), oldUnit, self.config.yUnit);\n        self.config.top = parseFloat(wiApi.bestNumberFormat(self.config.top), 4)\n        self.config.bottom = wiApi.convertUnit(self.getBottom(), oldUnit, self.config.yUnit);\n        self.config.bottom = parseFloat(wiApi.bestNumberFormat(self.config.bottom), 4)\n    }\n\n    this.onZ1UnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.z1Unit;\n        self.config.z1Unit = (selectedItemProps || {}).name;\n        self.config.z1Min = wiApi.convertUnit(self.getZ1Min(), oldUnit, self.config.z1Unit);\n        self.config.z1Min = parseFloat(wiApi.bestNumberFormat(self.config.z1Min), 4)\n        self.config.z1Max = wiApi.convertUnit(self.getZ1Max(), oldUnit, self.config.z1Unit);\n        self.config.z1Max = parseFloat(wiApi.bestNumberFormat(self.config.z1Max), 4)\n    }\n\n    this.onZ2UnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.z2Unit;\n        self.config.z2Unit = (selectedItemProps || {}).name;\n        self.config.z2Min = wiApi.convertUnit(self.getZ2Min(), oldUnit, self.config.z2Unit);\n        self.config.z2Min = parseFloat(wiApi.bestNumberFormat(self.config.z2Min), 4)\n        self.config.z2Max = wiApi.convertUnit(self.getZ2Max(), oldUnit, self.config.z2Unit);\n        self.config.z2Max = parseFloat(wiApi.bestNumberFormat(self.config.z2Max), 4)\n    }\n\n    this.onZ3UnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.z3Unit;\n        self.config.z3Unit = (selectedItemProps || {}).name;\n        self.config.z3Min = wiApi.convertUnit(self.getZ3Min(), oldUnit, self.config.z3Unit);\n        self.config.z3Min = parseFloat(wiApi.bestNumberFormat(self.config.z3Min), 4)\n        self.config.z3Max = wiApi.convertUnit(self.getZ3Max(), oldUnit, self.config.z3Unit);\n        self.config.z3Max = parseFloat(wiApi.bestNumberFormat(self.config.z3Max), 4)\n    }\n\n    function genZonationAllZS(top, bottom, color = 'blue', name = 'ZonationAll') {\n        return {\n            name,\n            zones: [{\n                startDepth: top,\n                endDepth: bottom,\n                zone_template: {\n                    name,\n                    background: color\n                }\n            }]\n        }\n    }\n\n    function filterData(curveData, zone) {\n        return curveData.filter(d => ((zone.startDepth - d.depth) * (zone.endDepth - d.depth) <= 0));\n    }\n\n    // ---ASSET\n    this.saveToAsset = function (close) {\n        let type = 'CROSSPLOT';\n        let content = {\n            wellSpec: self.wellSpec,\n            zonesetName: self.zonesetName,\n            selectionType: self.selectionType,\n            selectionValueList: self.selectionValueList,\n            polygons: self.polygons,\n            polygonExclude: self.polygonExclude,\n            regressionType: self.regressionType,\n            config: self.config,\n            pointSize: self.pointSize,\n            udlsAssetId: self.udlsAssetId,\n            pickettSets: self.pickettSets,\n            swParamList: self.swParamList,\n            showTooltip: self.showTooltip,\n            zonationType: self.zonationType,\n        }\n        if (self.overlayLineSpec) {\n            content.overlayLine = {\n                idOverlayLine: self.overlayLineSpec.idOverlayLine,\n                name: self.overlayLineSpec.name\n            };\n        }\n        if (!self.idCrossplot) {\n            wiDialog.promptDialog({\n                title: 'New Crossplot',\n                inputName: 'Crossplot Name',\n                input: self.getConfigTitle(),\n            }, function (name) {\n                wiLoading.show($element.find('.main')[0], self.silent);\n                wiApi.newAssetPromise(self.idProject, name, type, content)\n                    .then(res => {\n                        self.idCrossplot = res.idParameterSet;\n                        wiLoading.hide();\n                        close && close();\n                        self.onSave && self.onSave(res);\n                        __toastr && __toastr.success('Successfully saved Crossplot ' + name)\n                        self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n                    })\n                    .catch(e => {\n                        wiLoading.hide();\n                        if (!e.message.includes('exist')) return\n                        let msg = `Asset ${name} has been existed`;\n                        if (__toastr) __toastr.error(msg);\n                        self.saveToAsset();\n                    })\n            });\n        } else {\n            wiLoading.show($element.find('.main')[0], self.silent);\n            content.idParameterSet = self.idParameterSet;\n            wiApi.editAssetPromise(self.idCrossplot, content).then(res => {\n                wiLoading.hide();\n                __toastr && __toastr.success('Successfully saved Crossplot ' + res.name)\n                close && close();\n                self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n            })\n                .catch(e => {\n                    wiLoading.hide();\n                });\n        }\n    }\n    this.saveAs = function () {\n        wiDialog.promptDialog({\n            title: 'Save As Crossplot',\n            inputName: 'Crossplot Name',\n            input: '',\n        }, function (name) {\n            let type = 'CROSSPLOT';\n            let content = {\n                wellSpec: self.wellSpec,\n                zonesetName: self.zonesetName,\n                selectionType: self.selectionType,\n                selectionValueList: self.selectionValueList,\n                polygons: self.polygons,\n                polygonExclude: self.polygonExclude,\n                regressionType: self.regressionType,\n                config: self.config,\n                pointSize: self.pointSize,\n                udlsAssetId: self.udlsAssetId,\n                pickettSets: self.pickettSets,\n                swParamList: self.swParamList,\n                showTooltip: self.showTooltip,\n                zonationType: self.zonationType,\n            }\n            if (self.overlayLineSpec) {\n                content.overlayLine = {\n                    idOverlayLine: self.overlayLineSpec.idOverlayLine,\n                    name: self.overlayLineSpec.name\n                };\n            }\n            wiApi.newAssetPromise(self.idProject, name, type, content)\n                .then(res => {\n                    self.onSaveAs && self.onSaveAs(res);\n                    __toastr && __toastr.success('Successfully saved Crossplot ' + name)\n                    self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n                })\n                .catch(e => {\n                    if (!e.message.includes('exist')) return\n                    let msg = `Asset ${name} has been existed`;\n                    if (__toastr) __toastr.error(msg);\n                    self.saveAs();\n                })\n        });\n    }\n\n    // ---ZONE\n    let _zoneNames = []\n    self.getZoneNames = function () {\n        _zoneNames.length = 0;\n        Object.assign(_zoneNames, self.layers.map(bins => bins.name));\n        return _zoneNames;\n    }\n    this.isLayerUsed = function ($index) {\n        return !self.layers[$index]._notUsed;\n    }\n    let _headers = [];\n    self.getHeaders = function () {\n        _headers.length = 0;\n        Object.assign(_headers, self.statisticHeaders.filter((item, idx) => self.statisticHeaderMasks[idx]));\n        return _headers;\n    }\n    this.hideSelectedZone = function () {\n        if (!self.selectedZones) return;\n        self.selectedZones.forEach(node => {\n            node._notUsed = true;\n            node.$meta.render = !node.$meta.render;\n        });\n        $timeout(() => {\n            self.onUseZoneChange(self.selectedZones);\n        });\n        $scope.$digest();\n    }\n    this.showSelectedZone = function () {\n        if (!self.selectedZones) return;\n        self.selectedZones.forEach(node => {\n            node._notUsed = false;\n            node.$meta.render = !node.$meta.render;\n        });\n        $timeout(() => {\n            self.onUseZoneChange(self.selectedZones);\n        });\n        $scope.$digest();\n    }\n    this.hideAllZone = function () {\n        self.zoneTreeUniq.forEach(node => {\n            node._notUsed = true;\n            node.$meta.render = !node.$meta.render;\n        });\n        $timeout(() => {\n            self.layers.length = 0;\n        });\n    }\n    this.showAllZone = function () {\n        self.zoneTreeUniq.forEach(node => {\n            node._notUsed = false\n            node.$meta.render = !node.$meta.render;\n        });\n        $timeout(() => {\n            self.isSettingChange = true;\n            self.genLayers();\n        });\n    }\n    self._hiddenZone = [];\n    this.getHiddenZone = function () {\n        return self._hiddenZone;\n    }\n    this.getZoneIcon = (node) => ((node && !node._notUsed) ? 'zone-16x16' : 'fa fa-eye-slash')\n    this._notUsedLayer = [];\n    this.click2ToggleZone = function ($event, node, selectedObjs) {\n        self.isSettingChange = true;\n        node._notUsed = !node._notUsed;\n        node.$meta.render = !node.$meta.render;\n        //self.onUseZoneChange([node]);\n        self.selectedZones = selectedObjs;\n        $scope.$digest();\n    }\n    this.onUseZoneChange = (zones) => {\n        switch (self.getColorMode()) {\n            case 'zone':\n                zones.forEach(zone => {\n                    if (zone._notUsed) {\n                        let layers = self.layers.filter(layer => {\n                            return layer.zone == `${zone.name}`;\n                        })\n                        layers.forEach(layer => {\n                            self._notUsedLayer.push(layer);\n                            self.layers.splice(self.layers.indexOf(layer), 1);\n                        })\n                    } else {\n                        let layers = self._notUsedLayer.filter(layer => {\n                            return layer.zone == `${zone.name}`;\n                        })\n                        self.layers = self.layers.concat(layers);\n                        self._notUsedLayer = self._notUsedLayer.filter(layer => {\n                            return layer.zone != `${zone.name}`;\n                        })\n                    }\n                })\n                break;\n            case 'well':\n                self.genLayers();\n                break;\n        }\n    }\n    function getZoneset(well, zonesetName = \"\") {\n        let zonesets = well.zone_sets;\n        if (zonesetName === \"\" || zonesetName === \"ZonationAll\")\n            return null;\n        return zonesets.find(zs => zs.name === zonesetName);\n    }\n    this.onZonesetSelectionChanged = function (selectedItemProps, putLog = true) {\n        self.isSettingChange = true;\n        wiApi.indexZonesForCorrelation((selectedItemProps || {}).zones)\n        self.zoneTree = (selectedItemProps || {}).zones;\n        self.zoneTreeUniq = _.uniqBy(self.zoneTree.map(zone => ({ name: zone.zone_template.name })), zone => {\n            return zone.name;\n        });\n        self.zonesetName = (selectedItemProps || {}).name || 'ZonationAll';\n        if (putLog) self.addLog('success', `Change zoneset`)\n    }\n    this.runZoneMatch = function (node, criteria) {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = node.name.toLowerCase();\n        return searchArray.includes(keySearch);\n    }\n    this.getZoneLabel = function (node) {\n        if (!node) {\n            return 'aaa';\n        }\n        return `${node.name}`;\n    }\n    // ---PARAMETER GROUP\n    this.getParamGroupLabel = (node) => (node.properties.zone_template.name || \"N/A\")\n    this.getParamGroupIcon = (node) => ((node && !node._notShow) ? 'parameter-management-16x16' : 'fa fa-eye-slash')\n    this.runParamGroupMatch = (node, criteria) => {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = self.getParamGroupLabel(node).toLowerCase();\n        return searchArray.includes(keySearch);\n    };\n    this.click2ToggleParamGroup = function ($event, node, selectedObjs) {\n        node._notShow = !node._notShow;\n        self.selectedParamGroup = Object.values(selectedObjs).map(o => o.data);\n        $scope.$digest();\n    }\n    this.showAllParamGroup = function () {\n        self.paramGroups.forEach(param => {\n            param._notShow = false;\n        })\n    }\n    this.hideAllParamGroup = function () {\n        self.paramGroups.forEach(param => {\n            param._notShow = true;\n        })\n    }\n    this.showSelectedParamGroup = function () {\n        if (!self.selectedParamGroup || !self.selectedParamGroup.length) return;\n        self.selectedParamGroup.forEach(param => {\n            param._notShow = false;\n        })\n    }\n    this.hideSelectedParamGroup = function () {\n        if (!self.selectedParamGroup || !self.selectedParamGroup.length) return;\n        self.selectedParamGroup.forEach(param => {\n            param._notShow = true;\n        })\n    }\n\n    // ---WELL\n    this.getWellSpec = getWellSpec;\n    function getWellSpec(well) {\n        if (!well) return {};\n        return self.wellSpec.find(wsp => wsp.idWell === well.idWell && well._idx === wsp._idx);\n    }\n    this.onDrop = function (event, helper, myData) {\n        let idWells = helper.data('idWells');\n        if (idWells && idWells.length) {\n            $timeout(() => {\n                async.eachSeries(idWells, (idWell, next) => {\n                    wiApi.getCachedWellPromise(idWell)\n                        .then((well) => {\n                            let zonesets = well.zone_sets;\n                            let hasZonesetName = self.zonesetName != 'ZonationAll' ? zonesets.some(zs => zs.name == self.zonesetName) : true;\n                            $timeout(() => {\n                                if (hasZonesetName) {\n                                    let _idx = _.max(self.wellSpec.filter(ws => ws.idWell === idWell).map(ws => ws._idx));\n                                    _idx = (_idx >= 0 ? _idx : -1) + 1;\n                                    self.wellSpec.push({ idWell, _idx });\n                                    self.addLog('success', `Add well ${well.name}`)\n                                    let wellTree = getTree(self.wellSpec[self.wellSpec.length - 1]);\n                                    let curveX = getCurve({ ...well, _idx }, 'xAxis');\n                                    let curveY = getCurve({ ...well, _idx }, 'yAxis');\n                                    if ((self.getSelectionValue('X').value && !curveX) || (self.getSelectionValue('Y').value && !curveY)) {\n                                        let msg = `Well ${well.name} does not meet requirement`;\n                                        if (__toastr) __toastr.warning(msg);\n                                        console.warn(msg);\n                                    }\n                                } else {\n                                    let msg = `Well ${well.name} does not meet input Zone ${self.zonesetName}`;\n                                    if (__toastr) __toastr.error(msg);\n                                    console.error(new Error(msg));\n                                }\n                                next();\n                            })\n                        })\n                        .catch(e => {\n                            console.error(e);\n                            next();\n                        });\n                }, err => {\n                    if (err) {\n                        console.error(err);\n                    }\n                })\n            })\n        }\n    }\n\n    this.getOvlLabel = function (node) {\n        return node.name;\n    }\n    this.getOvlIcon = function (node) {\n        return (node && !node._used) ? 'fa fa-eye-slash' : 'blue-color fa fa-eye';\n    }\n    this.getOvlChildren = function (node) {\n        return [];\n    }\n    this.runOvlMatch = function (node, keysearch) {\n        return node.name.toLowerCase().includes(keysearch.toLowerCase());\n    }\n    this.clickOvlFunction = clickOvlFunction;\n    function clickOvlFunction(event, node) {\n        let _used = node._used;\n        self.listOverlayLine.forEach((item) => {\n            item._used = false;\n        });\n        if (!_used) {\n            node._used = true;\n\n            let idCurveX = self.wellSpec[0].xAxis.idCurve;\n            let idCurveY = self.wellSpec[0].yAxis.idCurve;\n            wiApi.getOverlayLinePromise(node.idOverlayLine, idCurveX, idCurveY).then((ovlProps) => {\n                $timeout(() => {\n                    self.addLog('success', `Change Overlayline`)\n                    let isSwap = ovlProps.data.isSwap;\n                    self.overlayLineSpec = ovlProps.data;\n                    self.overlayLineSpec.idOverlayLine = ovlProps.idOverlayLine;\n                    self.overlayLineSpec.name = ovlProps.name;\n                    if (isSwap) {\n                        reverseOverlayLine();\n                    }\n                })\n            }).catch((err) => {\n                console.error(err);\n            })\n        } else {\n            self.overlayLineSpec = undefined;\n        }\n    }\n    this.toggleWell = function (well) {\n        self.isSettingChange = true;\n        well._notUsed = !well._notUsed;\n        let layers = self.layers.filter(layer => layer.well === `${well.name}:${well._idx}`);\n        layers.forEach(layer => {\n            layer._notUsed = well._notUsed;\n        })\n    }\n    this.removeWell = function (well) {\n        let index = self.wellSpec.findIndex(wsp => wsp.idWell === well.idWell && wsp._idx === well._idx);\n        if (index >= 0) {\n            self.wellSpec.splice(index, 1);\n            self.addLog('success', `Delete well ${well.name}`)\n            let wellTreeIdx = self.treeConfig.findIndex(wTI => wTI.idWell === well.idWell && wTI._idx === well._idx);\n            self.treeConfig.splice(wellTreeIdx, 1);\n        }\n    }\n    this.getFilterForWell = (axis) => {\n        switch (axis) {\n            case 'xAxis':\n                return self.getSelectionValue('X').value;\n            case 'yAxis':\n                return self.getSelectionValue('Y').value;\n            case 'z1Axis':\n                return self.getSelectionValue('Z1').value;\n            case 'z2Axis':\n                return self.getSelectionValue('Z2').value;\n            case 'z3Axis':\n                return self.getSelectionValue('Z3').value;\n            default:\n        }\n    }\n    this.runWellMatch = function (node, criteria) {\n        let family;\n        if (!criteria) return true;\n        switch (self.selectionType) {\n            case 'family-group':\n                family = wiApi.getFamily(node.idFamily);\n                if (!family) return null;\n                return family.familyGroup.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n            case 'family':\n                family = wiApi.getFamily(node.idFamily);\n                if (!family) return null;\n                return family.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n            case 'curve':\n                return node.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n        }\n    }\n\n    // ---POLYGON---\n    this.currentPolygon = {};\n    this.addPolygon = function () {\n        if (self.polygons.length >= _POLYGON_LIMIT) {\n            let msg = \"Too many polygons\";\n            if (__toastr) __toastr.error(msg);\n            console.error(new Error(msg));\n            return;\n        }\n        self.isSettingChange = true;\n        let polygon = {};\n        polygon.label = 'New polygon';\n        polygon.mode = 'edit';\n        polygon._notUsed = false;\n        polygon._notShow = false;\n        polygon.exclude = true;\n        polygon.points = [];\n        polygon.lineStyle = {\n            fillStyle: colorGenerator(null, true),\n            strokeStyle: '',\n            strokeWidth: '2'\n        }\n        polygon.contentStyle = { flex: 1, float: 'none', 'text-align': 'left', color: polygon.lineStyle.fillStyle.replace(/\\d+\\.?\\d*\\s*\\)$/g, '1)') }\n        Object.assign(self.currentPolygon, polygon);\n        self.polygons.forEach(p => {\n            p.mode = null;\n        })\n        self.polygons.push(polygon);\n        self.addLog('success', `Change Polygon`)\n    }\n    this.removePolygon = ($index) => {\n        self.polygons.splice($index, 1);\n        self.addLog('success', `Change Polygon`)\n    }\n    this.filterByPolygons = function (polygons, data, exclude) {\n        let ppoints = polygons.map(function (p) {\n            return p.points.map(function (point) {\n                let x = point.x;\n                let y = point.y;\n                return [x, y];\n            });\n        });\n        if (exclude) {\n            return data.filter(function (d) {\n                let pass = exclude ? false : true;\n                for (let p of ppoints)\n                    if (d3.polygonContains(p, d))\n                        return pass;\n                return !pass;\n            });\n        } else {\n            let resultData = [];\n            for (let d of data) {\n                for (let p of ppoints) {\n                    if (d3.polygonContains(p, d)) {\n                        resultData.push(d);\n                    }\n                }\n            }\n            return resultData;\n        }\n    }\n    this.setPolygonLabel = function ($index, newLabel) {\n        self.polygons[$index].label = newLabel;\n        self.polygons[$index].lineStyle.fillStyle = colorGenerator(newLabel, true);\n        self.polygons[$index].contentStyle.color = self.polygons[$index].lineStyle.fillStyle.replace(/\\d+\\.?\\d*\\s*\\)$/g, '1)');\n    }\n\n    this.polygonContentStyle = (polygon) => {\n        return polygon.contentStyle;\n    }\n    this.polygonFillStyle = polygon => polygon.lineStyle.fillStyle\n    this.polygonStrokeStyle = polygon => polygon.lineStyle.strokeStyle\n    this.polygonStrokeWidth = polygon => polygon.lineStyle.strokeWidth\n\n    this.toggleEditPolygon = function (polygon) {\n        let idx = self.polygons.indexOf(polygon);\n        self.polygons.forEach((p, i) => {\n            if (i != idx) p.mode = null;\n        })\n        if (polygon.mode == 'edit') {\n            polygon.mode = null;\n        } else {\n            polygon._notShow = false;\n            polygon.mode = 'edit';\n        }\n    }\n\n    // ---UDL\n    this.addUDL = function () {\n        if (!self.wellSpec || !self.wellSpec.length) return;\n        let udl = {};\n        udl.text = \"\";\n        setUDLFn(udl);\n        udl.latex = normalizeFormation(udl.text);\n        udl.lineStyle = {\n            lineColor: colorGenerator(),\n            lineWidth: 1,\n            lineStyle: [10, 0]\n        };\n        udl.index = self.udls.length;\n        udl.displayEquation = true;\n        let udlExisted = self.udls.find(udlI => udlI.text === udl.text);\n        if (!udlExisted) {\n            self.udls.push(udl);\n        }\n    }\n    function normalizeFormation(text) {\n        return text.replace(/\\+-/g, '-').replace(/--/g, '+');\n    }\n    function setUDLFn(udl) {\n        udl.fn = (function (x) {\n            return eval(this.text);\n        }).bind(udl);\n    }\n    function setParamForPickettLine(index, paramName, value) {\n        let pickettLines = self.allPickettLines.filter(pickettLine => pickettLine.pickettSetIdx == index);\n        pickettLines.forEach(pickettLine => {\n            pickettLine[paramName] = value;\n        })\n    }\n\n\n    this.getRwParam = function (index) {\n        return self.getPickettSetRw(self.pickettSets[index], index);\n    }\n    this.setRwParam = function (index, newValue) {\n        self.setPickettSetRw(self.pickettSets[index], index, newValue);\n        setParamForPickettLine(index, 'rw', newValue)\n    }\n    this.getAParam = function (index) {\n        return self.getPickettSetA(self.pickettSets[index], index);\n    }\n    this.setAParam = function (index, newValue) {\n        self.setPickettSetA(self.pickettSets[index], index, newValue);\n        setParamForPickettLine(index, 'a', newValue)\n    }\n    this.getMParam = function (index) {\n        return self.getPickettSetM(self.pickettSets[index], index);\n    }\n    this.setMParam = function (index, newValue) {\n        self.setPickettSetM(self.pickettSets[index], index, newValue);\n        setParamForPickettLine(index, 'm', newValue)\n    }\n    this.getNParam = function (index) {\n        return self.getPickettSetN(self.pickettSets[index], index);\n    }\n    this.setNParam = function (index, newValue) {\n        self.setPickettSetN(self.pickettSets[index], index, newValue);\n        setParamForPickettLine(index, 'n', newValue)\n    }\n    this.getSwParam = function (index) {\n        return self.swParamList[index].sw || '[empty]';\n    }\n    this.setSwParam = function (index, newValue) {\n        self.swParamList[index].sw = parseFloat(newValue);\n        let pickettLines = self.allPickettLines.filter(pickettLine => pickettLine.swParamIdx == index);\n        pickettLines.forEach(pickettLine => {\n            pickettLine.sw = parseFloat(newValue);\n            pickettLine.label = `${self.pickettSets[pickettLine.pickettSetIdx].name}, Sw = ${newValue}`;\n        })\n    }\n    this.pickettSetName = function (index) {\n        return self.getPickettSetName(self.pickettSets[index], index);\n        //return self.pickettSets[index].name || `[empty]`;\n    }\n    this.changePickettSetName = function (index, newVal) {\n        self.setPickettSetName(self.pickettSets[index], index, newVal);\n        let pickettLines = self.allPickettLines.filter(pickettLine => pickettLine.pickettSetIdx == index);\n        pickettLines.forEach(pickettLine => {\n            pickettLine.label = `${newVal}, Sw = ${pickettLine.sw}`;\n        })\n    }\n    this.toggleShowPickettSet = function (index) {\n        self.pickettSets[index]._notHidden = !self.pickettSets[index]._notHidden;\n        self.pickettSets.forEach((pickettSet, pickettSetIdx) => {\n            if (pickettSetIdx != index) {\n                pickettSet._notHidden = false;\n            }\n        })\n    }\n    this.getFnUDL = function (index) {\n        return (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n    }\n    this.setFnUDL = function (index, newValue) {\n        let udlExisted = self.udls.find((udlI, udlIdx) => udlI.text == newValue && udlIdx != index);\n        if (!udlExisted) {\n            self.udls[index].text = newValue;\n            self.udls[index].latex = normalizeFormation(`y = ${newValue}`);\n            setUDLFn(self.udls[index]);\n        } else {\n            let msg = `User Defined Line 'y = ${newValue}' has been existed`;\n            if (__toastr) __toastr.error(msg);\n        }\n    }\n    this.getLineStyleUDL = function (index) {\n        return (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n    }\n    this.setLineStyleUDL = function (index, newValue) {\n        self.udls[index].text = newValue;\n    }\n    this.getLineWidthUDL = function (index) {\n        return (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n    }\n    this.setLineWidthUDL = function (index, newValue) {\n        self.udls[index].text = newValue;\n    }\n    this.getLineColorUDL = function (index) {\n        return (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n    }\n    this.setLineColorUDL = function (index, newValue) {\n        self.udls[index].text = newValue;\n    }\n    this.removeUDL = ($index) => {\n        self.udls.splice($index, 1);\n    }\n\n    // ---LAYER\n    this.layers = [];\n    this.genLayers = async function () {\n        if (!self.isSettingChange) return;\n        if (!self.getSelectionValue('X').value || !self.getSelectionValue('Y').value) return;\n        if (!self.getConfigXLabel() || !self.getConfigYLabel()) return;\n        self.isSettingChange = false;\n        self.layers = self.layers || [];\n        let layers = [];\n        let _notUsedLayer = [];\n        let shouldPlotZ1 = self.getSelectionValue('Z1').isUsed;\n        let shouldPlotZ2 = self.getSelectionValue('Z2').isUsed;\n        let shouldPlotZ3 = self.getSelectionValue('Z3').isUsed;\n        wiLoading.show($element.find('.main')[0], self.silent);\n        try {\n            for (let i = 0; i < self.treeConfig.length; i++) {\n                let well = self.treeConfig[i];\n                if (well._notUsed) {\n                    continue;\n                }\n                let curveX = self.getCurve(well, 'xAxis');\n                let curveY = self.getCurve(well, 'yAxis');\n                let curveZ1 = shouldPlotZ1 ? self.getCurve(well, 'z1Axis') : null;\n                let curveZ2 = shouldPlotZ2 ? self.getCurve(well, 'z2Axis') : null;\n                let curveZ3 = shouldPlotZ3 ? self.getCurve(well, 'z3Axis') : null;\n                if (!curveX || !curveY) {\n                    continue;\n                }\n                let datasetTopX = self.wellSpec[i].xAxis.datasetTop;\n                let datasetBottomX = self.wellSpec[i].xAxis.datasetBottom;\n                let datasetStepX = self.wellSpec[i].xAxis.datasetStep;\n                let datasetX = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].xAxis.idDataset);\n\n                let datasetTopY = self.wellSpec[i].yAxis.datasetTop;\n                let datasetBottomY = self.wellSpec[i].yAxis.datasetBottom;\n                let datasetStepY = self.wellSpec[i].yAxis.datasetStep;\n                let datasetY = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].yAxis.idDataset);\n\n                let zoneset = getZoneset(well, self.zonesetName);\n                // interval\n                const isInterval = self.zonationType === 'interval';\n                let top = d3.min([datasetTopX, datasetTopY]), bottom = d3.max([datasetBottomX, datasetBottomY]);\n                if (isInterval) {\n                    top = self.interval.top;\n                    bottom = self.interval.bottom;\n                }\n                zoneset = isInterval ? genZonationAllZS(top, bottom, utils.getWellColor(well), 'Interval')\n                    : zoneset || genZonationAllZS(top, bottom, utils.getWellColor(well), isInterval ? 'Interval' : undefined);\n\n                let curveDataX = await getCurveData(curveX, well);\n                if (!curveDataX) return;\n                if (self.hasDiscriminator(well)) {\n                    let discriminatorCurve = await wiApi.evalDiscriminatorPromise(datasetX, self.wellSpec[i].discriminator);\n                    curveDataX = curveDataX.filter((d, idx) => discriminatorCurve[idx]);\n                }\n                let curveDataY = await getCurveData(curveY, well);\n                if (!curveDataY) return;\n                if (self.hasDiscriminator(well)) {\n                    let discriminatorCurve = await wiApi.evalDiscriminatorPromise(datasetY, self.wellSpec[i].discriminator);\n                    curveDataY = curveDataY.filter((d, idx) => discriminatorCurve[idx]);\n                }\n                let curveDataZ1;\n                let curveDataZ2;\n                let curveDataZ3;\n                let datasetZ1;\n                let datasetZ2;\n                let datasetZ3;\n                if (shouldPlotZ1 && curveZ1) {\n                    datasetZ1 = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].z1Axis.idDataset);\n                    self.zColors = zColorsFn(self.getZ1N(), curveZ1.idCurve);\n                    curveDataZ1 = await getCurveData(curveZ1, well);\n                    if (!curveDataZ1) return;\n                    if (self.hasDiscriminator(well)) {\n                        let discriminatorCurve = await wiApi.evalDiscriminatorPromise(datasetZ1, self.wellSpec[i].discriminator);\n                        curveDataZ1 = curveDataZ1.filter((d, idx) => discriminatorCurve[idx]);\n                    }\n                    let datasetTopZ1 = self.wellSpec[i].z1Axis.datasetTop;\n                    let datasetBottomZ1 = self.wellSpec[i].z1Axis.datasetBottom;\n                    let datasetStepZ1 = self.wellSpec[i].z1Axis.datasetStep;\n                    curveDataZ1 = curveDataZ1\n                        .map(d => ({\n                            ...d,\n                            depth: datasetStepZ1 > 0 ? (datasetTopZ1 + d.y * datasetStepZ1) : d.y\n                        }));\n                }\n                if (shouldPlotZ2 && curveZ2) {\n                    datasetZ2 = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].z2Axis.idDataset);\n                    self.zSizes = zSizesFn(self.getZ2N(), curveZ2.idCurve);\n                    curveDataZ2 = await getCurveData(curveZ2, well);\n                    if (!curveDataZ2) return;\n                    if (self.hasDiscriminator(well)) {\n                        let discriminatorCurve = await wiApi.evalDiscriminatorPromise(datasetZ2, self.wellSpec[i].discriminator);\n                        curveDataZ2 = curveDataZ2.filter((d, idx) => discriminatorCurve[idx]);\n                    }\n                    let datasetTopZ2 = self.wellSpec[i].z2Axis.datasetTop;\n                    let datasetBottomZ2 = self.wellSpec[i].z2Axis.datasetBottom;\n                    let datasetStepZ2 = self.wellSpec[i].z2Axis.datasetStep;\n                    curveDataZ2 = curveDataZ2\n                        .map(d => ({\n                            ...d,\n                            depth: datasetStepZ2 > 0 ? (datasetTopZ2 + d.y * datasetStepZ2) : d.y\n                        }));\n                }\n                if (shouldPlotZ3 && curveZ3) {\n                    datasetZ3 = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].z3Axis.idDataset);\n                    self.zSymbols = zSymbolsFn(self.getZ3N(), curveZ3.idCurve);\n                    curveDataZ3 = await getCurveData(curveZ3, well);\n                    if (!curveDataZ3) return;\n                    if (self.hasDiscriminator(well)) {\n                        let discriminatorCurve = await wiApi.evalDiscriminatorPromise(datasetZ3, self.wellSpec[i].discriminator);\n                        curveDataZ3 = curveDataZ3.filter((d, idx) => discriminatorCurve[idx]);\n                    }\n                    let datasetTopZ3 = self.wellSpec[i].z3Axis.datasetTop;\n                    let datasetBottomZ3 = self.wellSpec[i].z3Axis.datasetBottom;\n                    let datasetStepZ3 = self.wellSpec[i].z3Axis.datasetStep;\n                    curveDataZ3 = curveDataZ3\n                        .map(d => ({\n                            ...d,\n                            depth: datasetStepZ3 > 0 ? (datasetTopZ3 + d.y * datasetStepZ3) : d.y\n                        }));\n                }\n\n                curveDataX = curveDataX\n                    .map(d => ({\n                        ...d,\n                        depth: datasetStepX > 0 ? (datasetTopX + d.y * datasetStepX) : d.y\n                    }));\n                curveDataY = curveDataY\n                    .map(d => ({\n                        ...d,\n                        depth: datasetStepY > 0 ? (datasetTopY + d.y * datasetStepY) : d.y\n                    }));\n                let pointset = getPointSet(curveDataX, curveDataY, curveDataZ1, curveDataZ2, curveDataZ3);\n                pointset = pointset.filter(ps => {\n                    return _.isFinite(ps.x) && _.isFinite(ps.y)\n                        && (!shouldPlotZ1 || _.isFinite(ps.z1))\n                        && (!shouldPlotZ2 || _.isFinite(ps.z2))\n                        && (!shouldPlotZ3 || _.isFinite(ps.z3));\n                })\n\n                const zoneTree = isInterval ? zoneset.zones.map(zone => ({ name: zone.zone_template.name })) : self.zoneTreeUniq;\n                let zones = zoneset.zones.filter(zone => {\n                    let z = zoneTree.find(z1 => {\n                        return z1.name === zone.zone_template.name;\n                    });\n                    zone._notUsed = z._notUsed;\n                    return true;\n                }).sort((a, b) => a.startDepth - b.startDepth);\n                //wiApi.indexZonesForCorrelation(zones);\n\n                let layerIdx = 0;\n                if (self.getColorMode() == 'zone' || self.getColorMode() === 'index') {\n                    for (let j = 0; j < zones.length; j++) {\n                        let zone = zones[j];\n                        if (self.paramGroups && self.paramGroups.length && !isParamGroupsIncludeZone(zone, j)) continue;\n                        let dataArray = filterData(pointset, zone);\n                        let layer = {\n                            dataX: convertUnitData(dataArray.map(d => d.x), curveX.unit, self.config.xUnit || self.defaultConfig.xUnit),\n                            dataY: convertUnitData(dataArray.map(d => d.y), curveY.unit, self.config.yUnit || self.defaultConfig.yUnit),\n                            dataZ1: convertUnitData(dataArray.map(d => d.z1), (curveZ1 || {}).unit, self.config.z1Unit || self.defaultConfig.z1Unit),\n                            dataZ2: convertUnitData(dataArray.map(d => d.z2), (curveZ2 || {}).unit, self.config.z2Unit || self.defaultConfig.z2Unit),\n                            dataZ3: convertUnitData(dataArray.map(d => d.z3), (curveZ3 || {}).unit, self.config.z3Unit || self.defaultConfig.z3Unit),\n                            regColor: self.getColor(zone, well, layerIdx),\n                            layerColor: self.getColor(zone, well, layerIdx),\n                            name: `${well.name}.${zone.zone_template.name}(${j})`,\n                            well: `${well.name}:${well._idx}`,\n                            zone: `${zone.zone_template.name}`,\n                            curveXInfo: `${datasetX.name}.${curveX.name}`,\n                            curveYInfo: `${datasetY.name}.${curveY.name}`,\n                            curveZ1Info: shouldPlotZ1 ? `${datasetZ1.name}.${curveZ1.name}` : 'N/A',\n                            curveZ2Info: shouldPlotZ2 ? `${datasetZ2.name}.${curveZ2.name}` : 'N/A',\n                            curveZ3Info: shouldPlotZ3 ? `${datasetZ3.name}.${curveZ3.name}` : 'N/A',\n                            numPoints: dataArray.length,\n                            mse: self.calcMSE(dataArray.map(d => d.x), dataArray.map(d => d.y)).toFixed(3),\n                            conditionExpr: self.wellSpec[i].discriminator && self.wellSpec[i].discriminator.active ? self.wellSpec[i].discriminator.conditionExpr : undefined,\n                            correlation: self.calcCorrelation(dataArray.map(d => d.x), dataArray.map(d => d.y))\n                        }\n                        layer.color = curveZ1 && shouldPlotZ1 ? (function (data, idx) {\n                            return getTransformZ1()(this.dataZ1[idx]);\n                        }).bind(layer) : self.getColor(zone, well, layerIdx);\n                        layer.size = (function (data, idx) {\n                            if (curveZ2 && shouldPlotZ2) {\n                                return getTransformZ2()(this.dataZ2[idx]);\n                            } else {\n                                return self.pointSize;\n                            }\n                        }).bind(layer);\n                        layer.textSymbol = curveZ3 && shouldPlotZ3 ? (function (data, idx) {\n                            return getTransformZ3()(this.dataZ3[idx]);\n                        }).bind(layer) : null;\n                        layerIdx++;\n                        $timeout(() => {\n                            if (!zone._notUsed) {\n                                layers.push(layer);\n                            } else {\n                                _notUsedLayer.push(layer)\n                            }\n                        })\n                    }\n                } else {\n                    let layer = {\n                        dataX: [],\n                        dataY: [],\n                        dataZ1: [],\n                        dataZ2: [],\n                        dataZ3: [],\n                        regColor: getWellSpec(well),\n                        layerColor: utils.getWellColor(well),\n                        name: `${well.name}`,\n                        well: `${well.name}:${well._idx}`,\n                        conditionExpr: self.wellSpec[i].discriminator && self.wellSpec[i].discriminator.active ? self.wellSpec[i].discriminator.conditionExpr : undefined,\n                        curveXInfo: `${datasetX.name}.${curveX.name}`,\n                        curveYInfo: `${datasetY.name}.${curveY.name}`,\n                        curveZ1Info: shouldPlotZ1 ? `${datasetZ1.name}.${curveZ1.name}` : 'N/A',\n                        curveZ2Info: shouldPlotZ2 ? `${datasetZ2.name}.${curveZ2.name}` : 'N/A',\n                        curveZ3Info: shouldPlotZ3 ? `${datasetZ3.name}.${curveZ3.name}` : 'N/A',\n                    }\n                    for (let j = 0; j < zones.length; j++) {\n                        let zone = zones[j];\n                        if (self.paramGroups && self.paramGroups.length && !isParamGroupsIncludeZone(zone, j)) continue;\n                        if (zone._notUsed) continue;\n                        let dataArray = filterData(pointset, zone);\n                        layer.dataX = layer.dataX.concat(convertUnitData(dataArray.map(d => d.x), curveX.unit, self.config.xUnit || self.defaultConfig.xUnit));\n                        layer.dataY = layer.dataY.concat(convertUnitData(dataArray.map(d => d.y), curveY.unit, self.config.yUnit || self.defaultConfig.yUnit));\n                        layer.dataZ1 = layer.dataZ1.concat(convertUnitData(dataArray.map(d => d.z1), (curveZ1 || {}).unit, self.config.z1Unit || self.defaultConfig.z1Unit));\n                        layer.dataZ2 = layer.dataZ2.concat(convertUnitData(dataArray.map(d => d.z2), (curveZ2 || {}).unit, self.config.z2Unit || self.defaultConfig.z2Unit));\n                        layer.dataZ3 = layer.dataZ3.concat(convertUnitData(dataArray.map(d => d.z3), (curveZ3 || {}).unit, self.config.z3Unit || self.defaultConfig.z3Unit));\n                    }\n                    layer.color = curveZ1 && shouldPlotZ1 ? (function (data, idx) {\n                        return getTransformZ1()(this.dataZ1[idx]);\n                    }).bind(layer) : self.getColor(null, well);\n                    layer.size = (function (data, idx) {\n                        if (curveZ2 && shouldPlotZ2) {\n                            return getTransformZ2()(this.dataZ2[idx]);\n                        } else {\n                            return self.pointSize;\n                        }\n                    }).bind(layer);\n                    layer.textSymbol = curveZ3 && shouldPlotZ3 ? (function (data, idx) {\n                        return getTransformZ3()(this.dataZ3[idx]);\n                    }).bind(layer) : null;\n                    layer.numPoints = layer.dataX.length;\n                    layer.correlation = self.calcCorrelation(layer.dataX, layer.dataY);\n                    layer.mse = self.calcMSE(layer.dataX, layer.dataY).toFixed(3),\n                        $timeout(() => {\n                            layers.push(layer);\n                        })\n                }\n            }\n\n            if (conditionForPickettPlot()) {\n                self.updateAllPickettLines();\n                updatePickettAdjusterArray();\n            }\n            self.layers = layers;\n            self._notUsedLayer = _notUsedLayer;\n        } catch (error) {\n            console.error(error);\n        }\n        wiLoading.hide();\n    }\n    async function getCurveData(curve, well) {\n        let data = await wiApi.getCachedCurveDataPromise(curve.idCurve);\n        if (data.name && data.name == \"Error\") {\n            wiLoading.hide();\n            if (__toastr) __toastr.error(`Can not get data of ${curve.name}-${well.name} or it is empty`);\n            console.error(new Error(`Can not get data of ${curve.name}-${well.name} or it is empty`));\n            return undefined;\n        }\n        return data;\n    }\n    function convertUnitData(data, fromUnit, toUnit) {\n        if (fromUnit && toUnit && fromUnit != toUnit) {\n            data = data.map(item => wiApi.convertUnit(item, fromUnit, toUnit));\n        }\n        return data;\n    }\n    function isParamGroupsIncludeZone(zone, layerIdx) {\n        let toReturn = self.paramGroups.some((paramGroup, paramGroupIdx) => {\n            let properties = paramGroup.properties;\n            return zone.zone_template.name === properties.zone_template.name.replace('All', 'ZonationAll') && layerIdx === (properties.__depthIndex || 0);\n        })\n        return toReturn;\n    }\n    function getPointSet(xData, yData, z1Data, z2Data, z3Data) {\n        let pointset = [];\n        xData.forEach((eX) => {\n            if (!_.isFinite(eX.x)) return;\n\n            let ySample = wiApi.binarySearch(yData, function (oneYData) {\n                return parseFloat(eX.depth.toFixed(4) - oneYData.depth.toFixed(4));\n            }, 0, yData.length - 1);\n\n            if (!ySample || !_.isFinite(ySample.x)) return;\n            let z1Sample, z2Sample, z3Sample;\n            if (z1Data) {\n                z1Sample = wiApi.binarySearch(z1Data, function (oneZ1Data) {\n                    return (eX.depth - oneZ1Data.depth).parseFloat(4);\n                }, 0, z1Data.length - 1);\n                if (!z1Sample || !_.isFinite(z1Sample.x)) return;\n            }\n            if (z2Data) {\n                z2Sample = wiApi.binarySearch(z2Data, function (oneZ2Data) {\n                    return (eX.depth - oneZ2Data.depth).parseFloat(4);\n                }, 0, z2Data.length - 1);\n                if (!z2Sample || !_.isFinite(z2Sample.x)) return;\n            }\n            if (z3Data) {\n                z3Sample = wiApi.binarySearch(z3Data, function (oneZ3Data) {\n                    return (eX.depth - oneZ3Data.depth).parseFloat(4);\n                }, 0, z3Data.length - 1);\n                if (!z3Sample || !_.isFinite(z3Sample.x)) return;\n            }\n            pointset.push({\n                x: eX.x,\n                y: ySample.x,\n                z1: z1Sample ? z1Sample.x : undefined,\n                z2: z2Sample ? z2Sample.x : undefined,\n                z3: z3Sample ? z3Sample.x : undefined,\n                depth: eX.depth\n            });\n        });\n        return pointset;\n    }\n    function getTransformZ1() {\n        let wdZ = [self.getZ1Min(), self.getZ1Max()];\n        let reverse = wdZ[0] > wdZ[1];\n        return d3.scaleQuantize()\n            .domain(sort(wdZ))\n            .range(reverse ? clone(self.zColors).reverse() : self.zColors);\n    }\n    function getTransformZ2() {\n        let wdZ = [self.getZ2Min(), self.getZ2Max()];\n        let reverse = wdZ[0] > wdZ[1];\n        return d3.scaleQuantize()\n            .domain(sort(wdZ))\n            .range(reverse ? clone(self.zSizes).reverse() : self.zSizes);\n    }\n    function getTransformZ3() {\n        let wdZ = [self.getZ3Min(), self.getZ3Max()];\n        let reverse = wdZ[0] > wdZ[1];\n        return d3.scaleQuantize()\n            .domain(sort(wdZ))\n            .range(reverse ? clone(self.zSymbols).reverse() : self.zSymbols);\n    }\n    function zColorsFn(numColor, doHaveColorAxis) {\n        if (!doHaveColorAxis) return [];\n        if (numColor <= 0) return [];\n        let colors = [];\n\n        if (self.palProps && self.palProps.palette) {\n            for (let i = 0; i < numColor; i++) {\n                colors.push(utils.palette2RGB(self.palProps.palette[i % self.palProps.palette.length], false));\n            }\n        }\n        else {\n            if (numColor == 1) return ['rgb(255, 0, 0)'];\n            let rotateTime = Math.round(numColor / 3);\n            let redPoints = points(numColor);\n            let greenPoints = angular.copy(redPoints).rotate(rotateTime);\n            let bluePoints = angular.copy(greenPoints).rotate(rotateTime);\n            for (let i = 0; i < numColor; i++) {\n                colors.push('rgb(' + redPoints[i] + ',' + greenPoints[i] + ',' + bluePoints[i] + ')');\n            }\n        }\n        return colors;\n    }\n    function zSizesFn(numSize, doHaveSizeAxis) {\n        if (!doHaveSizeAxis) return [];\n        if (numSize <= 0) return [];\n        const minSize = self.getPointSize();\n        const step = 2;\n        let sizes = []\n        for (let i = 0; i < numSize; i++) {\n            sizes.push(minSize + i * step);\n        }\n        return sizes;\n    }\n    function zSymbolsFn(numSymbol, doHaveSymbolAxis) {\n        if (!doHaveSymbolAxis) return [];\n        if (numSymbol <= 0) return [];\n        const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        let symbols = []\n        for (let i = 0; i < numSymbol; i++) {\n            symbols.push(alphabet[i]);\n        }\n        return symbols;\n    }\n    function points(N) {\n        let toRet = [];\n        let step = (255 - 0) / (N - 1);\n        for (let i = 0; i < N; i++) {\n            toRet.push(0 + i * step);\n        }\n        return toRet;\n    }\n    function sort(array) {\n        return array.sort(function (a, b) {\n            return a - b;\n        });\n    }\n    function clone(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    if (!Array.prototype.rotate) {\n        Object.defineProperty(Array.prototype, 'rotate', {\n            enumerable: false,\n            value: function (count) {\n                var push = Array.prototype.push,\n                    splice = Array.prototype.splice;\n                var len = this.length >>> 0; // convert to uint\n                count = count >> 0; // convert to int\n\n                // convert count to value in range [0, len)\n                count = ((count % len) + len) % len;\n\n                // use splice.call() instead of this.splice() to make function generic\n                push.apply(this, splice.call(this, 0, count));\n                return this;\n            }\n        });\n    }\n    this.hideSelectedRegression = function () {\n        if (!self.selectedRegression) return;\n        self.selectedRegression.forEach(layer => layer._useReg = false);\n        self.updateRegressionLine(self.regressionType, self.polygons);\n    }\n    this.showSelectedRegression = function () {\n        if (!self.selectedRegression) return;\n        self.selectedRegression.forEach(layer => layer._useReg = true);\n        self.updateRegressionLine(self.regressionType, self.polygons);\n    }\n    this.hideAllRegression = function () {\n        self.layers.forEach(layer => layer._useReg = false);\n        self.updateRegressionLine(self.regressionType, self.polygons);\n        $timeout(() => {});\n    }\n    this.showAllRegression = function () {\n        self.layers.forEach(layer => layer._useReg = true);\n        self.updateRegressionLine(self.regressionType, self.polygons);\n        $timeout(() => {});\n    }\n    this.hideSelectedLayer = function () {\n        if (!self.selectedLayers) return;\n        self.selectedLayers.forEach(layer => {\n            layer._notUsed = true;\n            toggleParamGroup(layer);\n        });\n    }\n    this.showSelectedLayer = function () {\n        if (!self.selectedLayers) return;\n        self.selectedLayers.forEach(layer => {\n            layer._notUsed = false;\n            toggleParamGroup(layer);\n        });\n        $timeout(() => {});\n    }\n    this.hideAllLayer = function () {\n        self.layers.forEach(layer => {\n            layer._notUsed = true;\n            toggleParamGroup(layer);\n        });\n        $timeout(() => {});\n    }\n    this.showAllLayer = function () {\n        self.layers.forEach(layer => {\n            layer._notUsed = false;\n            toggleParamGroup(layer);\n        });\n        $timeout(() => {});\n    }\n    this.getFilterForLayer = () => {\n        if (!self.zoneTree || !self.zoneTree.length) {\n            return '';\n        }\n        let filterLayer = self.zoneTree.map(z => `${z._notUsed}`).join('');\n        return filterLayer;\n    }\n    this.runLayerMatch = function (node, criteria) {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = node.name.toLowerCase();\n        return searchArray.includes(keySearch);\n    }\n    let _layerTree = [];\n    this.getLayerTree = function () {\n        _layerTree = self.layers\n        return self.layers;\n    }\n    this.getLayerLabel = (node) => node.name\n    this.getLayerIcon = (node) => ((node && !node._notUsed) ? 'layer-16x16' : 'fa fa-eye-slash')\n    this.getLayerIcons = (node) => ([\"rectangle\"])\n    this.getLayerIconStyle = (node) => ({\n        'background-color': node.layerColor\n    })\n    this.click2ToggleLayer = function ($event, node, selectedObjs) {\n        node._notUsed = !node._notUsed;\n        toggleParamGroup(node);\n        self.selectedLayers = Object.values(selectedObjs).map(o => o.data);\n    }\n    function toggleParamGroup(layer) {\n        if (self.paramGroups && self.paramGroups.length) {\n            for (let i = 0; i < self.paramGroups.length; i++) {\n                let paramGroup = self.paramGroups[i];\n                let properties = paramGroup.properties;\n                if (layer.name.includes(`${properties.zone_template.name.replace('All', 'ZonationAll')}(${properties.__depthIndex || 0})`)) {\n                    paramGroup._notShow = layer._notUsed;\n                    break;\n                }\n            }\n        }\n    }\n\n    // ---REGRESSION---\n    this.onRegressionTypeChange = function (selectedItemProps) {\n        self.regressionType = (selectedItemProps || {}).name;\n    }\n    this.getRegIcon = (node) => ((node && node._useReg) ? 'layer-16x16' : 'fa fa-eye-slash')\n    this.getRegIcons = (node) => ([\"rectangle\"])\n    this.getRegIconStyle = (node) => ({\n        'background-color': node.regColor\n    })\n    this.getPropMapTreeIcon = (node) => ((node && node._use4PropMap) ? 'layer-16x16' : 'fa fa-eye-slash')\n    this.getPropMapTreeIcons = (node) => ([\"rectangle\"])\n    this.getPropMapTreeIconStyle = (node) => ({\n        'background-color': node.layerColor\n    })\n    this.updateRegressionLine = function (regressionType, polygons) {\n        let data = [];\n        for (let i = 0; i < self.layers.length; i++) {\n            let layer = self.layers[i];\n            if (layer._useReg) {\n                data = data.concat(layer.dataX.map((x, i) => {\n                    return [x, layer.dataY[i]];\n                }));\n            }\n        }\n        let usedPolygon = polygons.filter(p => {\n            return !_.isEmpty(p.points) && !p._notUsed;\n        })\n        if (usedPolygon.length) {\n            let includedPolygon = usedPolygon.filter(p => !p.exclude);\n            let excludedPolygon = usedPolygon.filter(p => p.exclude);\n            if (excludedPolygon.length) {\n                data = self.filterByPolygons(excludedPolygon, data, true);\n            }\n            if (includedPolygon.length) {\n                data = self.filterByPolygons(includedPolygon, data, false);\n            }\n        }\n        if (!data.length) {\n            self.regLine = {};\n            self.regLine.family = undefined;\n            return;\n        }\n        let result;\n        self.regLine = {\n            lineStyle: {\n                lineStyle: (self.regLine.lineStyle || {}).lineStyle || [10, 0],\n                lineColor: (self.regLine.lineStyle || {}).lineColor || colorGenerator(),\n                lineWidth: (self.regLine.lineStyle || {}).lineWidth || 1\n            }\n        }\n        let fitPoint = {\n            fitX: self.config.fitX,\n            fitY: self.config.fitY\n        }\n        switch (regressionType) {\n            case 'Linear':\n                result = regression.linear(data, { precision: 6, ...fitPoint });\n                self.regLine = {\n                    ...self.regLine,\n                    family: self.regressionType.toLowerCase(),\n                    slope: result.equation[0],\n                    intercept: result.equation[1],\n                    predict: result.predict,\n                    r2: result.r2\n                };\n                break;\n            case 'Exponential':\n                result = regression.exponential(data, { precision: 6, ...fitPoint });\n                self.regLine = {\n                    ...self.regLine,\n                    family: self.regressionType.toLowerCase(),\n                    ae: result.equation[0],\n                    b: result.equation[1],\n                    predict: result.predict,\n                    r2: result.r2\n                };\n                break;\n            case 'Power':\n                result = regression.power(data, { precision: 6, ...fitPoint });\n                self.regLine = {\n                    ...self.regLine,\n                    family: self.regressionType.toLowerCase(),\n                    coefficient: result.equation[0],\n                    exponent: result.equation[1],\n                    predict: result.predict,\n                    r2: result.r2\n                };\n                break;\n            case 'Polynomial':\n                result = regression.polynomial(data, { order: self.getPolynomialOrder() })\n                self.regLine = {\n                    ...self.regLine,\n                    family: self.regressionType.toLowerCase(),\n                    equation: result.equation,\n                    predict: result.predict,\n                    r2: result.r2\n                }\n                break;\n        }\n        // Calc MSE\n        let x = [];\n        let y = [];\n        for (let i = 0; i < self.layers.length; i++) {\n            let layer = self.layers[i];\n            if (layer._useReg) {\n                x = x.concat(layer.dataX);\n                y = y.concat(layer.dataY);\n            }\n        }\n        let yPredict = x.map(xi => {\n            return self.regLine.predict(xi)[1];\n        });\n        self.mse = {\n            family: 'mse',\n            mse: self.calcMSE(y, yPredict).toFixed(6)\n        }\n    }\n    this.click2ToggleRegression = function ($event, node, selectedObjs) {\n        self.isSettingChange = true;\n        node._useReg = !node._useReg;\n        self.updateRegressionLine(self.regressionType, self.polygons);\n        $timeout(() => {\n            self.regLine = {\n                ...self.regLine\n            };\n        })\n        self.selectedRegression = Object.values(selectedObjs).map(o => o.data);\n    }\n\n    //---DISCRIMINATOR---\n    this.discriminatorDialog = function (well) {\n        let wSpec = getWellSpec(well);\n        let dataset = well.datasets.find(ds => ds.idDataset === wSpec['xAxis'].idDataset);\n\n        let curvesArr = dataset.curves.map(c => ({ type: 'curve', name: c.name }));\n        wiDialog.discriminator(wSpec.discriminator, curvesArr, function (discrmnt) {\n            self.isSettingChange = true;\n            wSpec.discriminator = discrmnt;\n        });\n    }\n    this.hasDiscriminator = function (well) {\n        let wSpec = getWellSpec(well);\n        return wSpec.discriminator && Object.keys(wSpec.discriminator).length > 0 && wSpec.discriminator.active;\n    }\n\n    this.reverseAxis = function () {\n        [self.selectionValueList[0].value, self.selectionValueList[1].value] = [self.selectionValueList[1].value, self.selectionValueList[0].value];\n        for (let i = 0; i < self.wellSpec.length; i++) {\n            swapPropObj(self.wellSpec[i], 'xAxis', 'yAxis');\n        }\n        updateDefaultConfig();\n        [self.config.left, self.config.bottom] = [self.config.bottom, self.config.left];\n        [self.config.right, self.config.top] = [self.config.top, self.config.right];\n        [self.config.logaX, self.config.logaY] = [self.config.logaY, self.config.logaX];\n        [self.config.majorX, self.config.majorY] = [self.config.majorY, self.config.majorX];\n        [self.config.minorX, self.config.minorY] = [self.config.minorY, self.config.minorX];\n        [self.config.xLabel, self.config.yLabel] = [self.config.yLabel, self.config.xLabel];\n        reverseOverlayLine();\n        self.genLayers();\n        self.isSwapAxisPickett = !self.isSwapAxisPickett;\n        self.updateAllPickettLines();\n    }\n    function reverseOverlayLine() {\n        if (!self.overlayLineSpec) return;\n        self.overlayLineSpec.lines.forEach(ovlLine => {\n            ovlLine.data.forEach(point => {\n                [point.x, point.y] = [point.y, point.x];\n            })\n        })\n    }\n    function swapPropObj(obj, key1, key2) {\n        [obj[key1], obj[key2]] = [obj[key2], obj[key1]];\n    }\n\n    function colorGenerator(seed, semiTransparent) {\n        if (!seed || !seed.length) {\n            let transparent = semiTransparent ? 0.5 : 1;\n            let rand = function () {\n                return Math.floor(Math.random() * 255);\n            }\n            return \"rgb(\" + rand() + \",\" + rand() + \",\" + rand() + \",\" + transparent + \")\";\n        }\n        let n = Math.abs(string2Int(seed));\n        let colorTable = getColorPalette();\n        if (!colorTable) return;\n        return utils.palette2RGB(colorTable[n % colorTable.length], semiTransparent);\n    }\n\n    function string2Int(str) {\n        var hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash;\n    }\n\n    this.getColorPalette = getColorPalette;\n    function getColorPalette() {\n        return wiApi.getPalette('BGR');\n    }\n    this.pickettLineColor = function (pickett) {\n        if (pickett.sw == 1) {\n            return 'red';\n        }\n        return self.getPickettSetColor(self.pickettSets[pickett.pickettSetIdx], pickett.pickettSetIdx);\n    }\n    this.addPickettSet = function () {\n        self.pickettSets.push({ color: 'blue' });\n    }\n    this.turnOnPickettSet = function ($index) {\n        if (self.pickettSets[$index]._used) {\n            self.pickettSets[$index]._used = false;\n        } else {\n            self.pickettSets.forEach(pickettSet => pickettSet._used = false);\n            self.pickettSets[$index]._used = true;\n        }\n        self.updateAllPickettLines();\n    }\n    this.addSwParam = function () {\n        if (self.swParamList.length >= _PICKETT_LIMIT) {\n            let msg = \"Too many picketts\";\n            if (__toastr) __toastr.error(msg);\n            console.error(new Error(msg));\n            return;\n        }\n        let swValue = 1;\n        self.swParamList.push({ sw: swValue });\n        self.pickettSets.forEach((pickettSet, pickettSetIdx) => {\n            self.allPickettLines.push({\n                rw: self.getPickettSetRw(pickettSet, pickettSetIdx),\n                m: self.getPickettSetM(pickettSet, pickettSetIdx),\n                n: self.getPickettSetN(pickettSet, pickettSetIdx),\n                a: self.getPickettSetA(pickettSet, pickettSetIdx),\n                sw: swValue,\n                swParamIdx: self.swParamList.length - 1,\n                pickettSetIdx,\n                label: `${self.getPickettSetName(pickettSet, pickettSetIdx)}, Sw = ${swValue}`,\n                style: {\n                    fill: pickettSet.color\n                },\n                family: 'pickett',\n                _used: pickettSet._used,\n                isSwap: self.isSwapAxisPickett\n            })\n        })\n    }\n    this.removeSwParam = function (index) {\n        self.swParamList.splice(index, 1);\n        let toRemovePickettLine = self.allPickettLines.filter(pickettLine => pickettLine.swParamIdx == index);\n        toRemovePickettLine.forEach(pickettLine => {\n            let idx = self.allPickettLines.indexOf(pickettLine);\n            if (idx) {\n                self.allPickettLines.splice(idx, 1);\n            }\n        })\n    }\n    this.removePickettSet = function ($index) {\n        self.pickettSets.splice($index, 1);\n    }\n    this.updateAllPickettLines = updateAllPickettLines;\n    this.updateAllPickettLinesDebounce = _.debounce(updateAllPickettLines, 300);\n    //this.updateAllPickettLinesDebounce = updateAllPickettLines;\n    function updateAllPickettLines() {\n        let allPickettLines = [];\n        if (!self.pickettSets.length) return;\n        self.allPickettLines.length = 0;\n        self.swParamList.forEach((swParam, swParamIdx) => {\n            self.pickettSets.forEach((pickettSet, pickettSetIdx) => {\n                if (!pickettSet._used) return;\n                let pickett = {\n                    rw: self.getPickettSetRw(pickettSet, pickettSetIdx),\n                    m: self.getPickettSetM(pickettSet, pickettSetIdx),\n                    n: self.getPickettSetN(pickettSet, pickettSetIdx),\n                    a: self.getPickettSetA(pickettSet, pickettSetIdx),\n                    sw: swParam.sw,\n                    swParamIdx,\n                    pickettSetIdx,\n                    label: `${self.getPickettSetName(pickettSet, pickettSetIdx)}, Sw = ${swParam.sw}`,\n                    style: {\n                        fill: pickettSet.color\n                    },\n                    family: 'pickett',\n                    _used: pickettSet._used,\n                    isSwap: self.isSwapAxisPickett\n                }\n                allPickettLines.push(pickett);\n            });\n        });\n        $timeout(() => {\n            self.allPickettLines = allPickettLines;\n            self.updatePickettAdjusterArrayDebounce();\n        })\n    }\n    this.updatePickettAdjusterArrayDebounce = _.debounce(updatePickettAdjusterArray, 300);\n    this.updatePickettAdjusterArray = updatePickettAdjusterArray;\n    function updatePickettAdjusterArray() {\n        if (self.showAdjuster) {\n            self.pickettSets.forEach((pickettSet, pickettSetIdx) => {\n                if (!pickettSet._used) return;\n                let twoPoints = initPickettControlPoints(pickettSet);\n                if (twoPoints) {\n                    self.pickettAdjusterArray.length = 0;\n                    self.pickettAdjusterArray.push(twoPoints);\n                }\n            })\n        }\n    }\n    this.conditionForPickettPlot = conditionForPickettPlot;\n    function conditionForPickettPlot() {\n        let familyGroupX;\n        let familyGroupY;\n        if (!self.treeConfig.length) {\n            familyGroupX = undefined;\n        } else {\n            let curveX = self.getCurve(self.treeConfig[0], 'xAxis');\n            let curveY = self.getCurve(self.treeConfig[0], 'yAxis');\n            if (!curveX || !curveY) return false;\n            let familyX = wiApi.getFamily(curveX.idFamily);\n            let familyY = wiApi.getFamily(curveY.idFamily);\n            if (!familyX || !familyY) return false;\n            familyGroupX = familyX.familyGroup;\n            familyGroupY = familyY.familyGroup;\n        }\n        self.isSwapAxisPickett = true;\n        if (((familyGroupX == 'Porosity' || familyGroupX == 'Void Fraction') && familyGroupY == 'Resistivity')) self.isSwapAxisPickett = false;\n        return self.getLogaX() && self.getLogaY()\n            && (((familyGroupX == 'Porosity' || familyGroupX == 'Void Fraction') && familyGroupY == 'Resistivity')\n                || (familyGroupX == 'Resistivity' && (familyGroupY == 'Porosity' || familyGroupY == 'Void Fraction')))\n    }\n\n    function initUDL() {\n        wiApi.listAssetsPromise(self.idProject, 'FormulaArray')\n            .then(listAssets => {\n                let asset = listAssets.find(a => a.idParameterSet === self.udlsAssetId);\n                let udls = fromFormulaArray2UDLs(asset.content);\n                $timeout(() => {\n                    self.udls = udls;\n                    self.udls.name = asset.name\n                }, 500)\n            })\n            .catch(e => {\n                $timeout(() => {\n                    self.udls = [];\n                }, 500)\n            });\n    }\n    this.loadUDL = function () {\n        wiApi.listAssetsPromise(self.idProject, 'FormulaArray')\n            .then(listAssets => {\n                self.udlSelectionList = listAssets.map(item => ({\n                    data: { label: item.name },\n                    properties: item\n                }));\n                wiDialog.promptListDialog({\n                    title: 'Load User Defined Lines',\n                    selectionList: self.udlSelectionList,\n                    currentSelect: self.udlSelectionList[0].data.label,\n                    inputName: 'User Defined Lines'\n                }, (selectedAsset) => {\n                    if (self.udls && self.udls.length) {\n                        let actions = [\n                            { title: `Add more`, onClick: (wiModal) => { wiModal.close('Add more') } },\n                            { title: `Replace`, onClick: (wiModal) => { wiModal.close('Replace') } }\n                        ]\n                        wiDialog.confirmDialog(\n                            \"Confirmation\",\n                            \"Which way do you want to import?\",\n                            (way) => {\n                                if (way === \"Add more\") {\n                                    let name = self.udls.name;\n                                    let note = self.udls.node;\n                                    self.udls = self.udls.concat(fromFormulaArray2UDLs(selectedAsset.content));\n                                    self.udls = _.uniqBy(self.udls, (udl) => udl.text)\n                                    self.udls.name = name;\n                                    self.udls.note = note;\n                                } else {\n                                    replaceUDLs(selectedAsset);\n                                }\n                            },\n                            actions\n                        )\n                    } else {\n                        replaceUDLs(selectedAsset);\n                    }\n                });\n            });\n        function replaceUDLs(selectedAsset) {\n            self.udlsAssetId = selectedAsset.idParameterSet;\n            self.udls = fromFormulaArray2UDLs(selectedAsset.content);\n            self.udls.name = selectedAsset.name;\n            self.udls.note = selectedAsset.note;\n            self.addLog('success', 'Change Formula')\n        }\n    }\n    this.saveUDL = function () {\n        if (self.udls.note === \"System Formula\") {\n            let msg = `Can not overwrite \"System Formula\"`;\n            if (__toastr) __toastr.error(msg);\n            return;\n        }\n        let content = fromUDLs2FormulaArray(self.udls);\n        if (self.udlsAssetId) {\n            wiLoading.show($element.find('.main')[0], self.silent);\n            wiApi.editAssetPromise(self.udlsAssetId, content)\n                .then(res => {\n                    wiLoading.hide();\n                })\n                .catch(e => {\n                    wiLoading.hide();\n                    let msg = `Asset ${name} has been existed`;\n                    if (__toastr) __toastr.error(msg);\n                    self.saveUDL();\n                });\n        } else {\n            wiDialog.promptDialog({\n                title: 'Save User Defined Lines',\n                inputName: 'User Defined Lines Name',\n                input: '',\n            }, function (name) {\n                wiLoading.show($element.find('.main')[0], self.silent);\n                self.udls.name = name;\n                let type = 'FormulaArray';\n                let content = fromUDLs2FormulaArray(self.udls);\n                wiApi.newAssetPromise(self.idProject, name, type, content)\n                    .then(res => {\n                        self.udlsAssetId = res.idParameterSet;\n                        wiLoading.hide();\n                    })\n                    .catch(e => {\n                        let msg = `Asset ${name} has been existed`;\n                        if (__toastr) __toastr.error(msg);\n                        self.saveUDL();\n                        wiLoading.hide();\n                    })\n            });\n        }\n    }\n    this.saveAsUDL = function () {\n        wiDialog.promptDialog({\n            title: 'Save As User Defined Lines',\n            inputName: 'User Defined Lines Name',\n            input: '',\n        }, function (name) {\n            self.udls.name = name;\n            let type = 'FormulaArray';\n            let content = fromUDLs2FormulaArray(self.udls);\n            wiApi.newAssetPromise(self.idProject, name, type, content)\n                .then(res => {\n                    self.udls.note = \"\";\n                    self.udlsAssetId = res.idParameterSet;\n                })\n                .catch(e => {\n                    if (!e.message.includes('exist')) return\n                    let msg = `Asset ${name} has been existed`;\n                    if (__toastr) __toastr.error(msg);\n                    self.saveAsUDL();\n                })\n        });\n    }\n    function fromUDLs2FormulaArray(UDLs) {\n        return UDLs.map(udl => {\n            return {\n                function: udl.text,\n                lineStyle: udl.lineStyle,\n                index: udl.index,\n                displayLine: !udl._notUsed,\n                displayEquation: udl.displayEquation\n            }\n        })\n\n    }\n    function fromFormulaArray2UDLs(formulaArray) {\n        let regex = /^(y = )/g;\n        return formulaArray.map(udl => {\n            let latex = udl.function;\n            if (!regex.test(udl.function))\n                latex = `y = ${latex}`;\n            return {\n                text: udl.function,\n                latex: normalizeFormation(latex),\n                lineStyle: udl.lineStyle,\n                fn: function (x) {\n                    return eval(udl.function);\n                },\n                index: udl.index,\n                displayEquation: udl.displayEquation,\n                _notUsed: !udl.displayLine\n            }\n        })\n    }\n\n    this.onChangePal = function (palProps) {\n        if (!palProps) return;\n        self.isSettingChange = true;\n        self.config.currentPalName = palProps.name;\n        self.palProps = palProps;\n    }\n    this.onPalsDropdownInit = function (wiDropdownCtrl) {\n        self.wiDropdownCtrl = wiDropdownCtrl;\n        self.palTable = self.palTable || wiApi.getPalettes();\n        wiDropdownCtrl.items = Object.keys(self.palTable).map(palName => {\n            let data = {\n                label: palName\n            };\n            let properties = {\n                name: palName,\n                palette: self.palTable[palName]\n            };\n            let toReturn = { data, properties };\n            if (self.config.currentPalName && palName === self.config.currentPalName) {\n                wiDropdownCtrl.selectedItem = toReturn;\n                self.palProps = properties;\n            }\n            return toReturn;\n        });\n        wiDropdownCtrl.items.unshift({\n            data: {\n                name: \"[No Palette]\"\n            },\n            properties: {\n                name: '[No Palette]',\n                palette: null\n            }\n        })\n    }\n    this.validPlotRegion = function () {\n        let result = (self.getTop() - self.getBottom()) * (self.getRight() - self.getLeft());\n        return _.isFinite(result) && result != 0;\n    }\n\n    function initPickettControlPoints(pickettSet) {\n        let stepDen = 20;\n        let hRange = [self.getLeft() == 0 ? 0.01 : self.getLeft(), self.getRight() == 0 ? 0.01 : self.getRight()];\n        let hRangeLoga = hRange.map(v => Math.log10(v));\n        let vRange = [self.getBottom() == 0 ? 0.01 : self.getBottom(), self.getTop() == 0 ? 0.01 : self.getTop()];\n\n        let step = 1 / stepDen;\n        let getYFromX = !self.isSwapAxisPickett ? pickettFn : pickettFnY;\n\n        let firstPointXLoga = hRangeLoga[0] + (hRangeLoga[1] - hRangeLoga[0]) * (1 / 30);\n        let pow10 = (xExponent) => Math.pow(10, xExponent)\n\n        let firstPointY = getYFromX(pow10(firstPointXLoga));\n        while ((firstPointY - vRange[0]) * (firstPointY - vRange[1]) > 0) {\n            if ((firstPointXLoga - hRangeLoga[0]) * (firstPointXLoga - hRangeLoga[1]) > 0) {\n                console.log(\"Oops!\");\n                return;\n            }\n            firstPointXLoga = firstPointXLoga + (hRangeLoga[1] - hRangeLoga[0]) * step;\n            firstPointY = getYFromX(pow10(firstPointXLoga));\n            console.log('111');\n        }\n        console.log('done 1');\n        let secondPointXLoga = hRangeLoga[1] - (hRangeLoga[1] - hRangeLoga[0]) * (1 / 30);\n        let secondPointY = getYFromX(pow10(secondPointXLoga));\n\n        while ((secondPointY - vRange[0]) * (secondPointY - vRange[1]) > 0) {\n            if ((secondPointXLoga - hRangeLoga[0]) * (secondPointXLoga - hRangeLoga[1]) > 0) {\n                console.log(\"Oops!\");\n                return;\n            }\n            secondPointXLoga = secondPointXLoga - (hRangeLoga[1] - hRangeLoga[0]) * step;\n            secondPointY = getYFromX(pow10(secondPointXLoga));\n            console.log('222');\n        }\n        console.log('done 2')\n        return [{ x: pow10(firstPointXLoga), y: firstPointY }, { x: pow10(secondPointXLoga), y: secondPointY }];\n\n        function pickettFn(x) {\n            let sw = 1;\n            let rw = self.getPickettSetRw(pickettSet);\n            let n = self.getPickettSetN(pickettSet);\n            let m = self.getPickettSetM(pickettSet);\n            let a = self.getPickettSetA(pickettSet);\n            return Math.pow(10, (-m) * (Math.log10(x)) + Math.log10((a * rw) / (sw ** n)));\n        }\n        function pickettFnY(y) {\n            let sw = 1;\n            let rw = self.getPickettSetRw(pickettSet);\n            let n = self.getPickettSetN(pickettSet);\n            let m = self.getPickettSetM(pickettSet);\n            let a = self.getPickettSetA(pickettSet);\n            return Math.pow(10, (Math.log10(y) - (Math.log10((a * rw) / (sw ** n)))) / (-m));\n        }\n    }\n    function updatePickettParams(formula) {\n        let pickettSet = this;\n        let slope = formula.slope;\n        let intercept = formula.intercept;\n        let mValue = Number(parseFloat(calcPickettParamM(slope, intercept, pickettSet)).toFixed(4));\n        let rwValue = Number(parseFloat(calcPickettParamRw(slope, intercept, pickettSet)).toFixed(4));\n        if (_.isFinite(mValue) && _.isFinite(rwValue)) {\n            self.setPickettSetM(pickettSet, -1, mValue);\n            self.setPickettSetRw(pickettSet, -1, rwValue);\n        }\n        self.updateAllPickettLinesDebounce();\n    }\n    function calcPickettParamM(slope, intercept, pickettSet) {\n        if (self.isSwapAxisPickett) return -1 / slope;\n        return -slope;\n    }\n    function calcPickettParamRw(slope, intercept, pickettSet) {\n        // intercept = lg((a*Rw)/(Sw^n))\n        // 10 ^ intercept = a*Rw/(Sw^n)\n        // Rw = (10 ^ intercept) * (sw^n) / a\n        let sw = 1;\n        let m = self.getPickettSetM(pickettSet);\n        let n = self.getPickettSetN(pickettSet);\n        let a = self.getPickettSetA(pickettSet);\n        if (self.isSwapAxisPickett) return (Math.pow(10, m * intercept) * Math.pow(sw, n) / a);\n        return (Math.pow(10, intercept) * Math.pow(sw, n) / a);\n    }\n    const pickettUpdateFnArray = [];\n    this.getUpdatePickettParamsFn = function (pickettIdx) {\n        let updateFn = pickettUpdateFnArray[pickettIdx];\n        if (!updateFn) {\n            pickettUpdateFnArray[pickettIdx] = updatePickettParams.bind(self.pickettSets[pickettIdx]);\n            updateFn = pickettUpdateFnArray[pickettIdx];\n        }\n        return updateFn;\n    }\n\n    //Probability Map\n    function getPropMapStepX() {\n        return (self.getRight() - self.getLeft()) / self.getColsNumPropMap();\n    }\n    function getPropMapStepY() {\n        return (self.getTop() - self.getBottom()) / self.getRowsNumPropMap();\n    }\n    const getBinsXGen = function () {\n        return d3.histogram()\n            .domain(d3.extent([self.getLeft(), self.getRight()]))\n            .thresholds(d3.range(self.getLeft(), self.getRight(), getPropMapStepX()).sort((a, b) => a - b));\n    }\n    const getBinsYGen = function () {\n        return d3.histogram()\n            .domain(d3.extent([self.getBottom(), self.getTop()]))\n            .thresholds(d3.range(self.getBottom(), self.getTop(), getPropMapStepY()).sort((a, b) => a - b));\n    }\n    function isReverse(min, max) {\n        return min - max > 0;\n    }\n    function totalBins(bins) {\n        return _.sum(bins.map(bin => bin.length));\n    }\n    this.hideSelectedPropMap = function () {\n        if (!self.selectedPropMap) return;\n        self.selectedPropMap.forEach(layer => layer._use4PropMap = false);\n        updatePropMap();\n    }\n    this.showSelectedPropMap = function () {\n        if (!self.selectedPropMap) return;\n        self.selectedPropMap.forEach(layer => layer._use4PropMap = true);\n        updatePropMap();\n    }\n    this.hideAllPropMap = function () {\n        self.layers.forEach(layer => layer._use4PropMap = false);\n        updatePropMap();\n        $timeout(() => {});\n    }\n    this.showAllPropMap = function () {\n        self.layers.forEach(layer => layer._use4PropMap = true);\n        updatePropMap();\n        $timeout(() => {});\n    }\n    this.click2TogglePropMap = function ($event, node, selectedObjs) {\n        self.isSettingChange = true;\n        node._use4PropMap = !node._use4PropMap;\n        updatePropMap();\n        self.selectedPropMap = Object.values(selectedObjs).map(o => o.data);\n    }\n    function updatePropMap() {\n        if (!self.layers || !self.layers.length) return;\n        self.propMapUpdateTrigger = Date.now();\n        let layers4PropMap = self.layers.filter(layer => {\n            return layer._use4PropMap;\n        })\n        let dataX = [];\n        let dataY = [];\n        layers4PropMap.forEach(layer => {\n            dataX = dataX.concat(layer.dataX);\n            dataY = dataY.concat(layer.dataY);\n        })\n        self.binsX = getBinsXGen()(dataX);\n        self.binsY = getBinsYGen()(dataY);\n        updateColorScale();\n    }\n    this.cellValuePropMap = function (cellIndex, iRow, iCol) {\n        return '';\n    }\n    function calCellValuePropMap(cellIndex, iRow, iCol) {\n        if (!self.binsX || !self.binsX.length || !self.binsY || !self.binsY.length) return null;\n        const xBin = isReverse(self.getLeft(), self.getRight()) ? self.binsX[self.getColsNumPropMap() - 1 - iCol] : self.binsX[iCol];\n        const yBin = isReverse(self.getBottom(), self.getTop()) ? self.binsY[self.getRowsNumPropMap() - 1 - iRow] : self.binsY[iRow];\n        if (!xBin) return yBin ? yBin.length / totalBins(self.binsX) : 0;\n        if (!yBin) return xBin ? xBin.length / totalBins(self.binsY) : 0;\n        const xPercent = xBin.length / totalBins(self.binsX);\n        const yPercent = yBin.length / totalBins(self.binsY);\n        if (!_.isFinite(xPercent) || !_.isFinite(yPercent)) return null;\n        return d3.mean([xPercent, yPercent]);\n        // return (xPercent * yPercent) / (Math.abs(xPercent - yPercent)**2);\n    }\n    const colorScale = d3.scaleLinear().range([\"rgba(255,255,255,0.9)\", \"rgba(255, 240, 128, 0.9)\", \"rgba(255, 128, 0, 0.9)\", \"rgba(50,0,0,0.9)\"]);\n    this.cellColorPropMap = (cellIndex, iRow, iCol) => {\n        const percent = calCellValuePropMap(cellIndex, iRow, iCol);\n        if (percent == null) return 'transparent';\n        return colorScale(percent);\n    }\n    function isInside(val, range) {\n        return (val - range[0]) * (val - range[1]) <= 0;\n    }\n    function updateColorScale() {\n        const nCol = self.getColsNumPropMap();\n        const nRow = self.getRowsNumPropMap();\n        const arr = new Array(nRow * nCol).fill(0).map((d, i) => {\n            const iRow = Math.floor(i / nCol);\n            const iCol = i % nCol;\n            return calCellValuePropMap(i, iRow, iCol);\n        })\n        //colorScale.domain([d3.extent(arr)]);\n        const ext = d3.extent(arr);\n        colorScale.domain([ext[0], (ext[1] - ext[0]) / 3, (ext[1] - ext[0]) * 2 / 3, ext[1]]);\n    }\n    this.getFrequencyX = function (x) {\n        if (!self.binsX || !self.binsX.length) return undefined;\n        const binX = self.binsX.find(bin => isInside(x, [bin.x0, bin.x1]));\n        if (!binX) return undefined;\n        const freq = wiApi.bestNumberFormat(binX.length / totalBins(self.binsX), 3);\n        if (isNaN(freq)) return undefined;\n        let range0 = wiApi.bestNumberFormat(binX.x0, 2);\n        let range1 = wiApi.bestNumberFormat(binX.x1, 2);\n        return `X[${range0}-${range1}]: ${freq * 100}%`\n    }\n    this.getFrequencyY = function (y) {\n        if (!self.binsY || !self.binsY.length) return undefined;\n        const binY = self.binsY.find(bin => isInside(y, [bin.x0, bin.x1]));\n        if (!binY) return undefined;\n        const freq = wiApi.bestNumberFormat(binY.length / totalBins(self.binsY), 3);\n        if (isNaN(freq)) return undefined;\n        let range0 = wiApi.bestNumberFormat(binY.x0, 2);\n        let range1 = wiApi.bestNumberFormat(binY.x1, 2);\n        return `Y[${range0}-${range1}]: ${freq * 100}%`\n    }\n    this.getRowsNumPropMap = function () {\n        return self.config.rowsNumPropMap || 5;\n    }\n    this.getColsNumPropMap = function () {\n        return self.config.colsNumPropMap || 7;\n    }\n    this.setRowsNumPropMap = function (notUse, newVal) {\n        self.config.rowsNumPropMap = newVal;\n        updatePropMap();\n    }\n    this.setColsNumPropMap = function (notUse, newVal) {\n        self.config.colsNumPropMap = newVal;\n        updatePropMap();\n    }\n\n    this.addLog = function (status, message) {\n        // if(__toastr) __toastr[status](message)\n    }\n}\n","import { WiTree } from '@revotechuet/misc-component-vue';\nimport utils from '../utils';\nimport './style.less';\n\nconst componentName = 'multiWellHistogram';\nexport const name = componentName;\n\nconst PrintableController = Printable.klass;\nconst component = Printable.component;\n\nconst _DECIMAL_LEN = 4;\n\nconst app = angular.module(componentName, [\n    'sideBar', 'wiTreeViewVirtual', 'wiTableView',\n    'wiApi', 'editable', 'wiDialog',\n    'wiDroppable', 'wiDropdownList', 'plot-toolkit',\n    'wiLoading', 'angularResizable', 'wiDiscriminator',\n    'printSettings'\n]);\napp.component(componentName, component({\n    template: require('./template.html'),\n    controller: multiWellHistogramController,\n    bindings: {\n        token: \"<\",\n        idProject: \"<\",\n        wellSpec: \"<\",\n        zonesetName: \"<\",\n        selectionType: \"=\",\n        selectionValue: \"=\",\n        idHistogram: \"<\",\n        config: '<',\n        noStack: '<',\n        stackMode: \"<\",\n        onSave: '<',\n        onSaveAs: '<',\n        onReload: '<',\n        title: '<',\n        silent: \"<\",\n        ctrlParams: \"<\",\n        cpGetMarkerVal: \"<\",\n        cpSetMarkerVal: \"<\",\n        cpMarkerStyle: \"<\",\n        cpMarkerName: \"<\",\n        prefix: '<',\n        cpIcons: \"<\",\n        cpIconStyle: \"<\",\n        onMarkerDragEnd: \"<\",\n        dragHeader: '<',\n        afterNewPlotCreated: '<',\n        copyEmbeddedLink: '<',\n        sidebarCollapsed: '<'\n    },\n    transclude: true\n}))\nmultiWellHistogramController.$inject = ['$scope', '$timeout', '$element', '$compile', 'wiToken', 'wiApi', 'wiDialog', 'wiLoading'];\nfunction multiWellHistogramController($scope, $timeout, $element, $compile, wiToken, wiApi, wiDialog, wiLoading) {\n    let self = this;\n    $scope.WiTree = WiTree;\n    PrintableController.call(this, $scope, $element, $timeout, $compile, wiApi);\n    self.silent = true;\n    self.treeConfig = [];\n    self.selectedNode = null;\n    self.datasets = {};\n    self.statisticHeaders = ['X-Axis', 'Filter', 'Top', 'Bottom', 'Points', 'Avg', 'Min', 'Max', 'Avgdev', 'Stddev', 'Var', 'Skew', 'Kurtosis', 'Median', 'P10', 'P50', 'P90'];\n    self.statisticHeaderMasks = [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\n    //--------------\n    $scope.tab = 1;\n    self.selectionTab = self.selectionTab || 'Wells';\n\n    $scope.setTab = function (newTab) {\n        $scope.tab = newTab;\n    };\n\n    $scope.isSet = function (tabNum) {\n        return $scope.tab === tabNum;\n    };\n\n    this.getFamilyTable = function () {\n        return wiApi.getFamilyTable();\n    }\n    this.getPals = function () {\n        self.palTable = wiApi.getPalettes();\n        return wiApi.getPalettes();\n    }\n    this.discriminatorDialog = function (well) {\n        let wSpec = getWellSpec(well);\n        let datasetId = wSpec.idDataset;\n        let dataset = well.datasets.find(ds => ds.idDataset === wSpec.idDataset);\n\n        let curvesArr = dataset.curves.map(c => ({ type: 'curve', name: c.name }));\n        wiDialog.discriminator(wSpec.discriminator, curvesArr, function (discrmnt) {\n            self.isSettingChange = true;\n            wSpec.discriminator = discrmnt;\n        });\n    }\n    this.hasDiscriminator = function (well) {\n        let wSpec = getWellSpec(well);\n        return Object.keys(((wSpec || {}).discriminator) || {}).length > 0 && wSpec.discriminator.active;\n    }\n    //--------------\n    this.getDataset = function (well) {\n        wiApi.getCachedWellPromise(well.idWell).then((well) => {\n            self.datasets[well] = well.datasets;\n        }).catch(e => console.error(e));\n    }\n\n    function getCurvesInWell(well) {\n        let curves = [];\n        well.datasets.forEach(dataset => {\n            curves.push(...dataset.curves);\n        });\n        return curves;\n    }\n\n    function getFamilyInWell(well) {\n        let curves = getCurvesInWell(well);\n        let familyList = curves.map(c => wiApi.getFamily(c.idFamily));\n        return familyList;\n    }\n    this.defaultBindings = function () {\n        if (self.token)\n            wiToken.setToken(self.token);\n        self.verticalMargin = 0;\n        self.horizontalMargin = 0;\n        self.isSettingChange = true;\n        self.cpGetMarkerVal = self.cpGetMarkerVal || function (marker, idx) { return marker.value }\n        self.cpSetMarkerVal = self.cpSetMarkerVal || function (marker, idx, newVal) { marker.value = newVal; }\n        self.cpMarkerStyle = self.cpMarkerStyle || function (marker, idx) { return { stroke: marker.color, 'stroke-width': '2', fill: 'none' } }\n        self.cpMarkerName = self.cpMarkerName || function (marker, idx) { return marker.name; }\n        self.ctrlParams = self.ctrlParams || [];\n        //let ctrlParamsGroupByWell = _.groupBy(self.ctrlParams, ctrlParam => ctrlParam.wellName);\n        //for (let ctrlParamsGroupByWellKey in ctrlParamsGroupByWell) {\n        //let ctrlParamGroupByWell = ctrlParamsGroupByWell[ctrlParamsGroupByWellKey];\n        //let ctrlParamsGroup = _.groupBy(ctrlParamGroupByWell, ctrlParam => ctrlParam.$ref);\n        //for (let ctrlParams in ctrlParamsGroup) {\n        //let zoneInfoList = ctrlParamsGroup[ctrlParams].map(ctrlParam => ctrlParam.zoneInfo);\n        //zoneInfoList.forEach((zoneInfo, idx) => {\n        //zoneInfo._idx = idx;\n        //})\n        //}\n        //}\n        self.notCPBackground = self.notCPBackground != undefined ? self.notCPBackground : true;\n        self.ctrlParamsMask = self.ctrlParams.map(c => true);\n        self.cpIcon = self.cpIcon || function (node) {\n            let idx = self.ctrlParams.indexOf(node);\n            if (idx >= 0) {\n                let use = self.ctrlParamsMask[idx];\n                return use ? 'layer-16x16' : 'fa fa-eye-slash';\n            }\n        }\n        self.cpIcons = self.cpIcons || function (node) { return [\"rectangle\"] }\n        self.cpIconStyle = self.cpIconStyle || function (node) {\n            return {\n                'background-color': node.color || 'red'\n            }\n        }\n        self.cpBackground = self.cpBackground || {\n            'background-color': 'rgba(255, 249, 160, 0.6)'\n        };\n\n\n        self.defaultConfig = self.defaultConfig || {};\n        self.wellSpec = self.wellSpec || [];\n        console.log(self.wellSpec)\n        self.selectionType = self.selectionType || 'family-group';\n        self.zonationType = self.zonationType || 'zone' // 'zone' | 'interval';\n        self.interval = self.interval ?? (self.wellSpec.length ? {\n            top: Math.min(...self.wellSpec.map(w => w.datasetTop)),\n            bottom: Math.max(...self.wellSpec.map(w => w.datasetBottom)),\n        } : {\n            top: -9999,\n            bottom: 9999,\n        });\n        self.zoneTree = [];\n        self.zonesetName = self.zonesetName || \"ZonationAll\";\n        self.config = self.config || { family: \"\", grid: true, displayMode: 'bar', colorMode: 'zone', stackMode: self.stackMode || self.noStack ? 'none' : 'well', binGap: 5, title: self.title || '', notShowCumulative: false };\n        self.getToggleGaussianFn = self.config.notUsedGaussian ? self.click2ToggleLogNormalD : self.click2ToggleGaussian;\n        self.getGaussianIconFn = self.config.notUsedGaussian ? self.getLogNormalDIcon : self.getGaussianIcon;\n        self.dragHeader = self.dragHeader || false;\n    }\n    this.exportStatistic = async function () {\n        const perm = await wiApi.checkObjectPermission('project.export').then(res => res && res.value)\n        if (!perm) return __toastr.warning(\"You don't have permission to export\")\n        if (!self.histogramList.length) {\n            let msg = `No statistic data to export`;\n            if (__toastr) __toastr.error(msg);\n            console.error(msg);\n            return;\n        }\n        let rowHeaders = self.getZoneNames();\n        let colHeaders = self.getHeaders();\n        let items = [];\n        let headers = {\n            Layer: 'Layer'\n        };\n\n        colHeaders.forEach((cHeader, cHeaderIdx) => {\n            headers[cHeader] = cHeader;\n        })\n        rowHeaders.forEach((rHeader, rHeaderIdx) => {\n            let item = {\n                \"Layer\": rHeader\n            };\n            colHeaders.forEach((cHeader, cHeaderIdx) => {\n                item[cHeader] = self.statsValue([rHeaderIdx, cHeaderIdx]);\n            })\n            items.push(item);\n        });\n        let fileTitle = self.getConfigTitle();\n        utils.exportCSVFile(headers, items, fileTitle);\n    }\n    this.$onInit = async function () {\n        self.doInit();\n        $timeout(() => {\n            $scope.$watch(() => {\n                let config = angular.copy(self.config);\n                delete config.notShowCumulative;\n                delete config.notUsedGaussian;\n                return config;\n            }, (newVal, oldVal) => {\n                self.isSettingChange = true;\n            }, true);\n            $scope.$watch(() => self.getFamilyTable(), (newVal, oldVal) => {\n                self.familyTable = newVal;\n                getSelectionList(self.selectionType, self.treeConfig);\n                updateDefaultConfig();\n            });\n            $scope.$watch(() => self.getPals(), (newVal, oldVal) => {\n                self.palTable = newVal;\n            });\n            $scope.$watch(() => {\n                return self.wellSpec.map(wsp => {\n                    return `${wsp.idCurve}`;\n                }).join('');\n            }, () => {\n                self.isSettingChange = true;\n                updateDefaultConfig();\n            }, true);\n            $scope.$watch(() => (self.selectionType), (newVal, oldVal) => {\n                if (newVal === oldVal) return;\n                self.isSettingChange = true;\n                self.selectionValue = '';\n                getSelectionList(self.selectionType, self.treeConfig);\n                updateDefaultConfig();\n            });\n            $scope.$watch(() => (self.selectionValue), () => {\n                self.isSettingChange = true;\n                updateDefaultConfig();\n            });\n            $scope.$watch(() => (self.treeConfig.map(w => w.idWell)), () => {\n                self.isSettingChange = true;\n                getSelectionList(self.selectionType, self.treeConfig);\n                getZonesetsFromWells(self.treeConfig);\n                updateDefaultConfig();\n            }, true);\n            $scope.$watch(() => self.zonationType, (val) => {\n                self.isSettingChange = true;\n                if (val === 'interval') {\n                    if (self.wellSpec.length && self.interval.top === -9999 && self.interval.bottom === 9999) {\n                        self.interval.top = Math.min(...self.wellSpec.map(w => w.datasetTop));\n                        self.interval.bottom = Math.max(...self.wellSpec.map(w => w.datasetBottom));\n                    }\n                }\n            });\n            getTrees(() => {\n                $timeout(() => {\n                    self.genHistogramList();\n                }, 500);\n            });\n        }, 500);\n\n    }\n\n    this.onInputSelectionChanged = function (selectedItemProps) {\n        self.selectionValue = (selectedItemProps || {}).name;\n    }\n\n    function getSelectionList(selectionType, wellArray) {\n        let selectionHash = {};\n        let allCurves = [];\n        wellArray.forEach(well => {\n            let curvesInWell = getCurvesInWell(well);\n            allCurves.push(...curvesInWell);\n        });\n        switch (selectionType) {\n            case 'curve':\n                allCurves.forEach(curve => {\n                    selectionHash[curve.name] = 1;\n                })\n                break;\n            case 'family':\n                allCurves.forEach(curve => {\n                    let family = wiApi.getFamily(curve.idFamily);\n                    if (family)\n                        selectionHash[family.name] = 1;\n                })\n                break;\n            case 'family-group':\n                allCurves.forEach(curve => {\n                    let family = wiApi.getFamily(curve.idFamily);\n                    if (family)\n                        selectionHash[family.familyGroup] = 1;\n                })\n                break;\n        }\n        self.selectionList = Object.keys(selectionHash).map(item => ({\n            data: { label: item },\n            properties: { name: item }\n        }));\n        self.selectionList.sort((a, b) => {\n            return a.data.label.localeCompare(b.data.label);\n        })\n    }\n    this.sortableUpdate = function () {\n        $scope.$digest();\n    }\n\n    this.runMatch = function (node, criteria) {\n        let family;\n        if (!criteria) return true;\n        switch (self.selectionType) {\n            case 'family-group':\n                family = wiApi.getFamily(node.idFamily);\n                if (!family) return null;\n                return family.familyGroup.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n            case 'family':\n                family = wiApi.getFamily(node.idFamily);\n                if (!family) return null;\n                return family.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n            case 'curve':\n                return node.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n        }\n    }\n    this.getLabel = function (node) {\n        return node.name;\n    }\n    this.getIcon = function (node) {\n        if (node.idCurve) return 'curve-16x16';\n        if (node.idDataset) return 'curve-data-16x16';\n        if (node.idWell) return 'well-16x16';\n    }\n    this.getChildren = function (node) {\n        if (node.idDataset) {\n            return node.curves;\n        }\n        if (node.idWell) {\n            return node.datasets;\n        }\n        return [];\n    }\n    this.clickFunction = clickFunction;\n    function clickFunction($event, node, selectedObjs, treeRoot) {\n        let wellSpec = self.wellSpec.find(wsp => wsp.idWell === treeRoot.idWell && wsp._idx === treeRoot._idx);\n        wellSpec.idCurve = node.idCurve;\n        wellSpec.idDataset = node.idDataset;\n        wellSpec.curveName = node.Name;\n    }\n    this.refresh = function () {\n        // self.histogramList.length = 0;\n        // self.treeConfig.length = 0;\n        if (self.onReload) {\n            self.onReload(function () {\n                self.isSettingChange = true;\n                getTrees(() => {\n                    self.genHistogramList();\n                });\n            })\n        } else {\n            self.isSettingChange = true;\n            getTrees(() => {\n                self.genHistogramList();\n            });\n        }\n    };\n    async function getTree(wellSpec, callback) {\n        let wellIdx = self.treeConfig.findIndex(wellTree => wellTree.idWell === wellSpec.idWell && wellTree._idx === wellSpec._idx);\n        let well = await wiApi.getCachedWellPromise(wellSpec.idWell);\n        wellSpec.name = well.name;\n        well = Object.assign({}, well);\n        well._idx = wellSpec._idx;\n        $timeout(() => {\n            self.treeConfig.push(well);\n        })\n        return well;\n    }\n    self.getTrees = getTrees;\n    async function getTrees(callback) {\n        wiLoading.show($element.find('.main')[0], self.silent);\n        self.treeConfig = [];\n        for (let w of self.wellSpec) {\n            try {\n                let well = await wiApi.getCachedWellPromise(w.idWell || w);\n                w.name = well.name;\n                well = Object.assign({}, well);\n                well._idx = w._idx;\n                self.treeConfig.push(well);\n            }\n            catch (e) {\n                w.notFound = true;\n                let msg = `Well ${w.name} not found`;\n                if (__toastr) __toastr.error(msg);\n                console.error(e);\n            }\n        }\n        self.wellSpec = self.wellSpec.filter(wellspec => !wellspec.notFound);\n        //if (self.idHistogram) {\n        //self.save();\n        //}\n        if (!$scope.$root.$$phase) $scope.$digest();\n        callback && callback();\n        wiLoading.hide();\n    }\n    function getZonesetsFromWells(wells) {\n        if (!wells.length) return;\n        let zsList;\n        for (let well of wells) {\n            let zonesets = well.zone_sets;\n            if (!zsList) {\n                zsList = angular.copy(zonesets);\n            }\n            else if (zsList.length) {\n                zsList = intersectAndMerge(zsList, zonesets);\n            }\n            else {\n                break;\n            }\n        }\n        self.zonesetList = (zsList || []).map(zs => ({\n            data: {\n                label: zs.name\n            },\n            properties: zs\n        }));\n        self.zonesetList.splice(0, 0, { data: { label: 'ZonationAll' }, properties: genZonationAllZS(0, 1) });\n        let selectedZonesetProps = (self.zonesetList.find(zs => zs.properties.name === self.zonesetName) || {}).properties;\n        if (!selectedZonesetProps) {\n            selectedZonesetProps = self.zonesetList[0].properties;\n        }\n        self.onZonesetSelectionChanged(selectedZonesetProps);\n        if (!$scope.$root.$$phase) $scope.$digest();\n    }\n    function intersectAndMerge(dstZoneList, srcZoneList) {\n        return dstZoneList.filter(zs => {\n            let zoneset = srcZoneList.find(zs1 => zs.name === zs1.name);\n            if (!zoneset) return false;\n            for (let z of zoneset.zones) {\n                let zone = zs.zones.find(zo => zo.zone_template.name == z.zone_template.name);\n                if (!zone) {\n                    zs.zones.push(angular.copy(z));\n                }\n            }\n            return true;\n        });\n    }\n    this.getWellSpec = getWellSpec;\n    function getWellSpec(well) {\n        if (!well) return {};\n        return self.wellSpec.find(wsp => wsp.idWell === well.idWell && wsp._idx === well._idx);\n    }\n    this.getCurve = getCurve;\n    function getCurve(well) {\n        let wellSpec = getWellSpec(well);\n        if (!Object.keys(wellSpec || {}).length\n            || !self.selectionValue) return {};\n        let curves = getCurvesInWell(well).filter(c => self.runMatch(c, self.selectionValue));\n        let curve = wellSpec.idCurve ? (curves.find(c => c.idCurve === wellSpec.idCurve) || curves[0]) : curves[0];\n        if (!curve) {\n            delete wellSpec.curveName;\n            delete wellSpec.idCurve;\n            delete wellSpec.idDataset;\n            delete wellSpec.datasetName;\n            delete wellSpec.datasetTop;\n            delete wellSpec.datasetBottom;\n            delete wellSpec.datasetStep;\n            return;\n        }\n        wellSpec.curveName = curve.name;\n        wellSpec.idCurve = curve.idCurve;\n        wellSpec.idDataset = curve.idDataset;\n\n        let datasets = self.getChildren(well);\n        let dataset = wellSpec.idDataset ? datasets.find(ds => ds.idDataset === wellSpec.idDataset) : datasets[0];\n        wellSpec.datasetName = dataset.name;\n        wellSpec.datasetTop = parseFloat(dataset.top);\n        wellSpec.datasetBottom = parseFloat(dataset.bottom);\n        wellSpec.datasetStep = parseFloat(dataset.step);\n        return curve;\n    }\n    function getZoneset(well, zonesetName = \"\") {\n        let zonesets = well.zone_sets;\n        if (zonesetName === \"\" || zonesetName === \"ZonationAll\")\n            return null;\n        return zonesets.find(zs => zs.name === zonesetName);\n    }\n    this.onZonesetDropdownInit = function (wiDropdownListCtrl) {\n        self.zonesetDropdownCtrl = wiDropdownListCtrl;\n    }\n    this.onZonesetSelectionChanged = function (selectedItemProps) {\n        self.isSettingChange = true;\n        let zones = (selectedItemProps || {}).zones;\n        if (zones && zones.length) {\n            wiApi.indexZonesForCorrelation(zones.sort((a, b) => {\n                return a.startDepth - b.startDepth;\n            }))\n        }\n        self.zoneTree = (selectedItemProps || {}).zones;\n        if (!self.zoneTree || !self.zoneTree.length) return;\n        self.zoneTreeUniq = _.uniqBy(self.zoneTree.map(zone => ({ name: zone.zone_template.name })), zone => {\n            return zone.name;\n        });\n        self.zonesetName = (selectedItemProps || {}).name || 'ZonationAll';\n    }\n    this.runZoneMatch = function (node, criteria) {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = node.zone_template.name.toLowerCase();\n        return searchArray.includes(keySearch);\n    }\n    this.getZoneLabel = function (node) {\n        if (!node || !node.name) {\n            return 'aaa';\n        }\n        //return node.zone_template.name;\n        return node.name;\n    }\n\n    this.getZoneIcon = (node) => ((node && !node._notUsed) ? 'zone-16x16' : 'fa fa-ban')\n    const EMPTY_ARRAY = []\n    this.validPlotRegion = function () {\n        let result = (self.getRight() - self.getLeft());\n        return _.isFinite(result) && result != 0;\n    }\n    this.noChildren = function (node) {\n        return EMPTY_ARRAY;\n    }\n    this.click2ToggleZone = function ($event, node, selectedObjs) {\n        self.isSettingChange = true;\n        node._notUsed = !node._notUsed;\n        node.$meta.render = !node.$meta.render;\n        let zoneTree = self.zoneTree.filter(zone => zone.zone_template.name == node.name);\n        zoneTree.forEach(zone => {\n            zone._notUsed = !zone._notUsed;\n        })\n        self.selectedZones = selectedObjs;\n        $scope.$digest();\n    }\n    this.getZoneTreeMaxHeight = function () {\n        return $element.height();\n    }\n\n    this.click2ToggleLayer = function ($event, node, selectedObjs) {\n        node._notUsed = !node._notUsed;\n        toggleCtrlParams(node, 'layer');\n        self.selectedLayers = selectedObjs.map(obj => obj.data);\n    }\n    function toggleCtrlParams(node, type) {\n        if (self.ctrlParams && self.ctrlParams.length) {\n            self.ctrlParams.forEach((ctrlParam, idx) => {\n                let zoneInfo = ctrlParam.zoneInfo;\n                if (type === 'layer' && node.name.includes(`${ctrlParam.wellName}.${zoneInfo.zone_template.name.replace('All', 'ZonationAll')}(${zoneInfo.__depthIndex || 0})`)) {\n                    self.ctrlParamsMask[idx] = !node._notUsed;\n                } else if (type === 'well' && node.name.includes(`${ctrlParam.wellName}`)) {\n                    self.ctrlParamsMask[idx] = !node._notUsed;\n                }\n            })\n        }\n    }\n    this.click2ToggleCumulative = function ($event, node, selectedObjs) {\n        node._useCmlt = !node._useCmlt;\n        self.setCumulativeData(self.histogramList);\n    }\n    this.click2ToggleGaussian = function ($event, node, selectedObjs) {\n        node._useGssn = !node._useGssn;\n        if (self.config.notUsedGaussian) {\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.setGaussianData(self.histogramList);\n        }\n        self.setCumulativeData(self.histogramList);\n        self.selectedGaussian = selectedObjs.map(obj => obj.data);\n    }\n    this.click2ToggleCtrlParams = function ($event, node, selectedObjs) {\n        let ctrlParamIdx = self.ctrlParams.findIndex(cp => node.$res.name === cp.$res.name && node.zoneInfo.idZone == cp.zoneInfo.idZone);\n        if (ctrlParamIdx >= 0) {\n            self.ctrlParamsMask[ctrlParamIdx] = !self.ctrlParamsMask[ctrlParamIdx];\n            self.selectedCtrlParams = selectedObjs;\n        }\n        self.selectedCtrlParams = selectedObjs.map(obj => obj.data);\n    }\n    this.click2ToggleLogNormalD = function ($event, node, selectedObjs) {\n        node._useLogNormalD = !node._useLogNormalD;\n        self.setLogNormalDFn(self.histogramList);\n    }\n    this.toggleGaussianLine = function (notUsedGaussian) {\n        self.config.notUsedGaussian = notUsedGaussian;\n        if (notUsedGaussian) {\n            self.getToggleGaussianFn = self.click2ToggleLogNormalD;\n            self.getGaussianIconFn = self.getLogNormalDIcon;\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.getToggleGaussianFn = self.click2ToggleGaussian;\n            self.getGaussianIconFn = self.getGaussianIcon;\n            self.setGaussianData(self.histogramList);\n        }\n    }\n\n    this.runCPMatch = function (node, criteria) {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = self.cpMarkerName(node).toLowerCase();\n        return searchArray.includes(keySearch);\n    }\n    this.runLayerMatch = function (node, criteria) {\n        let keySearch = criteria.toLowerCase();\n        let searchArray = node.name.toLowerCase();\n        return searchArray.includes(keySearch);\n    }\n    let _layerTree = [];\n    this.getLayerTree = function () {\n        //if(self.getStackMode() === 'all') {\n        //_layerTree[0] = self.histogramList;\n        //return _layerTree;\n        //}\n        return self.histogramList;\n    }\n    this.getLayerLabel = (node) => node.name\n    this.getLayerIcon = (node) => ((node && !node._notUsed) ? 'layer-16x16' : 'fa fa-eye-slash')\n    this.getLayerIcons = (node) => ([\"rectangle\"])\n    this.getLayerIconStyle = (node) => ({\n        'background-color': node.color\n    })\n    this.getCumulativeIcon = (node) => ((node && node._useCmlt) ? 'layer-16x16' : 'fa fa-eye-slash')\n    this.getCumulativeIcons = (node) => ([\"rectangle\"])\n    this.getCumulativeIconStyle = (node) => ({\n        'background-color': node.color\n    })\n    /*\n    this.getCtrlParamsIcon = function(node) {\n        let idx = self.ctrlParams.indexOf(node);\n        if (idx >= 0) {\n            let use = self.ctrlParamsMask[idx];\n            return use ? 'layer-16x16': 'fa fa-eye-slash';\n        }\n    }\n    this.getCtrlParamsIcons = function (node){ return [\"rectangle\"] }\n    this.getCtrlParamsIconStyle = function(node) {\n        return  {\n            'background-color': self.cpMarkerStyle(node).color\n        }\n    }*/\n    this.getGaussianIcon = function (node) {\n        return (node && node._useGssn) ? 'layer-16x16' : 'fa fa-eye-slash';\n    }\n    this.getLogNormalDIcon = function (node) {\n        return (node && node._useLogNormalD) ? 'layer-16x16' : 'fa fa-eye-slash';\n    }\n    this.getGaussianIcons = (node) => ([\"rectangle\"])\n    this.getGaussianIconStyle = (node) => ({\n        'background-color': node.color\n    })\n    this.getConfigLeft = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.left) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.left, 3);\n    }\n    this.getConfigLimitTop = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.limitTop) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.limitTop, 3);\n    }\n    this.getConfigLimitBottom = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.limitBottom) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.limitBottom, 3);\n    }\n    this.setConfigLimitTop = function (notUse, newValue) {\n        self.config.limitTop = parseFloat(newValue)\n    }\n    this.setConfigLimitBottom = function (notUse, newValue) {\n        self.config.limitBottom = parseFloat(newValue)\n    }\n    this.setConfigLeft = function (notUse, newValue) {\n        self.config.left = parseFloat(newValue);\n    }\n    this.getConfigRight = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.right) ? \"[empty]\" : wiApi.bestNumberFormat(self.config.right, 3);\n    }\n    this.setConfigRight = function (notUse, newValue) {\n        self.config.right = parseFloat(newValue);\n    }\n    this.getConfigDivisions = function () {\n        self.config = self.config || {};\n        return isNaN(self.config.divisions) ? \"[empty]\" : self.config.divisions;\n    }\n    this.setConfigDivisions = function (notUse, newValue) {\n        self.config.divisions = parseInt(newValue);\n    }\n    this.getConfigTitle = function () {\n        self.config = self.config || {};\n        return (self.config.title || \"\").length ? self.config.title : \"New Histogram\";\n    }\n    this.setConfigTitle = function (notUse, newValue) {\n        self.config.title = newValue;\n    }\n    this.getConfigXLabel = function () {\n        self.config = self.config || {};\n        return (self.config.xLabel || \"\").length ? self.config.xLabel : self.selectionValue;\n    }\n    this.setConfigXLabel = function (notUse, newValue) {\n        self.config.xLabel = newValue;\n    }\n    this.getIntervalTop = () => self.interval.top;\n    this.setIntervalTop = (_, v) => {\n        const n = +v;\n        self.interval.top = isFinite(n) ? n : v;\n        self.isSettingChange = true;\n    }\n    this.getIntervalBottom = () => self.interval.bottom;\n    this.setIntervalBottom = (_, v) => {\n        const n = +v;\n        self.interval.bottom = isFinite(n) ? n : v;\n        self.isSettingChange = true;\n    }\n    function clearDefaultConfig() {\n        self.defaultConfig = {};\n    }\n    function updateDefaultConfig() {\n        clearDefaultConfig();\n        self.depthUnitList = ['m', 'ft']\n            .map(u => ({\n                data: { label: u },\n                properties: { name: u },\n            }));\n        self.defaultConfig.depthUnit = 'm';\n        let curve = getCurve(self.treeConfig[0], self.wellSpec[0]);\n        if (!curve) return;\n        let family = wiApi.getFamily(curve.idFamily);\n        if (!family) return;\n        wiApi.getListUnit({\n            idFamily: family.idFamily,\n            idCurve: curve.idCurve\n        }).then(res => {\n            self.xUnitList = res;\n            self.defaultConfig.left = isNaN(family.family_spec[0].minScale) ? 0 : family.family_spec[0].minScale;\n            self.defaultConfig.right = isNaN(family.family_spec[0].maxScale) ? 100 : family.family_spec[0].maxScale;\n            self.defaultConfig.loga = family.family_spec[0].displayType.toLowerCase() === 'logarithmic';\n            self.xUnitList = self.xUnitList.map(item => ({\n                data: { label: item.name },\n                properties: { name: item.name }\n            }))\n            self.defaultConfig.xUnit = family.family_spec[0].unit;\n            if (family.idFamily != self.config.idFamily) {\n                self.config.idFamily = family.idFamily;\n                // delete self.config.xUnit;\n                self.config.xUnit = curve.unit;\n                delete self.config.left;\n                delete self.config.right;\n            }\n        })\n    }\n    this.onUnitChange = function (selectedItemProps) {\n        let oldUnit = self.config.xUnit;\n        self.config.xUnit = (selectedItemProps || {}).name;\n        self.config.left = wiApi.convertUnit(self.getLeft(), oldUnit, self.config.xUnit).toFixed(4);\n        self.config.right = wiApi.convertUnit(self.getRight(), oldUnit, self.config.xUnit).toFixed(4);\n    }\n    this.onDepthUnitChange = function (selectedItemProps) {\n        self.config.depthUnit = (selectedItemProps || {}).name;\n    }\n\n    this.histogramList = [];\n    let flattenHistogramList = [];\n    let listWellStats = [];\n    let listAllStats = [];\n    this.genHistogramList = async function () {\n        if (!self.isSettingChange) return;\n        self.isSettingChange = false;\n        let preLayers = self.histogramList.map(layer => layer.name);\n        //console.log(layer.name)\n        this.histogramList.length = 0;\n        let allHistogramList = []\n        listWellStats.length = 0;\n        listAllStats.length = 0;\n        _histogramGen = null;\n        wiLoading.show($element.find('.main')[0], self.silent);\n\n        let allZones = [];\n        let allDataArray = [];\n        let zoneBinsList = [];\n        try {\n            for (let i = 0; i < self.treeConfig.length; i++) {\n                let well = self.treeConfig[i];\n                let wellSpec = getWellSpec(well);\n                if (well._notUsed) {\n                    continue;\n                }\n                let curve = getCurve(well, self.wellSpec[i]);\n                if (!curve) {\n                    continue;\n                }\n                let datasetTop = self.wellSpec[i].datasetTop;\n                let datasetBottom = self.wellSpec[i].datasetBottom;\n                let datasetStep = self.wellSpec[i].datasetStep;\n                let dataset = well.datasets.find(ds => ds.idDataset === self.wellSpec[i].idDataset);\n\n                let zoneset = getZoneset(well, self.zonesetName);\n                // interval\n                const isInterval = self.zonationType === 'interval';\n                let top = datasetTop, bottom = datasetBottom;\n                if (isInterval) {\n                    top = self.interval.top;\n                    bottom = self.interval.bottom;\n                }\n                zoneset = isInterval ? genZonationAllZS(top, bottom, utils.getWellColor(well), 'Interval')\n                    : zoneset || genZonationAllZS(top, bottom, utils.getWellColor(well), isInterval ? 'Interval' : undefined);\n\n                let curveData = await wiApi.getCachedCurveDataPromise(curve.idCurve);\n                if (self.hasDiscriminator(well)) {\n                    let discriminatorCurve = await wiApi.evalDiscriminatorPromise(dataset, self.wellSpec[i].discriminator);\n                    curveData = curveData.filter((d, idx) => discriminatorCurve[idx]);\n                }\n                curveData = curveData\n                    .filter(d => _.isFinite(d.x))\n                    .map(d => ({\n                        ...d,\n                        depth: datasetStep > 0 ? (datasetTop + d.y * datasetStep) : d.y\n                    }));\n                const zoneTree = isInterval ? zoneset.zones : self.zoneTree;\n                let zones = zoneset.zones.filter(zone => {\n                    let z = zoneTree.find(z1 => {\n                        return z1.zone_template.name === zone.zone_template.name\n                    });\n                    return !z._notUsed;\n                }).sort((a, b) => a.startDepth - b.startDepth);\n                wiApi.indexZonesForCorrelation(zones);\n\n                if (self.getStackMode() === 'all') {\n                    allZones = [...allZones, ...zones];\n                }\n                let wellHistogramList = [];\n                let wellDataArray = [];\n                let layerIdx = 0;\n                for (let j = 0; j < zones.length; j++) {\n                    let zone = zones[j];\n                    if (self.ctrlParams && self.ctrlParams.length && !isCtrlParamsIncludeZone(zone, j)) continue;\n                    let dataArray = filterData(curveData, zone);\n                    let destUnit = self.config.xUnit || self.defaultConfig.xUnit;\n                    if (curve.unit != destUnit) {\n                        dataArray = dataArray.map(data => ({\n                            y: data.y,\n                            depth: data.depth,\n                            x: wiApi.convertUnit(data.x, curve.unit, self.config.xUnit || self.defaultConfig.xUnit)\n                        }))\n                    }\n                    dataArray.top = zone.startDepth;\n                    dataArray.bottom = zone.endDepth;\n                    if (self.getStackMode() === 'well') {\n                        wellDataArray = [...wellDataArray, ...dataArray];\n                    } else if (self.getStackMode() === 'all') {\n                        allDataArray = [...allDataArray, ...dataArray];\n                    }\n                    let bins = genBins(dataArray);\n                    bins.color = self.getColor(zone, well, layerIdx);\n                    bins.name = `${well.name}.${zone.zone_template.name}(${j})`;\n\n                    bins.stats = {};\n                    switch (self.getStackMode()) {\n                        case 'none':\n                            bins.stats.curveInfo = `${curve.name}`;\n                            break;\n                        case 'all':\n                            bins.stats.curveInfo = `${well.name}.${curve.name}`;\n                            break;\n                    }\n                    bins.stats.conditionExpr = wellSpec.discriminator && wellSpec.discriminator.active ? wellSpec.discriminator.conditionExpr : undefined;\n                    bins.stats.top = zone.startDepth;\n                    bins.stats.bottom = zone.endDepth;\n                    let stats = setStats(dataArray.map(d => d.x));\n                    Object.assign(bins.stats, stats);\n                    if (self.getStackMode() === 'zone') {\n                        let zoneExisted = zoneBinsList.find(zbl => zbl.name.includes(zone.zone_template.name));\n                        if (!zoneExisted) {\n                            zoneExisted = [];\n                            zoneBinsList.push(zoneExisted);\n                            zoneExisted.name = `${zone.zone_template.name}`;\n                            if (self.getColorMode() === 'zone') {\n                                zoneExisted.color = self.getColor(zone, well);\n                            } else {\n                                zoneExisted.color = utils.getWellColor(well);\n                            }\n                        }\n                        zoneExisted.push(bins);\n                    }\n                    wellHistogramList.push(bins);\n                    layerIdx++;\n                }\n                if (self.getStackMode() === 'well') {\n                    let stats = setStats(wellDataArray.map(d => d.x));\n                    stats.top = d3.min(zones, z => z.startDepth);\n                    stats.bottom = d3.max(zones, z => z.endDepth);\n                    stats.curveInfo = `${curve.name}`;\n                    stats.conditionExpr = wellSpec.discriminator && wellSpec.discriminator.active ? wellSpec.discriminator.conditionExpr : undefined;\n                    listWellStats.push(stats);\n                    wellHistogramList.name = well.name;\n                    wellHistogramList.color = utils.getWellColor(well);\n                    allHistogramList.push(wellHistogramList);\n                } else {\n                    allHistogramList.push(...wellHistogramList);\n                }\n            }\n            allHistogramList.name = 'All';\n            let max = 0;\n            let maxPercentage = 0;\n            let flatten = [];\n            switch (self.getStackMode()) {\n                case 'none':\n                    for (let bins of allHistogramList) {\n                        let maybeMax = d3.max(bins.map(b => b.length));\n                        max = (max > maybeMax) ? max : maybeMax;\n                        const maybeMaxPercentage = maybeMax / _.sum(bins.map(b => b.length));\n                        maxPercentage = (maxPercentage > maybeMaxPercentage) ? maxPercentage : maybeMaxPercentage;\n                    }\n                    flatten = allHistogramList;\n                    break;\n                case 'well':\n                    {\n                        for (let groupOfBins of allHistogramList) {\n                            let aggregate = aggregateHistogramList(groupOfBins);\n                            let maybeMax = d3.max(aggregate);\n                            max = (max > maybeMax) ? max : maybeMax;\n                            const maybeMaxPercentage = maybeMax / _.sum(aggregate);\n                            maxPercentage = (maxPercentage > maybeMaxPercentage) ? maxPercentage : maybeMaxPercentage;\n                            flatten = flatten.concat(groupOfBins);\n                        }\n                    }\n                    break;\n                case 'zone':\n                    {\n                        for (let groupOfBins of zoneBinsList) {\n                            let fullData = [];\n                            const bins = groupOfBins.flat();\n                            for (let i = 0; i < bins.length; i++) {\n                                fullData = fullData.concat(bins[i]);\n                            }\n                            groupOfBins.stats = setStats(fullData);\n                            groupOfBins.stats.top = _.min(groupOfBins.map(gob => gob.stats.top));\n                            groupOfBins.stats.bottom = _.max(groupOfBins.map(gob => gob.stats.bottom));\n                            let aggregate = aggregateHistogramList(groupOfBins);\n                            let maybeMax = d3.max(aggregate);\n                            max = (max > maybeMax) ? max : maybeMax;\n                            const maybeMaxPercentage = maybeMax / _.sum(aggregate);\n                            maxPercentage = (maxPercentage > maybeMaxPercentage) ? maxPercentage : maybeMaxPercentage;\n                        }\n                        allHistogramList = zoneBinsList;\n                        flatten = zoneBinsList;\n                    }\n                    break;\n                case 'all':\n                    {\n                        let aggregate = aggregateHistogramList(allHistogramList);\n                        max = d3.max(aggregate);\n                        const maybeMaxPercentage = max / _.sum(aggregate);\n                        maxPercentage = (maxPercentage > maybeMaxPercentage) ? maxPercentage : maybeMaxPercentage;\n                        flatten = allHistogramList;\n                        let stats = setStats(allDataArray.map(d => d.x));\n                        stats.top = d3.min(allZones, z => z.startDepth);\n                        stats.bottom = d3.max(allZones, z => z.endDepth);\n                        listAllStats.push(stats);\n                    }\n                    break;\n            }\n            $timeout(() => {\n                self.minY = 0;\n                self.maxY = max;\n                if (self.getHistogramMode() === 'percentage') {\n                    self.maxPercentage = maxPercentage * 100;\n                }\n                if (self.getStackMode() == 'all') {\n                    if (self.getDisplayMode() == 'line') {\n                        let arr = [];\n                        for (let i = 0; i < allHistogramList.length; i++) {\n                            const bins = allHistogramList[i];\n                            for (let j = 0; j < bins.length; j++) {\n                                const bin = bins[j];\n                                arr[j] = (arr[j] || []).concat(bin);\n                                arr[j].x0 = bin.x0;\n                                arr[j].x1 = bin.x1;\n                            }\n                        }\n                        arr.name = allHistogramList.name;\n                        self.histogramList = [arr];\n                    } else {\n                        self.histogramList = [allHistogramList];\n                    }\n                } else {\n                    self.histogramList = allHistogramList;\n                    if (self.getDisplayMode() == 'line') {\n                        if (self.getStackMode() == 'well') {\n                            let arr = [];\n                            allHistogramList.forEach((well, wellIdx) => {\n                                let bins = [];\n                                well.forEach((zone, zoneIdx) => {\n                                    zone.forEach((bin, binIdx) => {\n                                        bins[binIdx] = (bins[binIdx] || []).concat(bin);\n                                        bins[binIdx].x0 = bin.x0;\n                                        bins[binIdx].x1 = bin.x1;\n                                    })\n                                })\n                                bins.color = utils.getWellColor(well);\n                                bins.name = well.name;\n                                arr.push(bins);\n                            })\n                            self.histogramList = arr;\n                        } else if (self.getStackMode() == 'zone') {\n                            self.histogramList = allHistogramList.map(zone => {\n                                const bins = [];\n                                zone.forEach(gob => {\n                                    gob.forEach((bin, i) => {\n                                        bins[i] = (bins[i] || []).concat(bin);\n                                        bins[i].x0 = bin.x0;\n                                        bins[i].x1 = bin.x1;\n                                    })\n                                })\n                                bins.color = zone.color;\n                                bins.name = zone.name;\n                                return bins;\n                            });\n                        }\n                    }\n                }\n                flattenHistogramList = flatten;\n                self.setCumulativeData(self.histogramList);\n                self.setGaussianData(self.histogramList);\n            });\n        }\n        catch (e) {\n            console.error(e);\n        }\n        wiLoading.hide();\n    }\n    function isCtrlParamsIncludeZone(zone, layerIdx) {\n        let toReturn = self.ctrlParams.some((ctrlParam, ctrlParamIdx) => {\n            let zoneInfo = ctrlParam.zoneInfo;\n            return zone.zone_template.name === zoneInfo.zone_template.name.replace('All', 'ZonationAll') && layerIdx === (zoneInfo.__depthIndex || 0);\n        })\n        return toReturn;\n    }\n    function setStats(dataArray) {\n        let stats = {};\n        try {\n            stats.numPoints = dataArray.length;\n            stats.avg = d3.mean(dataArray);\n            stats.min = d3.min(dataArray);\n            stats.max = d3.max(dataArray);\n            stats.stddev = d3.deviation(dataArray);\n            stats.avgdev = calAverageDeviation(dataArray);\n            stats.var = d3.variance(dataArray);\n            stats.median = d3.median(dataArray);\n            stats.skew = dataArray.length >= 3 ? ss.sampleSkewness(dataArray) : undefined;\n            stats.kurtosis = dataArray.length >= 4 ? ss.sampleKurtosis(dataArray) : undefined;\n            stats.p10 = calPercentile(dataArray, 0.1);\n            stats.p50 = calPercentile(dataArray, 0.5);\n            stats.p90 = calPercentile(dataArray, 0.9);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return stats;\n    }\n    function calAverageDeviation(data) {\n        if (data.length < 1) return;\n        let mean = d3.mean(data);\n\n        return d3.mean(data, function (d) {\n            return Math.abs(d - mean)\n        }).toFixed(_DECIMAL_LEN);\n    }\n    function calPercentile(data, p) {\n        if (data.length < 1) return;\n        return d3.quantile(data.sort(function (a, b) {\n            return a - b;\n        }), p).toFixed(_DECIMAL_LEN);\n    }\n    function aggregateHistogramList(histogramList) {\n        let aggregate = [];\n        for (let bins of histogramList) {\n            for (let j = 0; j < bins.length; j++) {\n                aggregate[j] = ((aggregate[j] || 0) + bins[j].length);\n            }\n        }\n        return aggregate;\n    }\n    function genZonationAllZS(top, bottom, color = 'blue', name = 'ZonationAll') {\n        return {\n            name,\n            zones: [{\n                startDepth: top,\n                endDepth: bottom,\n                zone_template: {\n                    name,\n                    background: color\n                }\n            }]\n        }\n    }\n    this.genBins = genBins;\n    function genBins(pointset) {\n        let divisions = self.getDivisions();\n        let loga = self.getLoga();\n        let histogramGen = getHistogramFn(divisions, loga);\n        return histogramGen(pointset.map(d => d.x));\n    }\n    var _histogramGen;\n    function getHistogramFn(divisions, loga) {\n        if (!_histogramGen) {\n            let left = self.getLeft();\n            let right = self.getRight();\n            let divisions = self.getDivisions();\n            let domain = d3.extent([left, right]);\n            let thresholds;\n            if (!loga) {\n                thresholds = d3.range(domain[0], domain[1], (domain[1] - domain[0]) / divisions);\n            }\n            else {\n                let logMinVal = Math.log10(domain[0] || 0.01);\n                let logMaxVal = Math.log10(domain[1] || 0.01);\n                thresholds = d3.range(logMinVal, logMaxVal, (logMaxVal - logMinVal) / divisions).map(v => Math.pow(10, v));\n            }\n            _histogramGen = d3.histogram().domain(domain).thresholds(thresholds);\n        }\n        return _histogramGen;\n    }\n    function filterData(curveData, zone) {\n        return curveData.filter(d => ((zone.startDepth - d.depth) * (zone.endDepth - d.depth) <= 0));\n    }\n    function getCorrectValue(val1, val2) {\n        return _.isFinite(+val1) ? +val1 : val2;\n    }\n    this.getLeft = () => {\n        if (self.config.flipHorizontal) {\n            return getCorrectValue(getCorrectValue(self.config.right, self.defaultConfig.right), 1);\n        }\n        return getCorrectValue(getCorrectValue(self.config.left, self.defaultConfig.left), 0);\n    }\n    this.getRight = () => {\n        if (self.config.flipHorizontal) {\n            return getCorrectValue(getCorrectValue(self.config.left, self.defaultConfig.left), 1);\n        }\n        return getCorrectValue(getCorrectValue(self.config.right, self.defaultConfig.right), 0);\n    }\n    this.getMaxY = () => {\n        return self.getHistogramMode() === 'percentage'\n            ? _.ceil(self.maxPercentage, -1)\n            : self.maxY > 1 ? _.ceil(self.maxY, -1 * self.maxY.toString().length + 1) : self.maxY;\n    }\n    this.getLoga = () => (self.config.loga === undefined ? self.defaultConfig.loga : self.config.loga)\n    this.getMajor = () => (isNaN(self.config.major) ? (self.defaultConfig.major || 5) : self.config.major)\n    this.getMinor = () => (isNaN(self.config.minor) ? (self.defaultConfig.minor || 1) : self.config.minor)\n    this.getNotUsedGaussian = () => { self.config.notUsedGaussian || false };\n    this.getDivisions = () => (self.config.divisions || self.defaultConfig.divisions || 35)\n    this.getColorMode = () => (self.config.colorMode || self.defaultConfig.colorMode || 'zone')\n    this.getColor = (zone, well, layerIdx) => {\n        let cMode = self.getColorMode();\n        switch (cMode) {\n            case 'zone':\n                return zone.zone_template.background;\n            case 'index':\n                if (!layerIdx) {\n                    return zone.zone_template.background;\n                }\n                let palette = self.palTable.RandomColor || self.palTable.HFU;\n                return utils.palette2RGB(palette[layerIdx % palette.length], false);\n            default:\n                return cMode === 'well' ? utils.getWellColor(well) : 'blue';\n        }\n    }\n    this.getDisplayMode = () => (self.config.displayMode || self.defaultConfig.displayMode || 'bar')\n    this.getStackMode = () => {\n        if (self.noStack) return 'none';\n        //return self.getDisplayMode() === 'bar'?(self.config.stackMode||self.defaultConfig.stackMode||'none'):'none'\n        return self.config.stackMode || self.defaultConfig.stackMode || 'none'\n    }\n    this.getBinGap = () => (self.config.binGap || self.defaultConfig.binGap)\n    this.getBinX = (bin) => ((bin.x0 + bin.x1) / 2)\n    this.getBinY = (bin) => (bin.length)\n    this.setConfigMajor = function (notUse, newValue) {\n        self.config.major = parseFloat(newValue);\n    }\n    this.setConfigMinor = function (notUse, newValue) {\n        self.config.minor = parseFloat(newValue);\n    }\n\n    this.colorFn = function (bin, bins) {\n        if (self.getStackMode() === 'none');\n        if (!bins) return;\n        return bins.color;\n    }\n\n    this.save = function () {\n        if (!self.idHistogram) {\n            wiDialog.promptDialog({\n                title: 'New Histogram',\n                inputName: 'Histogram Name',\n                input: self.getConfigTitle(),\n            }, function (name) {\n                let type = 'HISTOGRAM';\n                let content = {\n                    wellSpec: self.wellSpec,\n                    zonesetName: self.zonesetName,\n                    selectionType: self.selectionType,\n                    selectionValue: self.selectionValue,\n                    zonationType: self.zonationType,\n                    config: self.config\n                }\n                wiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\n                    self.idHistogram = res.idParameterSet;\n                    self.onSave && self.onSave(res);\n                    __toastr && __toastr.success('Successfully saved Histogram ' + name)\n                    self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n                }).catch(e => {\n                    if (!e.message.includes('exist')) return\n                    let msg = `Asset ${name} has been existed`;\n                    if (__toastr) __toastr.warning(msg);\n                    self.save();\n                })\n            });\n        }\n        else {\n            let type = 'HISTOGRAM';\n            let content = {\n                idParameterSet: self.idHistogram,\n                wellSpec: self.wellSpec,\n                zonesetName: self.zonesetName,\n                selectionType: self.selectionType,\n                selectionValue: self.selectionValue,\n                zonationType: self.zonationType,\n                config: self.config\n            }\n            wiApi.editAssetPromise(self.idHistogram, content).then(res => {\n                console.log(res);\n                __toastr && __toastr.success('Successfully saved Histogram ' + res.name)\n                self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n            }).catch(e => {\n                if (!e.message.includes('exist')) return\n                let msg = `Asset ${name} has been existed`;\n                if (__toastr) __toastr.warning(msg);\n                self.save();\n            });\n        }\n    }\n    this.saveAs = function () {\n        console.log(\"saveAs\");\n        wiDialog.promptDialog({\n            title: 'Save As Histogram',\n            inputName: 'Histogram Name',\n            input: '',\n        }, function (name) {\n            let type = 'HISTOGRAM';\n            let content = {\n                wellSpec: self.wellSpec,\n                zonesetName: self.zonesetName,\n                selectionType: self.selectionType,\n                selectionValue: self.selectionValue,\n                zonationType: self.zonationType,\n                config: self.config\n            }\n            wiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\n                self.onSaveAs && self.onSaveAs(res);\n                __toastr && __toastr.success('Successfully saved Histogram ' + name)\n                self.afterNewPlotCreated && self.afterNewPlotCreated(res);\n            })\n                .catch(e => {\n                    if (!e.message.includes('exist')) return\n                    let msg = `Asset ${name} has been existed`;\n                    if (__toastr) __toastr.warning(msg);\n                    self.saveAs();\n                })\n        });\n    }\n\n    let _zoneNames = []\n    self.getZoneNames = function () {\n        _zoneNames.length = 0;\n        Object.assign(_zoneNames, self.histogramList.map(bins => bins.name));\n        return _zoneNames;\n    }\n    this.isLayerUsed = function ($index) {\n        return !self.histogramList[$index]._notUsed;\n    }\n    self.getStatsRowIcons = function (rowIdx) {\n        return ['rectangle'];\n    }\n    self.getStatsIconStyle = function (rowIdx) {\n        return {\n            'background-color': self.histogramList[rowIdx].color\n        }\n    }\n    self.statsValue = function ([row, col]) {\n        let statsArray = [];\n        switch (self.getStackMode()) {\n            case 'none':\n                statsArray = flattenHistogramList.map(e => e.stats);\n                break;\n            case 'well':\n                statsArray = [...listWellStats];\n                break;\n            case 'zone':\n                statsArray = flattenHistogramList.map(e => e.stats);\n                break;\n            case 'all':\n                statsArray = [...listAllStats];\n                //statsArray = flattenHistogramList.map(e => e.stats);\n                break;\n            default:\n                statsArray = [];\n        }\n\n        try {\n            switch (_headers[col]) {\n                case 'X-Axis':\n                    return statsArray[row].curveInfo || 'N/A';\n                case 'Filter':\n                    return statsArray[row].conditionExpr || 'N/A';\n                case 'Top':\n                    let top = statsArray[row].top;\n                    if (isNaN(top)) return 'N/A';\n                    top = wiApi.convertUnit(top, 'm', self.config.depthUnit)\n                    return wiApi.bestNumberFormat(top, 4);\n                case 'Bottom':\n                    let bottom = statsArray[row].bottom;\n                    if (isNaN(bottom)) return 'N/A';\n                    bottom = wiApi.convertUnit(bottom, 'm', self.config.depthUnit)\n                    return wiApi.bestNumberFormat(bottom, 4);\n                case 'Points':\n                    return isNaN(statsArray[row].numPoints) ? 'N/A' : statsArray[row].numPoints;\n                case 'Avg':\n                    return isNaN(statsArray[row].avg) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].avg, 4);\n                case 'Min':\n                    return isNaN(statsArray[row].min) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].min, 4);\n                case 'Max':\n                    return isNaN(statsArray[row].max) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].max, 4);\n                case 'Avgdev':\n                    return isNaN(statsArray[row].avgdev) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].avgdev, 4);\n                case 'Stddev':\n                    return isNaN(statsArray[row].stddev) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].stddev, 4);\n                case 'Var':\n                    return isNaN(statsArray[row].var) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].var, 4);\n                case 'Skew':\n                    return isNaN(statsArray[row].skew) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].skew, 4);\n                case 'Kurtosis':\n                    return isNaN(statsArray[row].kurtosis) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].kurtosis, 4);\n                case 'Median':\n                    return isNaN(statsArray[row].median) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].median, 4);\n                case 'P10':\n                    return isNaN(statsArray[row].p10) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].p10, 4);\n                case 'P50':\n                    return isNaN(statsArray[row].p50) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].p50, 4);\n                case 'P90':\n                    return isNaN(statsArray[row].p90) ? 'N/A' : wiApi.bestNumberFormat(statsArray[row].p90, 4);\n                default:\n                    return \"this default\";\n            }\n        } catch {\n            return 'N/A';\n        }\n    }\n    let _headers = [];\n    self.getHeaders = function () {\n        _headers.length = 0;\n        Object.assign(_headers, self.statisticHeaders.filter((item, idx) => self.statisticHeaderMasks[idx]));\n        return _headers;\n    }\n    this.hideSelectedGaussian = function () {\n        if (!self.selectedGaussian) return;\n        self.selectedGaussian.forEach(gaussian => gaussian._useGssn = false);\n        if (self.config.notUsedGaussian) {\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.setGaussianData(self.histogramList);\n        }\n        self.setCumulativeData(self.histogramList);\n    }\n    this.showSelectedGaussian = function () {\n        if (!self.selectedGaussian) return;\n        self.selectedGaussian.forEach(gaussian => gaussian._useGssn = true);\n        if (self.config.notUsedGaussian) {\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.setGaussianData(self.histogramList);\n        }\n        self.setCumulativeData(self.histogramList);\n    }\n    this.hideAllGaussian = function () {\n        self.histogramList.forEach(gaussian => gaussian._useGssn = false);\n        if (self.config.notUsedGaussian) {\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.setGaussianData(self.histogramList);\n        }\n        self.setCumulativeData(self.histogramList);\n    }\n    this.showAllGaussian = function () {\n        self.histogramList.forEach(gaussian => gaussian._useGssn = true);\n        if (self.config.notUsedGaussian) {\n            self.setLogNormalDFn(self.histogramList);\n        } else {\n            self.setGaussianData(self.histogramList);\n        }\n        self.setCumulativeData(self.histogramList);\n    }\n    this.hideSelectedLayer = function () {\n        if (!self.selectedLayers) return;\n        self.selectedLayers.forEach(layer => {\n            layer._notUsed = true;\n            toggleCtrlParams(layer, 'layer');\n        });\n    }\n    this.showSelectedLayer = function () {\n        if (!self.selectedLayers) return;\n        self.selectedLayers.forEach(layer => {\n            layer._notUsed = false;\n            toggleCtrlParams(layer, 'layer');\n        });\n        $timeout(() => {});\n    }\n    this.hideAllLayer = function () {\n        self.histogramList.forEach(bins => {\n            bins._notUsed = true;\n            toggleCtrlParams(bins, 'layer');\n        });\n        $timeout(() => {});\n    }\n    this.showAllLayer = function () {\n        self.histogramList.forEach(bins => {\n            bins._notUsed = false;\n            toggleCtrlParams(bins, 'layer');\n        });\n        $timeout(() => {});\n    }\n    this.hideAllCtrlParams = function () {\n        $timeout(() => {\n            self.ctrlParamsMask = self.ctrlParamsMask.map(m => false);\n        });\n    }\n    this.showAllCtrlParams = function () {\n        //self.ctrlParamsMask.forEach(m => m = true);\n        $timeout(() => {\n            self.ctrlParamsMask = self.ctrlParamsMask.map(m => true);\n        });\n    }\n    this.hideSelectedCtrlParams = function () {\n        if (!self.selectedCtrlParams) return;\n        self.selectedCtrlParams.forEach(cp => {\n            cp = cp.data;\n            let ctrlParamIdx = self.ctrlParams.findIndex(cpI => cp.$res.name === cpI.$res.name && cp.zoneInfo.idZone == cpI.zoneInfo.idZone);\n            if (ctrlParamIdx >= 0) {\n                self.ctrlParamsMask[ctrlParamIdx] = false;\n            }\n        });\n    }\n    this.showSelectedCtrlParams = function () {\n        if (!self.selectedCtrlParams) return;\n        self.selectedCtrlParams.forEach(cp => {\n            cp = cp.data;\n            let ctrlParamIdx = self.ctrlParams.findIndex(cpI => cp.$res.name === cpI.$res.name && cp.zoneInfo.idZone == cpI.zoneInfo.idZone);\n            if (ctrlParamIdx >= 0) {\n                self.ctrlParamsMask[ctrlParamIdx] = true;\n            }\n        });\n        $timeout(() => {});\n    }\n\n    //--------------\n\n    this.hideSelectedZone = function () {\n        if (!self.selectedZones) return;\n        self.selectedZones.forEach(zone => {\n            zone._notUsed = true;\n            zone.$meta.render = !zone.$meta.render;\n            let zoneTree = self.zoneTree.filter(zoneI => zoneI.zone_template.name == zone.name);\n            zoneTree.forEach(zoneI => {\n                zoneI._notUsed = true;\n            })\n        });\n        $scope.$digest();\n    }\n    this.showSelectedZone = function () {\n        if (!self.selectedZones) return;\n        self.selectedZones.forEach(zone => {\n            zone._notUsed = false;\n            zone.$meta.render = !zone.$meta.render;\n            let zoneTree = self.zoneTree.filter(zoneI => zoneI.zone_template.name == zone.name);\n            zoneTree.forEach(zoneI => {\n                zoneI._notUsed = false;\n            })\n        });\n        $scope.$digest();\n    }\n    this.hideAllZone = function () {\n        self.zoneTreeUniq.forEach(zone => {\n            zone._notUsed = true;\n            zone.$meta.render = !zone.$meta.render;\n        });\n        self.zoneTree.forEach(zone => zone._notUsed = true);\n        $timeout(() => {});\n    }\n    this.showAllZone = function () {\n        self.isSettingChange = true;\n        self.zoneTreeUniq.forEach(zone => {\n            zone._notUsed = false;\n            zone.$meta.render = !zone.$meta.render;\n        });\n        self.zoneTree.forEach(zone => zone._notUsed = false);\n        $timeout(() => {});\n    }\n    this.onDrop = function (event, helper, myData) {\n        let idWells = helper.data('idWells');\n        if (idWells && idWells.length) {\n            $timeout(() => {\n                async.eachSeries(idWells, (idWell, next) => {\n                    wiApi.getCachedWellPromise(idWell)\n                        .then(well => {\n                            let zonesets = well.zone_sets;\n                            let hasZonesetName = self.zonesetName != 'ZonationAll' ? zonesets.some(zs => zs.name == self.zonesetName) : true;\n                            if (hasZonesetName) {\n                                let _idx = _.max(self.wellSpec.filter(ws => ws.idWell === idWell).map(ws => ws._idx));\n                                _idx = (_idx >= 0 ? _idx : -1) + 1;\n                                self.wellSpec.push({ idWell, _idx });\n                                let wellTree = getTree(self.wellSpec[self.wellSpec.length - 1]);\n                                let curve = getCurve({ ...well, _idx });\n                                if (!curve) {\n                                    let msg = `Well ${well.name} does not meet requirement`;\n                                    if (__toastr) __toastr.warning(msg);\n                                    console.warn(msg);\n                                }\n                            } else {\n                                let msg = `Well ${well.name} does not meet input Zone ${self.zonesetName}`;\n                                if (__toastr) __toastr.warning(msg);\n                                console.warn(msg);\n                            }\n                            next(null);\n                        })\n                        .catch(e => {\n                            console.error(e);\n                            next(e);\n                        })\n                }, err => {\n                    if (err) {\n                        console.error(err);\n                    }\n                })\n            })\n        }\n    }\n    this.toggleWell = function (well) {\n        self.isSettingChange = true;\n        well._notUsed = !well._notUsed;\n        toggleCtrlParams(well, 'well');\n    }\n    this.removeWell = function (well) {\n        let index = self.wellSpec.findIndex(wsp => wsp.idWell === well.idWell && wsp._idx === well._idx);\n        if (index >= 0) {\n            $timeout(() => {\n                self.wellSpec.splice(index, 1);\n                let wellTreeIdx = self.treeConfig.findIndex(wTI => wTI.idWell === well.idWell && wTI._idx === well._idx);\n                self.treeConfig.splice(wellTreeIdx, 1);\n            })\n        }\n        //getTrees();\n    }\n\n    this.cmltLineData = [];\n    function getLayerUseGssn() {\n        let layers = self.histogramList.filter(layer => layer._useGssn);\n        return layers.length;\n    }\n    this.condition4CumulativeLine = function () {\n        return getLayerUseGssn() && self.cmltLineData.length && !self.config.notShowCumulative;\n    }\n    this.setCumulativeData = function (layers) {\n        self.cmltLineData.length = 0;\n        if (!layers.length) return;\n        layers = layers.filter(l => l._useGssn);\n        if (self.getStackMode() === 'well' ||\n            self.getStackMode() === 'zone' ||\n            self.getStackMode() === 'all') layers = layers.flat();\n        let newData = [];\n        for (let i = 0; i < self.getDivisions(); i++) {\n            let elem = [];\n            for (let j = 0; j < layers.length; j++) {\n                elem = [...elem, ...layers[j][i]];\n                elem.x0 = layers[j][i].x0;\n                elem.x1 = layers[j][i].x1;\n            }\n            newData.push(elem);\n        }\n        newData.totalPoint = _.sum(newData.map(d => d.length));\n        let cumulativeVal = 0;\n        newData.forEach(l => {\n            cumulativeVal += l.length;\n            self.cmltLineData.push({\n                x: (l.x0 + l.x1) / 2,\n                y: (cumulativeVal / newData.totalPoint) * self.maxY\n            });\n            self.cmltLineData.color = self.cmltLineData.color || colorGenerator();\n            self.cmltLineData.width = self.cmltLineData.width || 2;\n        })\n    }\n    this.condition4GaussianLine = function () {\n        return getLayerUseGssn() && Object.keys(self.gaussianLine || {}).length && !self.config.notUsedGaussian;\n    }\n    this.setGaussianData = function (layers) {\n        self.gaussianLine = self.gaussianLine || {};\n        if (!layers.length) {\n            self.gaussianLine._notUsed = true;\n            return;\n        }\n        layers = layers.filter(l => l._useGssn);\n        self.gaussianLine._notUsed = false;\n        if (self.getStackMode() === 'well' ||\n            self.getStackMode() === 'zone' ||\n            self.getStackMode() === 'all') layers = layers.flat();\n        let fullData = [];\n        for (let lIdx = 0; lIdx < layers.length; lIdx++) {\n            for (let bIdx = 0; bIdx < layers[lIdx].length; bIdx++) {\n                fullData = fullData.concat(layers[lIdx][bIdx]);\n            }\n        }\n        let mean = d3.mean(fullData);\n        let sigma = d3.deviation(fullData);\n        self.gaussianLine = {\n            ...self.gaussianLine,\n            mean, sigma,\n            width: 2,\n        }\n        self.gaussianLine.fn = (function (x) {\n            let mean = this.mean;\n            let sigma = this.sigma;\n            let gaussianConstant = 1 / Math.sqrt(2 * Math.PI);\n            x = (x - mean) / sigma;\n            return gaussianConstant * Math.exp(-.5 * x * x) / sigma;\n        }).bind(self.gaussianLine);\n        self.gaussianLine.color = self.gaussianLine.color || colorGenerator();\n        self.gaussianLine.sigmaLines = [\n            { color: self.gaussianLine.color, value: mean - sigma },\n            { color: self.gaussianLine.color, value: mean + sigma }\n        ]\n    }\n    this.condition4LogNormalD = function () {\n        return getLayerUseGssn() && Object.keys(self.logNormalDLine || {}).length && self.config.notUsedGaussian;\n    }\n    this.setLogNormalDFn = function (layers) {\n        self.logNormalDLine = self.logNormalDLine || {};\n        if (!layers.length) {\n            self.logNormalDLine._notUsed = true;\n            return;\n        }\n        layers = layers.filter(l => l._useGssn);\n        self.logNormalDLine._notUsed = false;\n        if (self.getStackMode() === 'well' ||\n            self.getStackMode() === 'zone' ||\n            self.getStackMode() === 'all') layers = layers.flat();\n        let fullData = [];\n        for (let lIdx = 0; lIdx < layers.length; lIdx++) {\n            for (let bIdx = 0; bIdx < layers[lIdx].length; bIdx++) {\n                fullData = fullData.concat(layers[lIdx][bIdx]);\n            }\n        }\n        let mean = d3.mean(fullData);\n        let sigma = d3.deviation(fullData);\n        self.logNormalDLine = {\n            ...self.logNormalDLine,\n            mean, sigma,\n            width: 2\n        }\n        self.logNormalDLine.fn = (function (x) {\n            if (x <= 0) return 0;\n            let mean = this.mean,\n                sigma = this.sigma,\n                s2 = Math.pow(sigma, 2),\n                A = 1 / (Math.sqrt(2 * Math.PI)),\n                B = -1 / (2 * s2);\n            return (1 / (x * sigma)) * A * Math.exp(B * Math.pow(Math.log(x) - mean, 2));\n        }).bind(self.logNormalDLine);\n        self.logNormalDLine.color = self.logNormalDLine.color || colorGenerator();\n    }\n    this.getCumulativeX = cmlt => {\n        return cmlt.x;\n    };\n    this.getCumulativeY = cmlt => {\n        return cmlt.y;\n    }\n\n    function colorGenerator() {\n        let rand = function () {\n            return Math.floor(Math.random() * 255);\n        }\n        return \"rgb(\" + rand() + \",\" + rand() + \",\" + rand() + \")\";\n    }\n\n    this.getMarkerGaussianVal = (marker, idx) => (marker.value)\n    this.setMarkerGaussianVal = (marker, idx, newVal) => { marker.value = newVal; }\n    this.markerGaussianStyle = (marker, idx) => ({ stroke: marker.color, 'stroke-width': '2', fill: 'none' })\n    /*\n        this.getMarkerVal = (marker, idx) => (marker.value)\n        this.setMarkerVal = (marker, idx, newVal) => {marker.value = newVal;}\n        this.markerStyle = (marker, idx) => ({stroke:marker.color,'stroke-width':'2', fill:'none'})\n        this.markerName = (marker, idx) => (marker.name)\n        */\n    this.resetHistogramList = resetHistograms;\n    function resetHistograms() {\n        self.histogramList = [];\n    }\n    this.changeHistogramMode = changeHistogramMode;\n    function changeHistogramMode(option) {\n        self.config.histogramMode = option;\n    }\n    this.getHistogramMode = getHistogramMode;\n    function getHistogramMode() {\n        return self.config.histogramMode || 'frequency';\n    }\n}\n","exports.convertToCSV = convertToCSV;\nfunction convertToCSV(objArray) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n\n    for (var i = 0; i < array.length; i++) {\n        let line = '';\n        for (let index in array[i]) {\n            if (line != '') line += ','\n\n            line += array[i][index];\n        }\n        str += line + '\\r\\n';\n    }\n    return str;\n}\n\nexports.exportCSVFile = function(headers, items, fileTitle) {\n    if (headers) {\n        items.unshift(headers);\n    }\n    let jsonObject = JSON.stringify(items);\n    let csv = convertToCSV(jsonObject);\n    let exportedFilenmae = fileTitle + '.csv' || 'export.csv';\n    let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    if (navigator.msSaveBlob) { // IE 10+\n        navigator.msSaveBlob(blob, exportedFilenmae);\n    } else {\n        let a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = exportedFilenmae;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    }\n}\n\nexports.getWellColor = getWellColor;\nfunction getWellColor(well) {\n    let color = well.color;\n    if (isArray(color)) {\n        let colorArr = toArray(color);\n        return colorArr[(well._idx || 0) % colorArr.length];\n    }\n    return well.color;\n}\nexports.toArray = toArray;\nfunction toArray(value) {\n    if (Array.isArray(value))\n        return value;\n    else if (typeof(value) == 'string') {\n        try {\n            return JSON.parse(value);\n        } catch(e) {\n            return [];\n        }\n    } else\n        return [];\n}\nexports.isArray = isArray;\nfunction isArray(value) {\n    if (typeof(value) == 'string') {\n        try {\n            const json = JSON.parse(value);\n            if (Array.isArray(json))\n                return true;\n            else\n                return false;\n        } catch (e) {\n            return false;\n        }\n    } else if (Array.isArray(value)) {\n        return true;\n    }\n    return false;\n}\nexports.palette2RGB = palette2RGB;\nfunction palette2RGB(palette, semiTransparent) {\n    if (!palette || !Object.keys(palette).length) return 'transparent';\n    return `rgb(${palette.red},${palette.green},${palette.blue},${semiTransparent ? palette.alpha / 2 : 1})`\n}\n","const DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n/**\n* Determine the coefficient of determination (r^2) of a fit from the observations\n* and predictions.\n*\n* @param {Array<Array<number>>} data - Pairs of observed x-y values\n* @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n*\n* @return {number} - The r^2 value, or NaN if one cannot be calculated.\n*/\nfunction determinationCoefficient(data, results) {\n  const predictions = [];\n  const observations = [];\n\n  data.forEach((d, i) => {\n    if (d[1] !== null) {\n      observations.push(d);\n      predictions.push(results[i]);\n    }\n  });\n\n  const sum = observations.reduce((a, observation) => a + observation[1], 0);\n  const mean = sum / observations.length;\n\n  const ssyy = observations.reduce((a, observation) => {\n    const difference = observation[1] - mean;\n    return a + (difference * difference);\n  }, 0);\n\n  const sse = observations.reduce((accum, observation, index) => {\n    const prediction = predictions[index];\n    const residual = observation[1] - prediction[1];\n    return accum + (residual * residual);\n  }, 0);\n\n  return 1 - (sse / ssyy);\n}\n\n/**\n* Determine the solution of a system of linear equations A * x = b using\n* Gaussian elimination.\n*\n* @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n* @param {number} order - How many degrees to solve for\n*\n* @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n*/\nfunction gaussianElimination(input, order) {\n  const matrix = input;\n  const n = input.length - 1;\n  const coefficients = [order];\n\n  for (let i = 0; i < n; i++) {\n    let maxrow = i;\n    for (let j = i + 1; j < n; j++) {\n      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n        maxrow = j;\n      }\n    }\n\n    for (let k = i; k < n + 1; k++) {\n      const tmp = matrix[k][i];\n      matrix[k][i] = matrix[k][maxrow];\n      matrix[k][maxrow] = tmp;\n    }\n\n    for (let j = i + 1; j < n; j++) {\n      for (let k = n; k >= i; k--) {\n        matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];\n      }\n    }\n  }\n\n  for (let j = n - 1; j >= 0; j--) {\n    let total = 0;\n    for (let k = j + 1; k < n; k++) {\n      total += matrix[k][j] * coefficients[k];\n    }\n\n    coefficients[j] = (matrix[n][j] - total) / matrix[j][j];\n  }\n\n  return coefficients;\n}\n\n/**\n* Round a number to a precision, specificed in number of decimal places\n*\n* @param {number} number - The number to round\n* @param {number} precision - The number of decimal places to round to:\n*                             > 0 means decimals, < 0 means powers of 10\n*\n*\n* @return {numbr} - The number, rounded\n*/\nfunction round(number, precision) {\n  const factor = 10 ** precision;\n  return Math.round(number * factor) / factor;\n}\n\nfunction sumReducer(sum, curr) {\n  return sum + curr;\n}\n\nfunction getLinearArgs(data, options) {\n  const x0 = options.fitX;\n  const y0 = options.fitY;\n\n  const xData = data.map(d => d[0]);\n  const yData = data.map(d => d[1]);\n\n  const meanX = Number.isFinite(x0) ? x0 : ((xData.reduce(sumReducer, 0) * 1.0) / xData.length);\n  const meanY = Number.isFinite(y0) ? y0 : ((yData.reduce(sumReducer, 0) * 1.0) / yData.length);\n\n  const rise = xData.map((d, i) => (d - meanX) * (yData[i] - meanY)).reduce(sumReducer, 0);\n  const run = xData.map(d => (d - meanX) ** 2).reduce(sumReducer, 0);\n\n  const slope = run === 0 ? 0 : round(rise / run, options.precision);\n  const intercept = round(meanY - (meanX * slope), options.precision);\n  return [slope, intercept];\n}\n\n/**\n* The set of all fitting methods\n*\n* @namespace\n*/\nconst methods = {\n  linear(data, options) {\n    const filterData = data.filter(d => Number.isFinite(d[0]) && Number.isFinite(d[1]));\n    const args = getLinearArgs(filterData, options);\n    const slope = args[0];\n    const intercept = args[1];\n    const predict = x => ([\n      round(x, options.precision),\n      round((slope * x) + intercept, options.precision),\n    ]);\n\n    const points = data.map(point => predict(point[0]));\n\n    return {\n      points,\n      predict,\n      equation: [slope, intercept],\n      r2: round(determinationCoefficient(data, points), options.precision),\n      string: intercept === 0 ? `y = ${slope}x` : `y = ${slope}x + ${intercept}`,\n    };\n  },\n\n  exponential(data, options) {\n    const filterData = data.filter(d => Number.isFinite(d[0]) && Number.isFinite(d[1]))\n      .map(d => [d[0], Math.log(d[1])]);\n    const args = getLinearArgs(filterData, options);\n    const slope = args[0];\n    const intercept = round(Math.exp(args[1]), options.precision);\n    const predict = x => ([\n      round(x, options.precision),\n      round(intercept * Math.exp(slope * x), options.precision),\n    ]);\n\n    const points = data.map(point => predict(point[0]));\n\n    return {\n      points,\n      predict,\n      equation: [intercept, slope],\n      string: `y = ${intercept}e^(${slope}x)`,\n      r2: round(determinationCoefficient(data, points), options.precision),\n    };\n  },\n\n  power(data, options) {\n    const filterData = data.filter(d => Number.isFinite(d[0]) && Number.isFinite(d[1]))\n      .map(d => [Math.log(d[0]), Math.log(d[1])]);\n    const args = getLinearArgs(filterData, options);\n    const slope = args[0];\n    const intercept = round(Math.exp(args[1]), options.precision);\n\n    const predict = x => ([\n      round(x, options.precision),\n      round(round(intercept * (x ** slope), options.precision), options.precision),\n    ]);\n\n    const points = data.map(point => predict(point[0]));\n\n    return {\n      points,\n      predict,\n      equation: [intercept, slope],\n      string: `y = ${intercept}x^${slope}`,\n      r2: round(determinationCoefficient(data, points), options.precision),\n    };\n  },\n\n  polynomial(data, options) {\n    const lhs = [];\n    const rhs = [];\n    let a = 0;\n    let b = 0;\n    const len = data.length;\n    const k = options.order + 1;\n\n    for (let i = 0; i < k; i++) {\n      for (let l = 0; l < len; l++) {\n        if (data[l][1] !== null) {\n          a += (data[l][0] ** i) * data[l][1];\n        }\n      }\n\n      lhs.push(a);\n      a = 0;\n\n      const c = [];\n      for (let j = 0; j < k; j++) {\n        for (let l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            b += data[l][0] ** (i + j);\n          }\n        }\n        c.push(b);\n        b = 0;\n      }\n      rhs.push(c);\n    }\n    rhs.push(lhs);\n\n    const coefficients = gaussianElimination(rhs, k).map(v => round(v, options.precision));\n\n    const predict = x => ([\n      round(x, options.precision),\n      round(\n        coefficients.reduce((sum, coeff, power) => sum + (coeff * (x ** power)), 0),\n        options.precision,\n      ),\n    ]);\n\n    const points = data.map(point => predict(point[0]));\n\n    let string = 'y = ';\n    for (let i = coefficients.length - 1; i >= 0; i--) {\n      if (i > 1) {\n        string += `${coefficients[i]}x^${i} + `;\n      } else if (i === 1) {\n        string += `${coefficients[i]}x + `;\n      } else {\n        string += coefficients[i];\n      }\n    }\n\n    return {\n      string,\n      points,\n      predict,\n      equation: [...coefficients].reverse(),\n      r2: round(determinationCoefficient(data, points), options.precision),\n    };\n  },\n};\n\nfunction createWrapper() {\n  const reduce = (accumulator, name) => ({\n    _round: round,\n    ...accumulator,\n    [name](data, supplied) {\n      return methods[name](data, {\n        ...DEFAULT_OPTIONS,\n        ...supplied,\n      });\n    },\n  });\n\n  return Object.keys(methods).reduce(reduce, {});\n}\n\nmodule.exports = createWrapper();\n","module.exports = __WEBPACK_EXTERNAL_MODULE__revotechuet_misc_component_vue__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":[],"sourceRoot":""}